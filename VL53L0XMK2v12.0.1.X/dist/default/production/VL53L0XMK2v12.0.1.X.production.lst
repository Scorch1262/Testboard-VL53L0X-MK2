

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 18 20:47:58 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=2,class=CODE,delta=1
   121                           	psect	text106,global,reloc=2,class=CODE,delta=1
   122                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   126                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   128  0000                     
   129                           ; Version 2.20
   130                           ; Generated 05/05/2020 GMT
   131                           ; 
   132                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F46K20 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	smallconst
   165  001000                     __psmallconst:
   166                           	callstack 0
   167  001000  00                 	db	0
   168  001001                     _fsmStateTable:
   169                           	callstack 0
   170  001001  C8                 	db	low _I2C_DO_IDLE
   171  001002  68                 	db	high _I2C_DO_IDLE
   172  001003  A0                 	db	low _I2C_DO_SEND_ADR_READ
   173  001004  68                 	db	high _I2C_DO_SEND_ADR_READ
   174  001005  90                 	db	low _I2C_DO_SEND_ADR_WRITE
   175  001006  68                 	db	high _I2C_DO_SEND_ADR_WRITE
   176  001007  FC                 	db	low _I2C_DO_TX
   177  001008  58                 	db	high _I2C_DO_TX
   178  001009  DA                 	db	low _I2C_DO_RX
   179  00100A  5B                 	db	high _I2C_DO_RX
   180  00100B  BC                 	db	low _I2C_DO_RCEN
   181  00100C  68                 	db	high _I2C_DO_RCEN
   182  00100D  2A                 	db	low _I2C_DO_TX_EMPTY
   183  00100E  5E                 	db	high _I2C_DO_TX_EMPTY
   184  00100F  5A                 	db	low _I2C_DO_SEND_RESTART_READ
   185  001010  69                 	db	high _I2C_DO_SEND_RESTART_READ
   186  001011  52                 	db	low _I2C_DO_SEND_RESTART_WRITE
   187  001012  69                 	db	high _I2C_DO_SEND_RESTART_WRITE
   188  001013  4A                 	db	low _I2C_DO_SEND_RESTART
   189  001014  69                 	db	high _I2C_DO_SEND_RESTART
   190  001015  42                 	db	low _I2C_DO_SEND_STOP
   191  001016  69                 	db	high _I2C_DO_SEND_STOP
   192  001017  3A                 	db	low _I2C_DO_RX_ACK
   193  001018  69                 	db	high _I2C_DO_RX_ACK
   194  001019  32                 	db	low _I2C_DO_RX_NACK_STOP
   195  00101A  69                 	db	high _I2C_DO_RX_NACK_STOP
   196  00101B  2A                 	db	low _I2C_DO_RX_NACK_RESTART
   197  00101C  69                 	db	high _I2C_DO_RX_NACK_RESTART
   198  00101D  B0                 	db	low _I2C_DO_RESET
   199  00101E  68                 	db	high _I2C_DO_RESET
   200  00101F  E8                 	db	low _I2C_DO_ADDRESS_NACK
   201  001020  60                 	db	high _I2C_DO_ADDRESS_NACK
   202  001021                     __end_of_fsmStateTable:
   203                           	callstack 0
   204  001021                     STR_1:
   205  001021  44                 	db	68	;'D'
   206  001022  69                 	db	105	;'i'
   207  001023  73                 	db	115	;'s'
   208  001024  74                 	db	116	;'t'
   209  001025  61                 	db	97	;'a'
   210  001026  6E                 	db	110	;'n'
   211  001027  7A                 	db	122	;'z'
   212  001028  20                 	db	32
   213  001029  3D                 	db	61	;'='
   214  00102A  20                 	db	32
   215  00102B  3E                 	db	62	;'>'
   216  00102C  32                 	db	50	;'2'
   217  00102D  30                 	db	48	;'0'
   218  00102E  30                 	db	48	;'0'
   219  00102F  30                 	db	48	;'0'
   220  001030  6D                 	db	109	;'m'
   221  001031  6D                 	db	109	;'m'
   222  001032  20                 	db	32
   223  001033  09                 	db	9
   224  001034  20                 	db	32
   225  001035  3E                 	db	62	;'>'
   226  001036  32                 	db	50	;'2'
   227  001037  30                 	db	48	;'0'
   228  001038  30                 	db	48	;'0'
   229  001039  63                 	db	99	;'c'
   230  00103A  6D                 	db	109	;'m'
   231  00103B  0D                 	db	13
   232  00103C  0A                 	db	10
   233  00103D  00                 	db	0
   234  00103E                     STR_2:
   235  00103E  44                 	db	68	;'D'
   236  00103F  69                 	db	105	;'i'
   237  001040  73                 	db	115	;'s'
   238  001041  74                 	db	116	;'t'
   239  001042  61                 	db	97	;'a'
   240  001043  6E                 	db	110	;'n'
   241  001044  7A                 	db	122	;'z'
   242  001045  20                 	db	32
   243  001046  3D                 	db	61	;'='
   244  001047  20                 	db	32
   245  001048  25                 	db	37
   246  001049  2E                 	db	46
   247  00104A  30                 	db	48	;'0'
   248  00104B  66                 	db	102	;'f'
   249  00104C  6D                 	db	109	;'m'
   250  00104D  6D                 	db	109	;'m'
   251  00104E  20                 	db	32
   252  00104F  09                 	db	9
   253  001050  20                 	db	32
   254  001051  25                 	db	37
   255  001052  2E                 	db	46
   256  001053  31                 	db	49	;'1'
   257  001054  66                 	db	102	;'f'
   258  001055  63                 	db	99	;'c'
   259  001056  6D                 	db	109	;'m'
   260  001057  0D                 	db	13
   261  001058  0A                 	db	10
   262  001059  00                 	db	0
   263  00105A                     STR_3:
   264  00105A  49                 	db	73	;'I'
   265  00105B  4E                 	db	78	;'N'
   266  00105C  46                 	db	70	;'F'
   267  00105D  00                 	db	0
   268  00105E                     STR_7:
   269  00105E  4E                 	db	78	;'N'
   270  00105F  41                 	db	65	;'A'
   271  001060  4E                 	db	78	;'N'
   272  001061  00                 	db	0
   273  001062                     STR_4:
   274  001062  69                 	db	105	;'i'
   275  001063  6E                 	db	110	;'n'
   276  001064  66                 	db	102	;'f'
   277  001065  00                 	db	0
   278  001066                     STR_8:
   279  001066  6E                 	db	110	;'n'
   280  001067  61                 	db	97	;'a'
   281  001068  6E                 	db	110	;'n'
   282  001069  00                 	db	0
   283  00106A                     STR_11:
   284  00106A  6C                 	db	108	;'l'
   285  00106B  66                 	db	102	;'f'
   286  00106C  00                 	db	0
   287  00106D  00                 	db	0	; dummy byte at the end
   288  0000                     
   289                           	psect	nvBANK0
   290  0000FD                     __pnvBANK0:
   291                           	callstack 0
   292  0000FD                     _EUSART_TxDefaultInterruptHandler:
   293                           	callstack 0
   294  0000FD                     	ds	2
   295  0000FF                     _eusartTxBufferRemaining:
   296                           	callstack 0
   297  0000FF                     	ds	1
   298                           
   299                           	psect	nvBANK1
   300  000170                     __pnvBANK1:
   301                           	callstack 0
   302  000170                     _EUSART_ErrorHandler:
   303                           	callstack 0
   304  000170                     	ds	2
   305  000172                     _EUSART_OverrunErrorHandler:
   306                           	callstack 0
   307  000172                     	ds	2
   308  000174                     _EUSART_FramingErrorHandler:
   309                           	callstack 0
   310  000174                     	ds	2
   311  000176                     _EUSART_RxDefaultInterruptHandler:
   312                           	callstack 0
   313  000176                     	ds	2
   314  0000                     _LATDbits	set	3980
   315  0000                     _RCONbits	set	4048
   316  0000                     _RCREG	set	4014
   317  0000                     _RCSTAbits	set	4011
   318  0000                     _TXREG	set	4013
   319  0000                     _TXSTAbits	set	4012
   320  0000                     _SPBRGH	set	4016
   321  0000                     _SPBRG	set	4015
   322  0000                     _TXSTA	set	4012
   323  0000                     _RCSTA	set	4011
   324  0000                     _BAUDCON	set	4024
   325  0000                     _INTCONbits	set	4082
   326  0000                     _INTCON2bits	set	4081
   327  0000                     _WPUB	set	3964
   328  0000                     _ANSELH	set	3967
   329  0000                     _ANSEL	set	3966
   330  0000                     _TRISD	set	3989
   331  0000                     _TRISC	set	3988
   332  0000                     _TRISB	set	3987
   333  0000                     _TRISA	set	3986
   334  0000                     _TRISE	set	3990
   335  0000                     _LATC	set	3979
   336  0000                     _LATB	set	3978
   337  0000                     _LATA	set	3977
   338  0000                     _LATD	set	3980
   339  0000                     _LATE	set	3981
   340  0000                     _OSCTUNE	set	3995
   341  0000                     _OSCCON	set	4051
   342  0000                     _PIR1bits	set	3998
   343  0000                     _PIE1bits	set	3997
   344  0000                     _SSPSTATbits	set	4039
   345  0000                     _PIR2bits	set	4001
   346  0000                     _SSPCON2bits	set	4037
   347  0000                     _SSPBUF	set	4041
   348  0000                     _SSPCON1bits	set	4038
   349  0000                     _SSPADD	set	4040
   350  0000                     _SSPCON2	set	4037
   351  0000                     _SSPCON1	set	4038
   352  0000                     _SSPSTAT	set	4039
   353                           
   354                           ; #config settings
   355                           
   356                           	psect	cinit
   357  00661A                     __pcinit:
   358                           	callstack 0
   359  00661A                     start_initialization:
   360                           	callstack 0
   361  00661A                     __initialization:
   362                           	callstack 0
   363                           
   364                           ; Clear objects allocated to BANK1 (112 bytes)
   365  00661A  EE01  F000         	lfsr	0,__pbssBANK1
   366  00661E  0E70               	movlw	112
   367  006620                     clear_0:
   368  006620  6AEE               	clrf	postinc0,c
   369  006622  06E8               	decf	wreg,f,c
   370  006624  E1FD               	bnz	clear_0
   371                           
   372                           ; Clear objects allocated to BANK0 (85 bytes)
   373  006626  EE00  F060         	lfsr	0,__pbssBANK0
   374  00662A  0E55               	movlw	85
   375  00662C                     clear_1:
   376  00662C  6AEE               	clrf	postinc0,c
   377  00662E  06E8               	decf	wreg,f,c
   378  006630  E1FD               	bnz	clear_1
   379                           
   380                           ; Clear objects allocated to COMRAM (5 bytes)
   381  006632  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   382  006634  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   383  006636  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   384  006638  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   385  00663A  6A56               	clrf	__pbssCOMRAM& (0+255),c
   386  00663C                     end_of_initialization:
   387                           	callstack 0
   388  00663C                     __end_of__initialization:
   389                           	callstack 0
   390  00663C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   391  00663E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   392  006640  0100               	movlb	0
   393  006642  EF0C  F029         	goto	_main	;jump to C main() function
   394                           
   395                           	psect	bssCOMRAM
   396  000056                     __pbssCOMRAM:
   397                           	callstack 0
   398  000056                     _eusartRxCount:
   399                           	callstack 0
   400  000056                     	ds	1
   401  000057                     _eusartRxTail:
   402                           	callstack 0
   403  000057                     	ds	1
   404  000058                     _eusartRxHead:
   405                           	callstack 0
   406  000058                     	ds	1
   407  000059                     _eusartTxTail:
   408                           	callstack 0
   409  000059                     	ds	1
   410  00005A                     _eusartTxHead:
   411                           	callstack 0
   412  00005A                     	ds	1
   413                           
   414                           	psect	bssBANK0
   415  000060                     __pbssBANK0:
   416                           	callstack 0
   417  000060                     _I2C_Status:
   418                           	callstack 0
   419  000060                     	ds	36
   420  000084                     _eusartRxStatusBuffer:
   421                           	callstack 0
   422  000084                     	ds	8
   423  00008C                     floorf@F527:
   424                           	callstack 0
   425  00008C                     	ds	4
   426  000090                     ___fpclassifyf@F465:
   427                           	callstack 0
   428  000090                     	ds	4
   429  000094                     _range_cm:
   430                           	callstack 0
   431  000094                     	ds	4
   432  000098                     _range_mm:
   433                           	callstack 0
   434  000098                     	ds	4
   435  00009C                     _nout:
   436                           	callstack 0
   437  00009C                     	ds	2
   438  00009E                     _width:
   439                           	callstack 0
   440  00009E                     	ds	2
   441  0000A0                     _prec:
   442                           	callstack 0
   443  0000A0                     	ds	2
   444  0000A2                     _flags:
   445                           	callstack 0
   446  0000A2                     	ds	2
   447  0000A4                     _eusartRxLastError:
   448                           	callstack 0
   449  0000A4                     	ds	1
   450  0000A5                     _writeBuffer:
   451                           	callstack 0
   452  0000A5                     	ds	16
   453                           
   454                           	psect	bssBANK1
   455  000100                     __pbssBANK1:
   456                           	callstack 0
   457  000100                     _eusartRxBuffer:
   458                           	callstack 0
   459  000100                     	ds	8
   460  000108                     _eusartTxBuffer:
   461                           	callstack 0
   462  000108                     	ds	8
   463  000110                     _dbuf:
   464                           	callstack 0
   465  000110                     	ds	80
   466  000160                     _readBuffer:
   467                           	callstack 0
   468  000160                     	ds	16
   469                           
   470                           	psect	cstackBANK1
   471  000178                     __pcstackBANK1:
   472                           	callstack 0
   473  000178                     printf@ap:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x0
   477  000178                     	ds	2
   478  00017A                     ??_main:
   479                           
   480                           ; 1 bytes @ 0x2
   481  00017A                     	ds	2
   482                           
   483                           	psect	cstackBANK0
   484  0000B5                     __pcstackBANK0:
   485                           	callstack 0
   486  0000B5                     _efgtoa$2160:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x0
   490  0000B5                     	ds	2
   491  0000B7                     _efgtoa$2161:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x2
   495  0000B7                     	ds	2
   496  0000B9                     _efgtoa$2166:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x4
   500  0000B9                     	ds	2
   501  0000BB                     _efgtoa$2170:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x6
   505  0000BB                     	ds	2
   506  0000BD                     _efgtoa$2171:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x8
   510  0000BD                     	ds	2
   511  0000BF                     _efgtoa$2172:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xA
   515  0000BF                     	ds	2
   516  0000C1                     efgtoa@t:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0xC
   520  0000C1                     	ds	2
   521  0000C3                     efgtoa@pp:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xE
   525  0000C3                     	ds	2
   526  0000C5                     efgtoa@ne:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x10
   530  0000C5                     	ds	2
   531  0000C7                     efgtoa@m:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x12
   535  0000C7                     	ds	2
   536  0000C9                     efgtoa@ou:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x14
   540  0000C9                     	ds	4
   541  0000CD                     efgtoa@d:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x18
   545  0000CD                     	ds	2
   546  0000CF                     efgtoa@sign:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x1A
   550  0000CF                     	ds	2
   551  0000D1                     efgtoa@p:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x1C
   555  0000D1                     	ds	2
   556  0000D3                     efgtoa@w:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x1E
   560  0000D3                     	ds	2
   561  0000D5                     efgtoa@nmode:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x20
   565  0000D5                     	ds	1
   566  0000D6                     efgtoa@mode:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x21
   570  0000D6                     	ds	1
   571  0000D7                     efgtoa@h:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x22
   575  0000D7                     	ds	4
   576  0000DB                     efgtoa@l:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x26
   580  0000DB                     	ds	4
   581  0000DF                     efgtoa@i:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x2A
   585  0000DF                     	ds	2
   586  0000E1                     efgtoa@g:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x2C
   590  0000E1                     	ds	4
   591  0000E5                     efgtoa@e:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x30
   595  0000E5                     	ds	2
   596  0000E7                     efgtoa@n:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x32
   600  0000E7                     	ds	2
   601  0000E9                     efgtoa@u:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0x34
   605  0000E9                     	ds	4
   606  0000ED                     ?_vfprintf:
   607                           	callstack 0
   608  0000ED                     vfprintf@fp:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x38
   612  0000ED                     	ds	2
   613  0000EF                     vfprintf@fmt:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x3A
   617  0000EF                     	ds	2
   618  0000F1                     vfprintf@ap:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x3C
   622  0000F1                     	ds	2
   623  0000F3                     ?_printf:
   624                           	callstack 0
   625  0000F3                     printf@fmt:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x3E
   629  0000F3                     	ds	10
   630                           
   631                           	psect	cstackCOMRAM
   632  000001                     __pcstackCOMRAM:
   633                           	callstack 0
   634  000001                     ??_INTERRUPT_InterruptManager:
   635  000001                     
   636                           ; 1 bytes @ 0x0
   637  000001                     	ds	4
   638  000005                     ?_strlen:
   639                           	callstack 0
   640  000005                     ?___fpclassifyf:
   641                           	callstack 0
   642  000005                     ?_isupper:
   643                           	callstack 0
   644  000005                     ?_isdigit:
   645                           	callstack 0
   646  000005                     ?_strncmp:
   647                           	callstack 0
   648  000005                     ?_isspace:
   649                           	callstack 0
   650  000005                     ?___wmul:
   651                           	callstack 0
   652  000005                     ?___awdiv:
   653                           	callstack 0
   654  000005                     ?___awmod:
   655                           	callstack 0
   656  000005                     ?___fladd:
   657                           	callstack 0
   658  000005                     ?___fldiv:
   659                           	callstack 0
   660  000005                     ?___flmul:
   661                           	callstack 0
   662  000005                     ?___flneg:
   663                           	callstack 0
   664  000005                     ?___fltol:
   665                           	callstack 0
   666  000005                     ?___xxtofl:
   667                           	callstack 0
   668  000005                     I2C_Open@address:
   669                           	callstack 0
   670  000005                     I2C_Close@returnValue:
   671                           	callstack 0
   672  000005                     I2C_MasterSendTxData@data:
   673                           	callstack 0
   674  000005                     EUSART_Write@txData:
   675                           	callstack 0
   676  000005                     I2C_SetBuffer@buffer:
   677                           	callstack 0
   678  000005                     I2C_SetCallback@cb:
   679                           	callstack 0
   680  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   681                           	callstack 0
   682  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   683                           	callstack 0
   684  000005                     EUSART_SetErrorHandler@interruptHandler:
   685                           	callstack 0
   686  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   687                           	callstack 0
   688  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   689                           	callstack 0
   690  000005                     ___wmul@multiplier:
   691                           	callstack 0
   692  000005                     ___awdiv@dividend:
   693                           	callstack 0
   694  000005                     ___awmod@dividend:
   695                           	callstack 0
   696  000005                     isdigit@c:
   697                           	callstack 0
   698  000005                     isspace@c:
   699                           	callstack 0
   700  000005                     isupper@c:
   701                           	callstack 0
   702  000005                     strcpy@dest:
   703                           	callstack 0
   704  000005                     strlen@s:
   705                           	callstack 0
   706  000005                     strncmp@_l:
   707                           	callstack 0
   708  000005                     ___fleq@ff1:
   709                           	callstack 0
   710  000005                     ___flneg@f1:
   711                           	callstack 0
   712  000005                     ___fltol@f1:
   713                           	callstack 0
   714  000005                     ___fladd@b:
   715                           	callstack 0
   716  000005                     ___fldiv@b:
   717                           	callstack 0
   718  000005                     ___flmul@b:
   719                           	callstack 0
   720  000005                     ___xxtofl@val:
   721                           	callstack 0
   722  000005                     ___fpclassifyf@x:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x4
   726  000005                     	ds	1
   727  000006                     I2C_Open@returnValue:
   728                           	callstack 0
   729  000006                     putch@txData:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x5
   733  000006                     	ds	1
   734  000007                     ??_isupper:
   735  000007                     ??_isdigit:
   736  000007                     ??_isspace:
   737  000007                     I2C_SetBuffer@bufferSize:
   738                           	callstack 0
   739  000007                     I2C_SetCallback@ptr:
   740                           	callstack 0
   741  000007                     ___wmul@multiplicand:
   742                           	callstack 0
   743  000007                     ___awdiv@divisor:
   744                           	callstack 0
   745  000007                     ___awmod@divisor:
   746                           	callstack 0
   747  000007                     fputc@c:
   748                           	callstack 0
   749  000007                     strcpy@src:
   750                           	callstack 0
   751  000007                     strlen@a:
   752                           	callstack 0
   753  000007                     strncmp@_r:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x6
   757  000007                     	ds	2
   758  000009                     ??___fpclassifyf:
   759  000009                     ??_strcpy:
   760  000009                     ??___fltol:
   761  000009                     ??___xxtofl:
   762  000009                     I2C_SetCallback@idx:
   763                           	callstack 0
   764  000009                     ___awdiv@counter:
   765                           	callstack 0
   766  000009                     ___awmod@counter:
   767                           	callstack 0
   768  000009                     ___wmul@product:
   769                           	callstack 0
   770  000009                     fputc@fp:
   771                           	callstack 0
   772  000009                     strncmp@n:
   773                           	callstack 0
   774  000009                     ___fleq@ff2:
   775                           	callstack 0
   776  000009                     ___fladd@a:
   777                           	callstack 0
   778  000009                     ___fldiv@a:
   779                           	callstack 0
   780  000009                     ___flmul@a:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x8
   784  000009                     	ds	1
   785  00000A                     ___awdiv@sign:
   786                           	callstack 0
   787  00000A                     ___awmod@sign:
   788                           	callstack 0
   789  00000A                     I2C_SetDataCompleteCallback@cb:
   790                           	callstack 0
   791  00000A                     I2C_SetAddressNackCallback@cb:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x9
   795  00000A                     	ds	1
   796  00000B                     ??_fputc:
   797  00000B                     ??_strncmp:
   798  00000B                     ?_tolower:
   799                           	callstack 0
   800  00000B                     _isspace$2255:
   801                           	callstack 0
   802  00000B                     ___awdiv@quotient:
   803                           	callstack 0
   804  00000B                     strcpy@s:
   805                           	callstack 0
   806  00000B                     tolower@c:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0xA
   810  00000B                     	ds	1
   811  00000C                     ?_atoi:
   812                           	callstack 0
   813  00000C                     I2C_SetDataCompleteCallback@ptr:
   814                           	callstack 0
   815  00000C                     I2C_SetAddressNackCallback@ptr:
   816                           	callstack 0
   817  00000C                     atoi@s:
   818                           	callstack 0
   819  00000C                     strncmp@l:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0xB
   823  00000C                     	ds	1
   824  00000D                     ??___fladd:
   825  00000D                     ??___fldiv:
   826  00000D                     ??___flmul:
   827  00000D                     ??_tolower:
   828  00000D                     ??___fleq:
   829  00000D                     ___fltol@sign1:
   830                           	callstack 0
   831  00000D                     ___xxtofl@sign:
   832                           	callstack 0
   833  00000D                     ___fpclassifyf@e:
   834                           	callstack 0
   835  00000D                     strcpy@d:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0xC
   839  00000D                     	ds	1
   840  00000E                     ??_atoi:
   841  00000E                     ___fltol@exp1:
   842                           	callstack 0
   843  00000E                     ___xxtofl@exp:
   844                           	callstack 0
   845  00000E                     rd1RegCompleteHandler@ptr:
   846                           	callstack 0
   847  00000E                     rd2RegCompleteHandler@ptr:
   848                           	callstack 0
   849  00000E                     wr1RegCompleteHandler@ptr:
   850                           	callstack 0
   851  00000E                     wr2RegCompleteHandler@ptr:
   852                           	callstack 0
   853  00000E                     rdBlkRegCompleteHandler@ptr:
   854                           	callstack 0
   855  00000E                     I2C_CallbackReturnReset@funPtr:
   856                           	callstack 0
   857  00000E                     strncmp@r:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0xD
   861  00000E                     	ds	1
   862  00000F                     ___xxtofl@arg:
   863                           	callstack 0
   864  00000F                     ___fpclassifyf@u:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0xE
   868  00000F                     	ds	1
   869  000010                     ??_I2C_DO_TX:
   870  000010                     ??_I2C_DO_RX:
   871  000010                     ??_I2C_DO_TX_EMPTY:
   872  000010                     ??_I2C_DO_ADDRESS_NACK:
   873  000010                     fputs@s:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xF
   877  000010                     	ds	1
   878  000011                     ___fladd@signs:
   879                           	callstack 0
   880  000011                     ___flmul@sign:
   881                           	callstack 0
   882  000011                     _tolower$2313:
   883                           	callstack 0
   884  000011                     ___fldiv@rem:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x10
   888  000011                     	ds	1
   889  000012                     ??_I2C_MasterFsm:
   890  000012                     ___fladd@aexp:
   891                           	callstack 0
   892  000012                     ___flmul@aexp:
   893                           	callstack 0
   894  000012                     atoi@neg:
   895                           	callstack 0
   896  000012                     fputs@fp:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x11
   900  000012                     	ds	1
   901  000013                     ___fladd@bexp:
   902                           	callstack 0
   903  000013                     ___flmul@grs:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x12
   907  000013                     	ds	1
   908  000014                     I2C_MasterOperation@read:
   909                           	callstack 0
   910  000014                     ___fladd@grs:
   911                           	callstack 0
   912  000014                     fputs@c:
   913                           	callstack 0
   914  000014                     _atoi$2224:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x13
   918  000014                     	ds	1
   919  000015                     I2C_MasterOperation@returnValue:
   920                           	callstack 0
   921  000015                     ___fldiv@sign:
   922                           	callstack 0
   923  000015                     fputs@i:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x14
   927  000015                     	ds	1
   928  000016                     ?_I2C_Read2ByteRegister:
   929                           	callstack 0
   930  000016                     I2C_Read1ByteRegister@reg:
   931                           	callstack 0
   932  000016                     I2C_Read2ByteRegister@reg:
   933                           	callstack 0
   934  000016                     I2C_Write1ByteRegister@reg:
   935                           	callstack 0
   936  000016                     I2C_WriteNBytes@data:
   937                           	callstack 0
   938  000016                     I2C_ReadNBytes@data:
   939                           	callstack 0
   940  000016                     ___fldiv@new_exp:
   941                           	callstack 0
   942  000016                     _atoi$2226:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x15
   946  000016                     	ds	1
   947  000017                     ?_pad:
   948                           	callstack 0
   949  000017                     I2C_Read1ByteRegister@address:
   950                           	callstack 0
   951  000017                     I2C_Write1ByteRegister@data:
   952                           	callstack 0
   953  000017                     ___flmul@bexp:
   954                           	callstack 0
   955  000017                     pad@fp:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x16
   959  000017                     	ds	1
   960  000018                     ??_I2C_Read2ByteRegister:
   961  000018                     I2C_Read1ByteRegister@returnValue:
   962                           	callstack 0
   963  000018                     I2C_Write1ByteRegister@address:
   964                           	callstack 0
   965  000018                     _atoi$2225:
   966                           	callstack 0
   967  000018                     I2C_WriteNBytes@len:
   968                           	callstack 0
   969  000018                     I2C_ReadNBytes@len:
   970                           	callstack 0
   971  000018                     ___fldiv@grs:
   972                           	callstack 0
   973  000018                     ___flmul@prod:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0x17
   977  000018                     	ds	1
   978  000019                     VL53L0X_SetAdd@new:
   979                           	callstack 0
   980  000019                     pad@buf:
   981                           	callstack 0
   982  000019                     atoi@n:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x18
   986  000019                     	ds	1
   987  00001A                     I2C_WriteNBytes@address:
   988                           	callstack 0
   989  00001A                     I2C_ReadNBytes@address:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x19
   993  00001A                     	ds	1
   994  00001B                     I2C_Read2ByteRegister@address:
   995                           	callstack 0
   996  00001B                     pad@p:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x1A
  1000  00001B                     	ds	1
  1001  00001C                     ___fldiv@bexp:
  1002                           	callstack 0
  1003  00001C                     I2C_Read2ByteRegister@returnValue:
  1004                           	callstack 0
  1005  00001C                     ___flmul@temp:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x1B
  1009  00001C                     	ds	1
  1010  00001D                     ??_pad:
  1011  00001D                     ___fldiv@aexp:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x1C
  1015  00001D                     	ds	1
  1016  00001E                     ??_VL53L0X_Init:
  1017  00001E                     ?_VL53L0X_Millimeter_GetValue:
  1018                           	callstack 0
  1019  00001E                     ?___flsub:
  1020                           	callstack 0
  1021  00001E                     ?_floorf:
  1022                           	callstack 0
  1023  00001E                     pad@i:
  1024                           	callstack 0
  1025  00001E                     ___flge@ff1:
  1026                           	callstack 0
  1027  00001E                     ___flsub@b:
  1028                           	callstack 0
  1029  00001E                     floorf@x:
  1030                           	callstack 0
  1031                           
  1032                           ; 4 bytes @ 0x1D
  1033  00001E                     	ds	1
  1034  00001F                     VL53L0X_Init@data16:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x1E
  1038  00001F                     	ds	1
  1039  000020                     pad@w:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x1F
  1043  000020                     	ds	1
  1044  000021                     VL53L0X_Init@data8:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x20
  1048  000021                     	ds	1
  1049  000022                     ??_VL53L0X_Millimeter_GetValue:
  1050  000022                     ??_floorf:
  1051  000022                     ___flge@ff2:
  1052                           	callstack 0
  1053  000022                     ___flsub@a:
  1054                           	callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x21
  1057  000022                     	ds	2
  1058  000024                     VL53L0X_Millimeter_GetValue@DistDistanzAnz:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x23
  1062  000024                     	ds	2
  1063  000026                     ??___flge:
  1064                           
  1065                           ; 1 bytes @ 0x25
  1066  000026                     	ds	2
  1067  000028                     VL53L0X_Millimeter_GetValue@data16:
  1068                           	callstack 0
  1069  000028                     floorf@m:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x27
  1073  000028                     	ds	2
  1074  00002A                     VL53L0X_Millimeter_GetValue@data8:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x29
  1078  00002A                     	ds	1
  1079  00002B                     VL53L0X_Millimeter_GetValue@addr:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x2A
  1083  00002B                     	ds	1
  1084  00002C                     floorf@e:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x2B
  1088  00002C                     	ds	2
  1089  00002E                     floorf@u:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x2D
  1093  00002E                     	ds	4
  1094  000032                     ?_efgtoa:
  1095                           	callstack 0
  1096  000032                     efgtoa@fp:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x31
  1100  000032                     	ds	2
  1101  000034                     efgtoa@f:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x33
  1105  000034                     	ds	4
  1106  000038                     efgtoa@c:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x37
  1110  000038                     	ds	1
  1111  000039                     ??_efgtoa:
  1112                           
  1113                           ; 1 bytes @ 0x38
  1114  000039                     	ds	5
  1115  00003E                     ?_vfpfcnvrt:
  1116                           	callstack 0
  1117  00003E                     vfpfcnvrt@fp:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x3D
  1121  00003E                     	ds	2
  1122  000040                     vfpfcnvrt@fmt:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x3F
  1126  000040                     	ds	2
  1127  000042                     vfpfcnvrt@ap:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x41
  1131  000042                     	ds	2
  1132  000044                     ??_vfpfcnvrt:
  1133                           
  1134                           ; 1 bytes @ 0x43
  1135  000044                     	ds	4
  1136  000048                     _vfpfcnvrt$2186:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x47
  1140  000048                     	ds	2
  1141  00004A                     _vfpfcnvrt$2190:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x49
  1145  00004A                     	ds	2
  1146  00004C                     vfpfcnvrt@f:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x4B
  1150  00004C                     	ds	4
  1151  000050                     vfpfcnvrt@ct:
  1152                           	callstack 0
  1153                           
  1154                           ; 3 bytes @ 0x4F
  1155  000050                     	ds	3
  1156  000053                     vfpfcnvrt@c:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x52
  1160  000053                     	ds	1
  1161  000054                     vfprintf@cfmt:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x53
  1165  000054                     	ds	2
  1166  000056                     
  1167                           ; 1 bytes @ 0x55
  1168 ;;
  1169 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1170 ;;
  1171 ;; *************** function _main *****************
  1172 ;; Defined at:
  1173 ;;		line 56 in file "main.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;Total ram usage:        2 bytes
  1192 ;; Hardware stack levels required when called: 14
  1193 ;; This function calls:
  1194 ;;		_SYSTEM_Initialize
  1195 ;;		_VL53L0X_Init
  1196 ;;		_VL53L0X_Millimeter_GetValue
  1197 ;;		_VL53L0X_SetAdd
  1198 ;;		___fldiv
  1199 ;;		___flge
  1200 ;;		_printf
  1201 ;; This function is called by:
  1202 ;;		Startup code after reset
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text0
  1207  005218                     __ptext0:
  1208                           	callstack 0
  1209  005218                     _main:
  1210                           	callstack 17
  1211  005218                     
  1212                           ;main.c: 57:     SYSTEM_Initialize();
  1213  005218  EC18  F034         	call	_SYSTEM_Initialize	;wreg free
  1214  00521C  928C               	bcf	140,1,c	;volatile
  1215  00521E                     
  1216                           ;main.c: 60:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1217  00521E  0E1A               	movlw	26
  1218  005220  0101               	movlb	1	; () banked
  1219  005222  6F7A               	movwf	??_main& (0+255),b
  1220  005224  0EF8               	movlw	248
  1221  005226                     u8257:
  1222  005226  2EE8               	decfsz	wreg,f,c
  1223  005228  D7FE               	bra	u8257
  1224  00522A  2F7A               	decfsz	??_main& (0+255),f,b
  1225  00522C  D7FC               	bra	u8257
  1226  00522E  F000               	nop	
  1227  005230  828C               	bsf	140,1,c	;volatile
  1228  005232                     
  1229                           ;main.c: 62:     _delay((unsigned long)((150)*(8000000/4000.0)));
  1230  005232  0E02               	movlw	2
  1231  005234  0101               	movlb	1	; () banked
  1232  005236  6F7B               	movwf	(??_main+1)& (0+255),b
  1233  005238  0E86               	movlw	134
  1234  00523A  6F7A               	movwf	??_main& (0+255),b
  1235  00523C  0E99               	movlw	153
  1236  00523E                     u8267:
  1237  00523E  2EE8               	decfsz	wreg,f,c
  1238  005240  D7FE               	bra	u8267
  1239  005242  2F7A               	decfsz	??_main& (0+255),f,b
  1240  005244  D7FC               	bra	u8267
  1241  005246  2F7B               	decfsz	(??_main+1)& (0+255),f,b
  1242  005248  D7FA               	bra	u8267
  1243  00524A                     
  1244                           ;main.c: 63:     VL53L0X_Init();
  1245  00524A  EC37  F008         	call	_VL53L0X_Init	;wreg free
  1246  00524E                     
  1247                           ;main.c: 64:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1248  00524E  0E02               	movlw	2
  1249  005250  0101               	movlb	1	; () banked
  1250  005252  6F7B               	movwf	(??_main+1)& (0+255),b
  1251  005254  0E04               	movlw	4
  1252  005256  6F7A               	movwf	??_main& (0+255),b
  1253  005258  0EBA               	movlw	186
  1254  00525A                     u8277:
  1255  00525A  2EE8               	decfsz	wreg,f,c
  1256  00525C  D7FE               	bra	u8277
  1257  00525E  2F7A               	decfsz	??_main& (0+255),f,b
  1258  005260  D7FC               	bra	u8277
  1259  005262  2F7B               	decfsz	(??_main+1)& (0+255),f,b
  1260  005264  D7FA               	bra	u8277
  1261  005266  F000               	nop	
  1262  005268                     
  1263                           ;main.c: 65:     VL53L0X_SetAdd(0x30);
  1264  005268  0E30               	movlw	48
  1265  00526A  EC37  F034         	call	_VL53L0X_SetAdd
  1266  00526E                     
  1267                           ;main.c: 67:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1268  00526E  0E06               	movlw	6
  1269  005270  0101               	movlb	1	; () banked
  1270  005272  6F7B               	movwf	(??_main+1)& (0+255),b
  1271  005274  0E13               	movlw	19
  1272  005276  6F7A               	movwf	??_main& (0+255),b
  1273  005278  0EAD               	movlw	173
  1274  00527A                     u8287:
  1275  00527A  2EE8               	decfsz	wreg,f,c
  1276  00527C  D7FE               	bra	u8287
  1277  00527E  2F7A               	decfsz	??_main& (0+255),f,b
  1278  005280  D7FC               	bra	u8287
  1279  005282  2F7B               	decfsz	(??_main+1)& (0+255),f,b
  1280  005284  D7FA               	bra	u8287
  1281  005286  F000 F000          	nop2	
  1282  00528A                     
  1283                           ;main.c: 74:     (INTCONbits.GIE = 1);
  1284  00528A  8EF2               	bsf	242,7,c	;volatile
  1285  00528C                     
  1286                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1287  00528C  8CF2               	bsf	242,6,c	;volatile
  1288  00528E                     l8938:
  1289                           
  1290                           ;main.c: 86:         range_mm = VL53L0X_Millimeter_GetValue(0x30);
  1291  00528E  0E30               	movlw	48
  1292  005290  EC12  F025         	call	_VL53L0X_Millimeter_GetValue
  1293  005294  C01E  F098         	movff	?_VL53L0X_Millimeter_GetValue,_range_mm
  1294  005298  C01F  F099         	movff	?_VL53L0X_Millimeter_GetValue+1,_range_mm+1
  1295  00529C  C020  F09A         	movff	?_VL53L0X_Millimeter_GetValue+2,_range_mm+2
  1296  0052A0  C021  F09B         	movff	?_VL53L0X_Millimeter_GetValue+3,_range_mm+3
  1297  0052A4                     
  1298                           ;main.c: 87:         range_cm = range_mm / 10;
  1299  0052A4  C098  F005         	movff	_range_mm,___fldiv@b
  1300  0052A8  C099  F006         	movff	_range_mm+1,___fldiv@b+1
  1301  0052AC  C09A  F007         	movff	_range_mm+2,___fldiv@b+2
  1302  0052B0  C09B  F008         	movff	_range_mm+3,___fldiv@b+3
  1303  0052B4  0E00               	movlw	0
  1304  0052B6  6E09               	movwf	___fldiv@a^0,c
  1305  0052B8  0E00               	movlw	0
  1306  0052BA  6E0A               	movwf	(___fldiv@a+1)^0,c
  1307  0052BC  0E20               	movlw	32
  1308  0052BE  6E0B               	movwf	(___fldiv@a+2)^0,c
  1309  0052C0  0E41               	movlw	65
  1310  0052C2  6E0C               	movwf	(___fldiv@a+3)^0,c
  1311  0052C4  EC45  F023         	call	___fldiv	;wreg free
  1312  0052C8  C005  F094         	movff	?___fldiv,_range_cm
  1313  0052CC  C006  F095         	movff	?___fldiv+1,_range_cm+1
  1314  0052D0  C007  F096         	movff	?___fldiv+2,_range_cm+2
  1315  0052D4  C008  F097         	movff	?___fldiv+3,_range_cm+3
  1316  0052D8                     
  1317                           ;main.c: 88:         if(range_mm > 5000){
  1318  0052D8  0E00               	movlw	0
  1319  0052DA  6E1E               	movwf	___flge@ff1^0,c
  1320  0052DC  0E40               	movlw	64
  1321  0052DE  6E1F               	movwf	(___flge@ff1+1)^0,c
  1322  0052E0  0E9C               	movlw	156
  1323  0052E2  6E20               	movwf	(___flge@ff1+2)^0,c
  1324  0052E4  0E45               	movlw	69
  1325  0052E6  6E21               	movwf	(___flge@ff1+3)^0,c
  1326  0052E8  C098  F022         	movff	_range_mm,___flge@ff2
  1327  0052EC  C099  F023         	movff	_range_mm+1,___flge@ff2+1
  1328  0052F0  C09A  F024         	movff	_range_mm+2,___flge@ff2+2
  1329  0052F4  C09B  F025         	movff	_range_mm+3,___flge@ff2+3
  1330  0052F8  EC4A  F02A         	call	___flge	;wreg free
  1331  0052FC  B0D8               	btfsc	status,0,c
  1332  0052FE  EF83  F029         	goto	u8241
  1333  005302  EF85  F029         	goto	u8240
  1334  005306                     u8241:
  1335  005306  EF9E  F029         	goto	l8946
  1336  00530A                     u8240:
  1337  00530A                     
  1338                           ;main.c: 89:             printf("Distanz = >2000mm \t >200cm\r\n",range_mm,range_cm);
  1339  00530A  0E21               	movlw	low STR_1
  1340  00530C  0100               	movlb	0	; () banked
  1341  00530E  6FF3               	movwf	printf@fmt& (0+255),b
  1342  005310  0E10               	movlw	high STR_1
  1343  005312  6FF4               	movwf	(printf@fmt+1)& (0+255),b
  1344  005314  C098  F0F5         	movff	_range_mm,?_printf+2
  1345  005318  C099  F0F6         	movff	_range_mm+1,?_printf+3
  1346  00531C  C09A  F0F7         	movff	_range_mm+2,?_printf+4
  1347  005320  C09B  F0F8         	movff	_range_mm+3,?_printf+5
  1348  005324  C094  F0F9         	movff	_range_cm,?_printf+6
  1349  005328  C095  F0FA         	movff	_range_cm+1,?_printf+7
  1350  00532C  C096  F0FB         	movff	_range_cm+2,?_printf+8
  1351  005330  C097  F0FC         	movff	_range_cm+3,?_printf+9
  1352  005334  EC91  F033         	call	_printf	;wreg free
  1353                           
  1354                           ;main.c: 90:         }else{
  1355  005338  EFB5  F029         	goto	l8948
  1356  00533C                     l8946:
  1357                           
  1358                           ;main.c: 91:             printf("Distanz = %.0fmm \t %.1fcm\r\n",range_mm,range_cm);
  1359  00533C  0E3E               	movlw	low STR_2
  1360  00533E  0100               	movlb	0	; () banked
  1361  005340  6FF3               	movwf	printf@fmt& (0+255),b
  1362  005342  0E10               	movlw	high STR_2
  1363  005344  6FF4               	movwf	(printf@fmt+1)& (0+255),b
  1364  005346  C098  F0F5         	movff	_range_mm,?_printf+2
  1365  00534A  C099  F0F6         	movff	_range_mm+1,?_printf+3
  1366  00534E  C09A  F0F7         	movff	_range_mm+2,?_printf+4
  1367  005352  C09B  F0F8         	movff	_range_mm+3,?_printf+5
  1368  005356  C094  F0F9         	movff	_range_cm,?_printf+6
  1369  00535A  C095  F0FA         	movff	_range_cm+1,?_printf+7
  1370  00535E  C096  F0FB         	movff	_range_cm+2,?_printf+8
  1371  005362  C097  F0FC         	movff	_range_cm+3,?_printf+9
  1372  005366  EC91  F033         	call	_printf	;wreg free
  1373  00536A                     l8948:
  1374                           
  1375                           ;main.c: 93:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1376  00536A  0E06               	movlw	6
  1377  00536C  0101               	movlb	1	; () banked
  1378  00536E  6F7B               	movwf	(??_main+1)& (0+255),b
  1379  005370  0E13               	movlw	19
  1380  005372  6F7A               	movwf	??_main& (0+255),b
  1381  005374  0EAD               	movlw	173
  1382  005376                     u8297:
  1383  005376  2EE8               	decfsz	wreg,f,c
  1384  005378  D7FE               	bra	u8297
  1385  00537A  2F7A               	decfsz	??_main& (0+255),f,b
  1386  00537C  D7FC               	bra	u8297
  1387  00537E  2F7B               	decfsz	(??_main+1)& (0+255),f,b
  1388  005380  D7FA               	bra	u8297
  1389  005382  F000 F000          	nop2	
  1390  005386  EF47  F029         	goto	l8938
  1391  00538A  EF58  F000         	goto	start
  1392  00538E                     __end_of_main:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function _printf *****************
  1396 ;; Defined at:
  1397 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1400 ;;		 -> STR_2(28), STR_1(29), 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  ap              2    0[BANK1 ] PTR void [1]
  1403 ;;		 -> ?_printf(2), 
  1404 ;;  ret             2    0        int 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  2   62[BANK0 ] int 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1414 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Totals:         0      10       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;Total ram usage:       12 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 12
  1421 ;; This function calls:
  1422 ;;		_vfprintf
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text1
  1429  006722                     __ptext1:
  1430                           	callstack 0
  1431  006722                     _printf:
  1432                           	callstack 18
  1433  006722  0EF5               	movlw	low (?_printf+2)
  1434  006724  0101               	movlb	1	; () banked
  1435  006726  6F78               	movwf	printf@ap& (0+255),b
  1436  006728  0E00               	movlw	high (?_printf+2)
  1437  00672A  6F79               	movwf	(printf@ap+1)& (0+255),b
  1438  00672C                     
  1439                           ; BSR set to: 1
  1440  00672C  0E00               	movlw	0
  1441  00672E  0100               	movlb	0	; () banked
  1442  006730  6FED               	movwf	vfprintf@fp& (0+255),b
  1443  006732  0E00               	movlw	0
  1444  006734  6FEE               	movwf	(vfprintf@fp+1)& (0+255),b
  1445  006736  C0F3  F0EF         	movff	printf@fmt,vfprintf@fmt
  1446  00673A  C0F4  F0F0         	movff	printf@fmt+1,vfprintf@fmt+1
  1447  00673E  0E78               	movlw	low printf@ap
  1448  006740  6FF1               	movwf	vfprintf@ap& (0+255),b
  1449  006742  0E01               	movlw	high printf@ap
  1450  006744  6FF2               	movwf	(vfprintf@ap+1)& (0+255),b
  1451  006746  ECA7  F030         	call	_vfprintf	;wreg free
  1452  00674A  0012               	return		;funcret
  1453  00674C                     __end_of_printf:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _vfprintf *****************
  1457 ;; Defined at:
  1458 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1461 ;;		 -> NULL(0), 
  1462 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1463 ;;		 -> STR_2(28), STR_1(29), 
  1464 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1465 ;;		 -> printf@ap(2), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1468 ;;		 -> STR_2(28), STR_1(29), 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  2   56[BANK0 ] int 
  1471 ;; Registers used:
  1472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1478 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;Total ram usage:        8 bytes
  1483 ;; Hardware stack levels used: 1
  1484 ;; Hardware stack levels required when called: 11
  1485 ;; This function calls:
  1486 ;;		_vfpfcnvrt
  1487 ;; This function is called by:
  1488 ;;		_printf
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text2
  1493  00614E                     __ptext2:
  1494                           	callstack 0
  1495  00614E                     _vfprintf:
  1496                           	callstack 18
  1497  00614E                     
  1498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1499  00614E  C0EF  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1500  006152  C0F0  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1501  006156                     
  1502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1503  006156  0E00               	movlw	0
  1504  006158  0100               	movlb	0	; () banked
  1505  00615A  6F9D               	movwf	(_nout+1)& (0+255),b
  1506  00615C  0E00               	movlw	0
  1507  00615E  6F9C               	movwf	_nout& (0+255),b
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1510  006160  EFC5  F030         	goto	l8908
  1511  006164                     l8906:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1515  006164  C0ED  F03E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1516  006168  C0EE  F03F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1517  00616C  0E54               	movlw	low vfprintf@cfmt
  1518  00616E  6E40               	movwf	vfpfcnvrt@fmt^0,c
  1519  006170  0E00               	movlw	high vfprintf@cfmt
  1520  006172  6E41               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1521  006174  C0F1  F042         	movff	vfprintf@ap,vfpfcnvrt@ap
  1522  006178  C0F2  F043         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1523  00617C  ECE0  F01E         	call	_vfpfcnvrt	;wreg free
  1524  006180  503E               	movf	?_vfpfcnvrt^0,w,c
  1525  006182  0100               	movlb	0	; () banked
  1526  006184  279C               	addwf	_nout& (0+255),f,b
  1527  006186  503F               	movf	(?_vfpfcnvrt+1)^0,w,c
  1528  006188  239D               	addwfc	(_nout+1)& (0+255),f,b
  1529  00618A                     l8908:
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1533  00618A  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1534  00618E  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1535  006192                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1536  006192  6AF8               	clrf	tblptru,c
  1537  006194                     	endif
  1538  006194                     	if	0	;tblptru may be non-zero
  1539  006194                     	endif
  1540  006194  0008               	tblrd		*
  1541  006196  50F5               	movf	tablat,w,c
  1542  006198  0900               	iorlw	0
  1543  00619A  A4D8               	btfss	status,2,c
  1544  00619C  EFD2  F030         	goto	u8231
  1545  0061A0  EFD4  F030         	goto	u8230
  1546  0061A4                     u8231:
  1547  0061A4  EFB2  F030         	goto	l8906
  1548  0061A8                     u8230:
  1549  0061A8                     
  1550                           ; BSR set to: 0
  1551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1552  0061A8  C09C  F0ED         	movff	_nout,?_vfprintf
  1553  0061AC  C09D  F0EE         	movff	_nout+1,?_vfprintf+1
  1554  0061B0                     
  1555                           ; BSR set to: 0
  1556  0061B0  0012               	return		;funcret
  1557  0061B2                     __end_of_vfprintf:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _vfpfcnvrt *****************
  1561 ;; Defined at:
  1562 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  1565 ;;		 -> NULL(0), 
  1566 ;;  fmt             2   63[COMRAM] PTR PTR unsigned char 
  1567 ;;		 -> vfprintf@cfmt(2), 
  1568 ;;  ap              2   65[COMRAM] PTR PTR void 
  1569 ;;		 -> printf@ap(2), 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  llu             8    0        unsigned long long 
  1572 ;;  ll              8    0        long long 
  1573 ;;  f               4   75[COMRAM] long long 
  1574 ;;  ct              3   79[COMRAM] unsigned char [3]
  1575 ;;  vp              3    0        PTR void 
  1576 ;;  cp              3    0        PTR unsigned char 
  1577 ;;  i               2    0        int 
  1578 ;;  done            2    0        int 
  1579 ;;  c               1   82[COMRAM] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  2   61[COMRAM] int 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1589 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;Total ram usage:       22 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 10
  1596 ;; This function calls:
  1597 ;;		_atoi
  1598 ;;		_efgtoa
  1599 ;;		_fputc
  1600 ;;		_isdigit
  1601 ;;		_isupper
  1602 ;;		_strncmp
  1603 ;;		_tolower
  1604 ;; This function is called by:
  1605 ;;		_vfprintf
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text3
  1610  003DC0                     __ptext3:
  1611                           	callstack 0
  1612  003DC0                     _vfpfcnvrt:
  1613                           	callstack 18
  1614  003DC0                     
  1615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1616  003DC0  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1617  003DC4  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1618  003DC8  CFDE FFF6          	movff	postinc2,tblptrl
  1619  003DCC  CFDD FFF7          	movff	postdec2,tblptrh
  1620  003DD0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1621  003DD0  6AF8               	clrf	tblptru,c
  1622  003DD2                     	endif
  1623  003DD2                     	if	0	;tblptru may be non-zero
  1624  003DD2                     	endif
  1625  003DD2  0008               	tblrd		*
  1626  003DD4  50F5               	movf	tablat,w,c
  1627  003DD6  0A25               	xorlw	37
  1628  003DD8  A4D8               	btfss	status,2,c
  1629  003DDA  EFF1  F01E         	goto	u8091
  1630  003DDE  EFF3  F01E         	goto	u8090
  1631  003DE2                     u8091:
  1632  003DE2  EF13  F021         	goto	l8894
  1633  003DE6                     u8090:
  1634  003DE6                     
  1635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1636  003DE6  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1637  003DEA  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1638  003DEE  2ADE               	incf	postinc2,f,c
  1639  003DF0  0E00               	movlw	0
  1640  003DF2  22DD               	addwfc	postdec2,f,c
  1641  003DF4                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1643  003DF4  0E00               	movlw	0
  1644  003DF6  0100               	movlb	0	; () banked
  1645  003DF8  6F9F               	movwf	(_width+1)& (0+255),b
  1646  003DFA  0E00               	movlw	0
  1647  003DFC  6F9E               	movwf	_width& (0+255),b
  1648  003DFE  C09E  F0A2         	movff	_width,_flags
  1649  003E02  C09F  F0A3         	movff	_width+1,_flags+1
  1650  003E06                     
  1651                           ; BSR set to: 0
  1652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1653  003E06  69A0               	setf	_prec& (0+255),b
  1654  003E08  69A1               	setf	(_prec+1)& (0+255),b
  1655  003E0A                     
  1656                           ; BSR set to: 0
  1657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1658  003E0A  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1659  003E0E  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1660  003E12  CFDE FFF6          	movff	postinc2,tblptrl
  1661  003E16  CFDD FFF7          	movff	postdec2,tblptrh
  1662  003E1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1663  003E1A  6AF8               	clrf	tblptru,c
  1664  003E1C                     	endif
  1665  003E1C                     	if	0	;tblptru may be non-zero
  1666  003E1C                     	endif
  1667  003E1C  0008               	tblrd		*
  1668  003E1E  50F5               	movf	tablat,w,c
  1669  003E20  0A2E               	xorlw	46
  1670  003E22  A4D8               	btfss	status,2,c
  1671  003E24  EF16  F01F         	goto	u8101
  1672  003E28  EF18  F01F         	goto	u8100
  1673  003E2C                     u8101:
  1674  003E2C  EF97  F01F         	goto	l8840
  1675  003E30                     u8100:
  1676  003E30                     
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1679  003E30  0E00               	movlw	0
  1680  003E32  6FA1               	movwf	(_prec+1)& (0+255),b
  1681  003E34  0E00               	movlw	0
  1682  003E36  6FA0               	movwf	_prec& (0+255),b
  1683  003E38                     
  1684                           ; BSR set to: 0
  1685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1686  003E38  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1687  003E3C  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1688  003E40  2ADE               	incf	postinc2,f,c
  1689  003E42  0E00               	movlw	0
  1690  003E44  22DD               	addwfc	postdec2,f,c
  1691  003E46                     
  1692                           ; BSR set to: 0
  1693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1694  003E46  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1695  003E4A  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1696  003E4E  CFDE FFF6          	movff	postinc2,tblptrl
  1697  003E52  CFDD FFF7          	movff	postdec2,tblptrh
  1698  003E56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1699  003E56  6AF8               	clrf	tblptru,c
  1700  003E58                     	endif
  1701  003E58                     	if	0	;tblptru may be non-zero
  1702  003E58                     	endif
  1703  003E58  0008               	tblrd		*
  1704  003E5A  50F5               	movf	tablat,w,c
  1705  003E5C  0A2A               	xorlw	42
  1706  003E5E  A4D8               	btfss	status,2,c
  1707  003E60  EF34  F01F         	goto	u8111
  1708  003E64  EF36  F01F         	goto	u8110
  1709  003E68                     u8111:
  1710  003E68  EF53  F01F         	goto	l8830
  1711  003E6C                     u8110:
  1712  003E6C                     
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1715  003E6C  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1716  003E70  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1717  003E74  2ADE               	incf	postinc2,f,c
  1718  003E76  0E00               	movlw	0
  1719  003E78  22DD               	addwfc	postdec2,f,c
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1722  003E7A  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1723  003E7E  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1724  003E82  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1725  003E86  0E02               	movlw	2
  1726  003E88  26DE               	addwf	postinc2,f,c
  1727  003E8A  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1728  003E8E  0E00               	movlw	0
  1729  003E90  22DD               	addwfc	postdec2,f,c
  1730  003E92  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1731  003E96  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1732  003E9A  CFDE F0A0          	movff	postinc2,_prec
  1733  003E9E  CFDD F0A1          	movff	postdec2,_prec+1
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1736  003EA2  EF97  F01F         	goto	l8840
  1737  003EA6                     l8830:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1741  003EA6  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1742  003EAA  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1743  003EAE  CFDE F00C          	movff	postinc2,atoi@s
  1744  003EB2  CFDD F00D          	movff	postdec2,atoi@s+1
  1745  003EB6  EC3F  F028         	call	_atoi	;wreg free
  1746  003EBA  C00C  F0A0         	movff	?_atoi,_prec
  1747  003EBE  C00D  F0A1         	movff	?_atoi+1,_prec+1
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1750  003EC2  EF6A  F01F         	goto	l8834
  1751  003EC6                     l8832:
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1754  003EC6  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1755  003ECA  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1756  003ECE  2ADE               	incf	postinc2,f,c
  1757  003ED0  0E00               	movlw	0
  1758  003ED2  22DD               	addwfc	postdec2,f,c
  1759  003ED4                     l8834:
  1760  003ED4  0ED0               	movlw	208
  1761  003ED6  6E44               	movwf	??_vfpfcnvrt^0,c
  1762  003ED8  0EFF               	movlw	255
  1763  003EDA  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  1764  003EDC  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1765  003EE0  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1766  003EE4  CFDE FFF6          	movff	postinc2,tblptrl
  1767  003EE8  CFDD FFF7          	movff	postdec2,tblptrh
  1768  003EEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1769  003EEC  6AF8               	clrf	tblptru,c
  1770  003EEE                     	endif
  1771  003EEE                     	if	0	;tblptru may be non-zero
  1772  003EEE                     	endif
  1773  003EEE  0008               	tblrd		*
  1774  003EF0  50F5               	movf	tablat,w,c
  1775  003EF2  6E46               	movwf	(??_vfpfcnvrt+2)^0,c
  1776  003EF4  6A47               	clrf	(??_vfpfcnvrt+3)^0,c
  1777  003EF6  5044               	movf	??_vfpfcnvrt^0,w,c
  1778  003EF8  2646               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1779  003EFA  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  1780  003EFC  2247               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1781  003EFE  5047               	movf	(??_vfpfcnvrt+3)^0,w,c
  1782  003F00  E10A               	bnz	u8120
  1783  003F02  0E0A               	movlw	10
  1784  003F04  5C46               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1785  003F06  A0D8               	btfss	status,0,c
  1786  003F08  EF88  F01F         	goto	u8121
  1787  003F0C  EF8B  F01F         	goto	u8120
  1788  003F10                     u8121:
  1789  003F10  0E01               	movlw	1
  1790  003F12  EF8C  F01F         	goto	u8130
  1791  003F16                     u8120:
  1792  003F16  0E00               	movlw	0
  1793  003F18                     u8130:
  1794  003F18  6E48               	movwf	_vfpfcnvrt$2186^0,c
  1795  003F1A  6A49               	clrf	(_vfpfcnvrt$2186+1)^0,c
  1796  003F1C  5048               	movf	_vfpfcnvrt$2186^0,w,c
  1797  003F1E  1049               	iorwf	(_vfpfcnvrt$2186+1)^0,w,c
  1798  003F20  A4D8               	btfss	status,2,c
  1799  003F22  EF95  F01F         	goto	u8141
  1800  003F26  EF97  F01F         	goto	u8140
  1801  003F2A                     u8141:
  1802  003F2A  EF63  F01F         	goto	l8832
  1803  003F2E                     u8140:
  1804  003F2E                     l8840:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1807  003F2E  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1808  003F32  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1809  003F36  CFDE FFF6          	movff	postinc2,tblptrl
  1810  003F3A  CFDD FFF7          	movff	postdec2,tblptrh
  1811  003F3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1812  003F3E  6AF8               	clrf	tblptru,c
  1813  003F40                     	endif
  1814  003F40                     	if	0	;tblptru may be non-zero
  1815  003F40                     	endif
  1816  003F40  0008               	tblrd		*
  1817  003F42  50F5               	movf	tablat,w,c
  1818  003F44  6E0B               	movwf	tolower@c^0,c
  1819  003F46  6A0C               	clrf	(tolower@c+1)^0,c
  1820  003F48  ECD9  F030         	call	_tolower	;wreg free
  1821  003F4C  500B               	movf	?_tolower^0,w,c
  1822  003F4E  6E50               	movwf	vfpfcnvrt@ct^0,c
  1823  003F50                     
  1824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1825  003F50  5050               	movf	vfpfcnvrt@ct^0,w,c
  1826  003F52  B4D8               	btfsc	status,2,c
  1827  003F54  EFAE  F01F         	goto	u8151
  1828  003F58  EFB0  F01F         	goto	u8150
  1829  003F5C                     u8151:
  1830  003F5C  EFEA  F01F         	goto	l8850
  1831  003F60                     u8150:
  1832  003F60                     
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1834  003F60  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1835  003F64  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1836  003F68  CFDE F044          	movff	postinc2,??_vfpfcnvrt
  1837  003F6C  CFDD F045          	movff	postdec2,??_vfpfcnvrt+1
  1838  003F70  0E01               	movlw	1
  1839  003F72  2644               	addwf	??_vfpfcnvrt^0,f,c
  1840  003F74  0E00               	movlw	0
  1841  003F76  2245               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1842  003F78  C044  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1843  003F7C  C045  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1844  003F80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1845  003F80  6AF8               	clrf	tblptru,c
  1846  003F82                     	endif
  1847  003F82                     	if	0	;tblptru may be non-zero
  1848  003F82                     	endif
  1849  003F82  0008               	tblrd		*
  1850  003F84  50F5               	movf	tablat,w,c
  1851  003F86  6E0B               	movwf	tolower@c^0,c
  1852  003F88  6A0C               	clrf	(tolower@c+1)^0,c
  1853  003F8A  ECD9  F030         	call	_tolower	;wreg free
  1854  003F8E  500B               	movf	?_tolower^0,w,c
  1855  003F90  6E51               	movwf	(vfpfcnvrt@ct+1)^0,c
  1856  003F92                     
  1857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1858  003F92  5051               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1859  003F94  B4D8               	btfsc	status,2,c
  1860  003F96  EFCF  F01F         	goto	u8161
  1861  003F9A  EFD1  F01F         	goto	u8160
  1862  003F9E                     u8161:
  1863  003F9E  EFEA  F01F         	goto	l8850
  1864  003FA2                     u8160:
  1865  003FA2                     
  1866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1867  003FA2  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1868  003FA6  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1869  003FAA  CFDE F044          	movff	postinc2,??_vfpfcnvrt
  1870  003FAE  CFDD F045          	movff	postdec2,??_vfpfcnvrt+1
  1871  003FB2  0E02               	movlw	2
  1872  003FB4  2644               	addwf	??_vfpfcnvrt^0,f,c
  1873  003FB6  0E00               	movlw	0
  1874  003FB8  2245               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1875  003FBA  C044  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1876  003FBE  C045  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1877  003FC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1878  003FC2  6AF8               	clrf	tblptru,c
  1879  003FC4                     	endif
  1880  003FC4                     	if	0	;tblptru may be non-zero
  1881  003FC4                     	endif
  1882  003FC4  0008               	tblrd		*
  1883  003FC6  50F5               	movf	tablat,w,c
  1884  003FC8  6E0B               	movwf	tolower@c^0,c
  1885  003FCA  6A0C               	clrf	(tolower@c+1)^0,c
  1886  003FCC  ECD9  F030         	call	_tolower	;wreg free
  1887  003FD0  500B               	movf	?_tolower^0,w,c
  1888  003FD2  6E52               	movwf	(vfpfcnvrt@ct+2)^0,c
  1889  003FD4                     l8850:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1892  003FD4  0E66               	movlw	102
  1893  003FD6  1850               	xorwf	vfpfcnvrt@ct^0,w,c
  1894  003FD8  A4D8               	btfss	status,2,c
  1895  003FDA  EFF1  F01F         	goto	u8171
  1896  003FDE  EFF3  F01F         	goto	u8170
  1897  003FE2                     u8171:
  1898  003FE2  EF34  F020         	goto	l8862
  1899  003FE6                     u8170:
  1900  003FE6                     
  1901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1902  003FE6  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1903  003FEA  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1904  003FEE  CFDE FFF6          	movff	postinc2,tblptrl
  1905  003FF2  CFDD FFF7          	movff	postdec2,tblptrh
  1906  003FF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1907  003FF6  6AF8               	clrf	tblptru,c
  1908  003FF8                     	endif
  1909  003FF8                     	if	0	;tblptru may be non-zero
  1910  003FF8                     	endif
  1911  003FF8  0008               	tblrd		*
  1912  003FFA  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  1913  003FFE                     
  1914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1915  003FFE  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1916  004002  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1917  004006  2ADE               	incf	postinc2,f,c
  1918  004008  0E00               	movlw	0
  1919  00400A  22DD               	addwfc	postdec2,f,c
  1920  00400C                     
  1921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1922  00400C  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1923  004010  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1924  004014  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1925  004018  0E04               	movlw	4
  1926  00401A  26DE               	addwf	postinc2,f,c
  1927  00401C  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1928  004020  0E00               	movlw	0
  1929  004022  22DD               	addwfc	postdec2,f,c
  1930  004024  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1931  004028  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1932  00402C  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  1933  004030  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  1934  004034  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  1935  004038  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  1936  00403C                     
  1937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1938  00403C  C03E  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  1939  004040  C03F  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1940  004044  C04C  F034         	movff	vfpfcnvrt@f,efgtoa@f
  1941  004048  C04D  F035         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1942  00404C  C04E  F036         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1943  004050  C04F  F037         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1944  004054  C053  F038         	movff	vfpfcnvrt@c,efgtoa@c
  1945  004058  EC2D  F016         	call	_efgtoa	;wreg free
  1946  00405C  C032  F03E         	movff	?_efgtoa,?_vfpfcnvrt
  1947  004060  C033  F03F         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1948  004064  EF2F  F021         	goto	l1567
  1949  004068                     l8862:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1952  004068  0E50               	movlw	low vfpfcnvrt@ct
  1953  00406A  6E05               	movwf	strncmp@_l^0,c
  1954  00406C  0E00               	movlw	high vfpfcnvrt@ct
  1955  00406E  6E06               	movwf	(strncmp@_l+1)^0,c
  1956  004070  0E6A               	movlw	low STR_11
  1957  004072  6E07               	movwf	strncmp@_r^0,c
  1958  004074  0E10               	movlw	high STR_11
  1959  004076  6E08               	movwf	(strncmp@_r+1)^0,c
  1960  004078  0E00               	movlw	0
  1961  00407A  6E0A               	movwf	(strncmp@n+1)^0,c
  1962  00407C  0E02               	movlw	2
  1963  00407E  6E09               	movwf	strncmp@n^0,c
  1964  004080  EC4B  F02B         	call	_strncmp	;wreg free
  1965  004084  5005               	movf	?_strncmp^0,w,c
  1966  004086  1006               	iorwf	(?_strncmp+1)^0,w,c
  1967  004088  A4D8               	btfss	status,2,c
  1968  00408A  EF49  F020         	goto	u8181
  1969  00408E  EF4B  F020         	goto	u8180
  1970  004092                     u8181:
  1971  004092  EFDC  F020         	goto	l8878
  1972  004096                     u8180:
  1973  004096                     
  1974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1975  004096  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1976  00409A  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1977  00409E  CFDE F044          	movff	postinc2,??_vfpfcnvrt
  1978  0040A2  CFDD F045          	movff	postdec2,??_vfpfcnvrt+1
  1979  0040A6  0E01               	movlw	1
  1980  0040A8  2644               	addwf	??_vfpfcnvrt^0,f,c
  1981  0040AA  0E00               	movlw	0
  1982  0040AC  2245               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1983  0040AE  C044  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1984  0040B2  C045  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1985  0040B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1986  0040B6  6AF8               	clrf	tblptru,c
  1987  0040B8                     	endif
  1988  0040B8                     	if	0	;tblptru may be non-zero
  1989  0040B8                     	endif
  1990  0040B8  0008               	tblrd		*
  1991  0040BA  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  1992  0040BE  0EBF               	movlw	191
  1993  0040C0  6E44               	movwf	??_vfpfcnvrt^0,c
  1994  0040C2  0EFF               	movlw	255
  1995  0040C4  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  1996  0040C6  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1997  0040CA  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1998  0040CE  CFDE FFF6          	movff	postinc2,tblptrl
  1999  0040D2  CFDD FFF7          	movff	postdec2,tblptrh
  2000  0040D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2001  0040D6  6AF8               	clrf	tblptru,c
  2002  0040D8                     	endif
  2003  0040D8                     	if	0	;tblptru may be non-zero
  2004  0040D8                     	endif
  2005  0040D8  0008               	tblrd		*
  2006  0040DA  50F5               	movf	tablat,w,c
  2007  0040DC  6E46               	movwf	(??_vfpfcnvrt+2)^0,c
  2008  0040DE  6A47               	clrf	(??_vfpfcnvrt+3)^0,c
  2009  0040E0  5044               	movf	??_vfpfcnvrt^0,w,c
  2010  0040E2  2646               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2011  0040E4  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  2012  0040E6  2247               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2013  0040E8  5047               	movf	(??_vfpfcnvrt+3)^0,w,c
  2014  0040EA  E10A               	bnz	u8190
  2015  0040EC  0E1A               	movlw	26
  2016  0040EE  5C46               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2017  0040F0  A0D8               	btfss	status,0,c
  2018  0040F2  EF7D  F020         	goto	u8191
  2019  0040F6  EF80  F020         	goto	u8190
  2020  0040FA                     u8191:
  2021  0040FA  0E01               	movlw	1
  2022  0040FC  EF81  F020         	goto	u8200
  2023  004100                     u8190:
  2024  004100  0E00               	movlw	0
  2025  004102                     u8200:
  2026  004102  6E4A               	movwf	_vfpfcnvrt$2190^0,c
  2027  004104  6A4B               	clrf	(_vfpfcnvrt$2190+1)^0,c
  2028  004106  504A               	movf	_vfpfcnvrt$2190^0,w,c
  2029  004108  104B               	iorwf	(_vfpfcnvrt$2190+1)^0,w,c
  2030  00410A  B4D8               	btfsc	status,2,c
  2031  00410C  EF8A  F020         	goto	u8211
  2032  004110  EF8C  F020         	goto	u8210
  2033  004114                     u8211:
  2034  004114  EFA6  F020         	goto	l8872
  2035  004118                     u8210:
  2036  004118                     
  2037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2038  004118  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2039  00411C  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2040  004120  CFDF F044          	movff	indf2,??_vfpfcnvrt
  2041  004124  0E04               	movlw	4
  2042  004126  26DE               	addwf	postinc2,f,c
  2043  004128  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  2044  00412C  0E00               	movlw	0
  2045  00412E  22DD               	addwfc	postdec2,f,c
  2046  004130  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2047  004134  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2048  004138  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  2049  00413C  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  2050  004140  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  2051  004144  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2054  004148  EFBE  F020         	goto	l1574
  2055  00414C                     l8872:
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2058  00414C  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2059  004150  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2060  004154  CFDF F044          	movff	indf2,??_vfpfcnvrt
  2061  004158  0E04               	movlw	4
  2062  00415A  26DE               	addwf	postinc2,f,c
  2063  00415C  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  2064  004160  0E00               	movlw	0
  2065  004162  22DD               	addwfc	postdec2,f,c
  2066  004164  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2067  004168  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2068  00416C  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  2069  004170  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  2070  004174  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  2071  004178  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  2072  00417C                     l1574:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2075  00417C  0E02               	movlw	2
  2076  00417E  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2077  004182  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2078  004186  26DE               	addwf	postinc2,f,c
  2079  004188  0E00               	movlw	0
  2080  00418A  22DD               	addwfc	postdec2,f,c
  2081  00418C                     
  2082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2083  00418C  C03E  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  2084  004190  C03F  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2085  004194  C04C  F034         	movff	vfpfcnvrt@f,efgtoa@f
  2086  004198  C04D  F035         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2087  00419C  C04E  F036         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2088  0041A0  C04F  F037         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2089  0041A4  C053  F038         	movff	vfpfcnvrt@c,efgtoa@c
  2090  0041A8  EC2D  F016         	call	_efgtoa	;wreg free
  2091  0041AC  C032  F03E         	movff	?_efgtoa,?_vfpfcnvrt
  2092  0041B0  C033  F03F         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2093  0041B4  EF2F  F021         	goto	l1567
  2094  0041B8                     l8878:
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2097  0041B8  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2098  0041BC  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2099  0041C0  CFDE FFF6          	movff	postinc2,tblptrl
  2100  0041C4  CFDD FFF7          	movff	postdec2,tblptrh
  2101  0041C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2102  0041C8  6AF8               	clrf	tblptru,c
  2103  0041CA                     	endif
  2104  0041CA                     	if	0	;tblptru may be non-zero
  2105  0041CA                     	endif
  2106  0041CA  0008               	tblrd		*
  2107  0041CC  50F5               	movf	tablat,w,c
  2108  0041CE  0A25               	xorlw	37
  2109  0041D0  A4D8               	btfss	status,2,c
  2110  0041D2  EFED  F020         	goto	u8221
  2111  0041D6  EFEF  F020         	goto	u8220
  2112  0041DA                     u8221:
  2113  0041DA  EF06  F021         	goto	l8888
  2114  0041DE                     u8220:
  2115  0041DE                     
  2116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2117  0041DE  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2118  0041E2  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2119  0041E6  2ADE               	incf	postinc2,f,c
  2120  0041E8  0E00               	movlw	0
  2121  0041EA  22DD               	addwfc	postdec2,f,c
  2122  0041EC                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2124  0041EC  0E00               	movlw	0
  2125  0041EE  6E08               	movwf	(fputc@c+1)^0,c
  2126  0041F0  0E25               	movlw	37
  2127  0041F2  6E07               	movwf	fputc@c^0,c
  2128  0041F4  C03E  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2129  0041F8  C03F  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2130  0041FC  EC40  F02E         	call	_fputc	;wreg free
  2131  004200                     l8884:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2134  004200  0E00               	movlw	0
  2135  004202  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  2136  004204  0E01               	movlw	1
  2137  004206  6E3E               	movwf	?_vfpfcnvrt^0,c
  2138  004208  EF2F  F021         	goto	l1567
  2139  00420C                     l8888:
  2140                           
  2141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2142  00420C  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2143  004210  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2144  004214  2ADE               	incf	postinc2,f,c
  2145  004216  0E00               	movlw	0
  2146  004218  22DD               	addwfc	postdec2,f,c
  2147  00421A                     
  2148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2149  00421A  0E00               	movlw	0
  2150  00421C  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  2151  00421E  0E00               	movlw	0
  2152  004220  6E3E               	movwf	?_vfpfcnvrt^0,c
  2153  004222  EF2F  F021         	goto	l1567
  2154  004226                     l8894:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2157  004226  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2158  00422A  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2159  00422E  CFDE FFF6          	movff	postinc2,tblptrl
  2160  004232  CFDD FFF7          	movff	postdec2,tblptrh
  2161  004236                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2162  004236  6AF8               	clrf	tblptru,c
  2163  004238                     	endif
  2164  004238                     	if	0	;tblptru may be non-zero
  2165  004238                     	endif
  2166  004238  0008               	tblrd		*
  2167  00423A  50F5               	movf	tablat,w,c
  2168  00423C  6E07               	movwf	fputc@c^0,c
  2169  00423E  6A08               	clrf	(fputc@c+1)^0,c
  2170  004240  C03E  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2171  004244  C03F  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2172  004248  EC40  F02E         	call	_fputc	;wreg free
  2173  00424C                     
  2174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2175  00424C  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2176  004250  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2177  004254  2ADE               	incf	postinc2,f,c
  2178  004256  0E00               	movlw	0
  2179  004258  22DD               	addwfc	postdec2,f,c
  2180  00425A  EF00  F021         	goto	l8884
  2181  00425E                     l1567:
  2182  00425E  0012               	return		;funcret
  2183  004260                     __end_of_vfpfcnvrt:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _strncmp *****************
  2187 ;; Defined at:
  2188 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2191 ;;		 -> vfpfcnvrt@ct(3), 
  2192 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2193 ;;		 -> STR_13(3), 
  2194 ;;  n               2    8[COMRAM] unsigned int 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2197 ;;		 -> STR_13(3), 
  2198 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2199 ;;		 -> vfpfcnvrt@ct(3), 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  2    4[COMRAM] int 
  2202 ;; Registers used:
  2203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2209 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;Total ram usage:       11 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 4
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_vfpfcnvrt
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text4
  2224  005696                     __ptext4:
  2225                           	callstack 0
  2226  005696                     _strncmp:
  2227                           	callstack 23
  2228  005696  C005  F00C         	movff	strncmp@_l,strncmp@l
  2229  00569A  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2230  00569E  C007  F00E         	movff	strncmp@_r,strncmp@r
  2231  0056A2  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2232  0056A6  0609               	decf	strncmp@n^0,f,c
  2233  0056A8  A0D8               	btfss	status,0,c
  2234  0056AA  060A               	decf	(strncmp@n+1)^0,f,c
  2235  0056AC  2809               	incf	strncmp@n^0,w,c
  2236  0056AE  E106               	bnz	u8041
  2237  0056B0  280A               	incf	(strncmp@n+1)^0,w,c
  2238  0056B2  A4D8               	btfss	status,2,c
  2239  0056B4  EF5E  F02B         	goto	u8041
  2240  0056B8  EF60  F02B         	goto	u8040
  2241  0056BC                     u8041:
  2242  0056BC  EF6D  F02B         	goto	l8800
  2243  0056C0                     u8040:
  2244  0056C0  0E00               	movlw	0
  2245  0056C2  6E06               	movwf	(?_strncmp+1)^0,c
  2246  0056C4  0E00               	movlw	0
  2247  0056C6  6E05               	movwf	?_strncmp^0,c
  2248  0056C8  EFB8  F02B         	goto	l1692
  2249  0056CC                     l8798:
  2250  0056CC  4A0C               	infsnz	strncmp@l^0,f,c
  2251  0056CE  2A0D               	incf	(strncmp@l+1)^0,f,c
  2252  0056D0  4A0E               	infsnz	strncmp@r^0,f,c
  2253  0056D2  2A0F               	incf	(strncmp@r+1)^0,f,c
  2254  0056D4  0609               	decf	strncmp@n^0,f,c
  2255  0056D6  A0D8               	btfss	status,0,c
  2256  0056D8  060A               	decf	(strncmp@n+1)^0,f,c
  2257  0056DA                     l8800:
  2258  0056DA  C00C  FFD9         	movff	strncmp@l,fsr2l
  2259  0056DE  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2260  0056E2  50DF               	movf	indf2,w,c
  2261  0056E4  B4D8               	btfsc	status,2,c
  2262  0056E6  EF77  F02B         	goto	u8051
  2263  0056EA  EF79  F02B         	goto	u8050
  2264  0056EE                     u8051:
  2265  0056EE  EFA6  F02B         	goto	l8808
  2266  0056F2                     u8050:
  2267  0056F2  C00E  FFF6         	movff	strncmp@r,tblptrl
  2268  0056F6  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2269  0056FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2270  0056FA  6AF8               	clrf	tblptru,c
  2271  0056FC                     	endif
  2272  0056FC                     	if	0	;tblptru may be non-zero
  2273  0056FC                     	endif
  2274  0056FC  0008               	tblrd		*
  2275  0056FE  50F5               	movf	tablat,w,c
  2276  005700  0900               	iorlw	0
  2277  005702  B4D8               	btfsc	status,2,c
  2278  005704  EF86  F02B         	goto	u8061
  2279  005708  EF88  F02B         	goto	u8060
  2280  00570C                     u8061:
  2281  00570C  EFA6  F02B         	goto	l8808
  2282  005710                     u8060:
  2283  005710  5009               	movf	strncmp@n^0,w,c
  2284  005712  100A               	iorwf	(strncmp@n+1)^0,w,c
  2285  005714  B4D8               	btfsc	status,2,c
  2286  005716  EF8F  F02B         	goto	u8071
  2287  00571A  EF91  F02B         	goto	u8070
  2288  00571E                     u8071:
  2289  00571E  EFA6  F02B         	goto	l8808
  2290  005722                     u8070:
  2291  005722  C00C  FFD9         	movff	strncmp@l,fsr2l
  2292  005726  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2293  00572A  50DF               	movf	indf2,w,c
  2294  00572C  6E0B               	movwf	??_strncmp^0,c
  2295  00572E  C00E  FFF6         	movff	strncmp@r,tblptrl
  2296  005732  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2297  005736                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2298  005736  6AF8               	clrf	tblptru,c
  2299  005738                     	endif
  2300  005738                     	if	0	;tblptru may be non-zero
  2301  005738                     	endif
  2302  005738  0008               	tblrd		*
  2303  00573A  50F5               	movf	tablat,w,c
  2304  00573C  180B               	xorwf	??_strncmp^0,w,c
  2305  00573E  B4D8               	btfsc	status,2,c
  2306  005740  EFA4  F02B         	goto	u8081
  2307  005744  EFA6  F02B         	goto	u8080
  2308  005748                     u8081:
  2309  005748  EF66  F02B         	goto	l8798
  2310  00574C                     u8080:
  2311  00574C                     l8808:
  2312  00574C  C00C  FFD9         	movff	strncmp@l,fsr2l
  2313  005750  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2314  005754  50DF               	movf	indf2,w,c
  2315  005756  6E0B               	movwf	??_strncmp^0,c
  2316  005758  C00E  FFF6         	movff	strncmp@r,tblptrl
  2317  00575C  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2318  005760                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2319  005760  6AF8               	clrf	tblptru,c
  2320  005762                     	endif
  2321  005762                     	if	0	;tblptru may be non-zero
  2322  005762                     	endif
  2323  005762  0008               	tblrd		*
  2324  005764  50F5               	movf	tablat,w,c
  2325  005766  5C0B               	subwf	??_strncmp^0,w,c
  2326  005768  6E05               	movwf	?_strncmp^0,c
  2327  00576A  6A06               	clrf	(?_strncmp+1)^0,c
  2328  00576C  A0D8               	btfss	status,0,c
  2329  00576E  0606               	decf	(?_strncmp+1)^0,f,c
  2330  005770                     l1692:
  2331  005770  0012               	return		;funcret
  2332  005772                     __end_of_strncmp:
  2333                           	callstack 0
  2334                           
  2335 ;; *************** function _efgtoa *****************
  2336 ;; Defined at:
  2337 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  2340 ;;		 -> NULL(0), 
  2341 ;;  f               4   51[COMRAM] PTR struct _IO_FILE
  2342 ;;  c               1   55[COMRAM] unsigned char 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  u               4   52[BANK0 ] unsigned char 
  2345 ;;  g               4   44[BANK0 ] unsigned char 
  2346 ;;  l               4   38[BANK0 ] unsigned char 
  2347 ;;  h               4   34[BANK0 ] unsigned char 
  2348 ;;  ou              4   20[BANK0 ] unsigned char 
  2349 ;;  n               2   50[BANK0 ] int 
  2350 ;;  e               2   48[BANK0 ] int 
  2351 ;;  i               2   42[BANK0 ] int 
  2352 ;;  w               2   30[BANK0 ] int 
  2353 ;;  p               2   28[BANK0 ] int 
  2354 ;;  sign            2   26[BANK0 ] int 
  2355 ;;  d               2   24[BANK0 ] int 
  2356 ;;  m               2   18[BANK0 ] int 
  2357 ;;  ne              2   16[BANK0 ] int 
  2358 ;;  pp              2   14[BANK0 ] int 
  2359 ;;  t               2   12[BANK0 ] int 
  2360 ;;  mode            1   33[BANK0 ] unsigned char 
  2361 ;;  nmode           1   32[BANK0 ] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  2   49[COMRAM] int 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2371 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;Total ram usage:       68 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 9
  2378 ;; This function calls:
  2379 ;;		___awdiv
  2380 ;;		___awmod
  2381 ;;		___fladd
  2382 ;;		___fldiv
  2383 ;;		___fleq
  2384 ;;		___flge
  2385 ;;		___flmul
  2386 ;;		___flneg
  2387 ;;		___flsub
  2388 ;;		___fltol
  2389 ;;		___fpclassifyf
  2390 ;;		_floorf
  2391 ;;		_isupper
  2392 ;;		_pad
  2393 ;;		_strcpy
  2394 ;;		_tolower
  2395 ;; This function is called by:
  2396 ;;		_vfpfcnvrt
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text5
  2401  002C5A                     __ptext5:
  2402                           	callstack 0
  2403  002C5A                     _efgtoa:
  2404                           	callstack 18
  2405  002C5A                     
  2406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2407  002C5A  0E00               	movlw	0
  2408  002C5C  0100               	movlb	0	; () banked
  2409  002C5E  6FD0               	movwf	(efgtoa@sign+1)& (0+255),b
  2410  002C60  0E00               	movlw	0
  2411  002C62  6FCF               	movwf	efgtoa@sign& (0+255),b
  2412  002C64                     
  2413                           ; BSR set to: 0
  2414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2415  002C64  C034  F0E1         	movff	efgtoa@f,efgtoa@g
  2416  002C68  C035  F0E2         	movff	efgtoa@f+1,efgtoa@g+1
  2417  002C6C  C036  F0E3         	movff	efgtoa@f+2,efgtoa@g+2
  2418  002C70  C037  F0E4         	movff	efgtoa@f+3,efgtoa@g+3
  2419  002C74                     
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2422  002C74  BFE4               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2423  002C76  EF41  F016         	goto	u7430
  2424  002C7A  EF3F  F016         	goto	u7431
  2425  002C7E                     u7431:
  2426  002C7E  EF57  F016         	goto	l8452
  2427  002C82                     u7430:
  2428  002C82                     
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2431  002C82  0E00               	movlw	0
  2432  002C84  6FD0               	movwf	(efgtoa@sign+1)& (0+255),b
  2433  002C86  0E01               	movlw	1
  2434  002C88  6FCF               	movwf	efgtoa@sign& (0+255),b
  2435  002C8A                     
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2438  002C8A  C0E1  F005         	movff	efgtoa@g,___flneg@f1
  2439  002C8E  C0E2  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2440  002C92  C0E3  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2441  002C96  C0E4  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2442  002C9A  ECA1  F032         	call	___flneg	;wreg free
  2443  002C9E  C005  F0E1         	movff	?___flneg,efgtoa@g
  2444  002CA2  C006  F0E2         	movff	?___flneg+1,efgtoa@g+1
  2445  002CA6  C007  F0E3         	movff	?___flneg+2,efgtoa@g+2
  2446  002CAA  C008  F0E4         	movff	?___flneg+3,efgtoa@g+3
  2447  002CAE                     l8452:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2450  002CAE  0E00               	movlw	0
  2451  002CB0  0100               	movlb	0	; () banked
  2452  002CB2  6FE8               	movwf	(efgtoa@n+1)& (0+255),b
  2453  002CB4  0E00               	movlw	0
  2454  002CB6  6FE7               	movwf	efgtoa@n& (0+255),b
  2455  002CB8                     
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2458  002CB8  C09E  F0D3         	movff	_width,efgtoa@w
  2459  002CBC  C09F  F0D4         	movff	_width+1,efgtoa@w+1
  2460  002CC0                     
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2463  002CC0  51CF               	movf	efgtoa@sign& (0+255),w,b
  2464  002CC2  11D0               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2465  002CC4  A4D8               	btfss	status,2,c
  2466  002CC6  EF67  F016         	goto	u7441
  2467  002CCA  EF69  F016         	goto	u7440
  2468  002CCE                     u7441:
  2469  002CCE  EF70  F016         	goto	l8460
  2470  002CD2                     u7440:
  2471  002CD2                     
  2472                           ; BSR set to: 0
  2473  002CD2  A5A2               	btfss	_flags& (0+255),2,b
  2474  002CD4  EF6E  F016         	goto	u7451
  2475  002CD8  EF70  F016         	goto	u7450
  2476  002CDC                     u7451:
  2477  002CDC  EF8A  F016         	goto	l8472
  2478  002CE0                     u7450:
  2479  002CE0                     l8460:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2483  002CE0  51CF               	movf	efgtoa@sign& (0+255),w,b
  2484  002CE2  11D0               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2485  002CE4  A4D8               	btfss	status,2,c
  2486  002CE6  EF77  F016         	goto	u7461
  2487  002CEA  EF79  F016         	goto	u7460
  2488  002CEE                     u7461:
  2489  002CEE  EF7F  F016         	goto	l8464
  2490  002CF2                     u7460:
  2491  002CF2                     
  2492                           ; BSR set to: 0
  2493  002CF2  0E00               	movlw	0
  2494  002CF4  6FB6               	movwf	(_efgtoa$2160+1)& (0+255),b
  2495  002CF6  0E2B               	movlw	43
  2496  002CF8  6FB5               	movwf	_efgtoa$2160& (0+255),b
  2497  002CFA  EF83  F016         	goto	l8466
  2498  002CFE                     l8464:
  2499                           
  2500                           ; BSR set to: 0
  2501  002CFE  0E00               	movlw	0
  2502  002D00  6FB6               	movwf	(_efgtoa$2160+1)& (0+255),b
  2503  002D02  0E2D               	movlw	45
  2504  002D04  6FB5               	movwf	_efgtoa$2160& (0+255),b
  2505  002D06                     l8466:
  2506                           
  2507                           ; BSR set to: 0
  2508  002D06  C0B5  F110         	movff	_efgtoa$2160,_dbuf
  2509  002D0A                     
  2510                           ; BSR set to: 0
  2511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2512  002D0A  4BE7               	infsnz	efgtoa@n& (0+255),f,b
  2513  002D0C  2BE8               	incf	(efgtoa@n+1)& (0+255),f,b
  2514  002D0E                     
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2517  002D0E  07D3               	decf	efgtoa@w& (0+255),f,b
  2518  002D10  A0D8               	btfss	status,0,c
  2519  002D12  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  2520  002D14                     l8472:
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2524  002D14  C0E1  F005         	movff	efgtoa@g,___fpclassifyf@x
  2525  002D18  C0E2  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2526  002D1C  C0E3  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2527  002D20  C0E4  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2528  002D24  ECCC  F02A         	call	___fpclassifyf	;wreg free
  2529  002D28  0405               	decf	?___fpclassifyf^0,w,c
  2530  002D2A  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2531  002D2C  A4D8               	btfss	status,2,c
  2532  002D2E  EF9B  F016         	goto	u7471
  2533  002D32  EF9D  F016         	goto	u7470
  2534  002D36                     u7471:
  2535  002D36  EFF4  F016         	goto	l8490
  2536  002D3A                     u7470:
  2537  002D3A  0EBF               	movlw	191
  2538  002D3C  6E39               	movwf	??_efgtoa^0,c
  2539  002D3E  0EFF               	movlw	255
  2540  002D40  6E3A               	movwf	(??_efgtoa+1)^0,c
  2541  002D42  5038               	movf	efgtoa@c^0,w,c
  2542  002D44  6E3B               	movwf	(??_efgtoa+2)^0,c
  2543  002D46  6A3C               	clrf	(??_efgtoa+3)^0,c
  2544  002D48  5039               	movf	??_efgtoa^0,w,c
  2545  002D4A  263B               	addwf	(??_efgtoa+2)^0,f,c
  2546  002D4C  503A               	movf	(??_efgtoa+1)^0,w,c
  2547  002D4E  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2548  002D50  503C               	movf	(??_efgtoa+3)^0,w,c
  2549  002D52  E10A               	bnz	u7480
  2550  002D54  0E1A               	movlw	26
  2551  002D56  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2552  002D58  A0D8               	btfss	status,0,c
  2553  002D5A  EFB1  F016         	goto	u7481
  2554  002D5E  EFB4  F016         	goto	u7480
  2555  002D62                     u7481:
  2556  002D62  0E01               	movlw	1
  2557  002D64  EFB5  F016         	goto	u7490
  2558  002D68                     u7480:
  2559  002D68  0E00               	movlw	0
  2560  002D6A                     u7490:
  2561  002D6A  0100               	movlb	0	; () banked
  2562  002D6C  6FB7               	movwf	_efgtoa$2161& (0+255),b
  2563  002D6E  6BB8               	clrf	(_efgtoa$2161+1)& (0+255),b
  2564  002D70                     
  2565                           ; BSR set to: 0
  2566  002D70  51B7               	movf	_efgtoa$2161& (0+255),w,b
  2567  002D72  11B8               	iorwf	(_efgtoa$2161+1)& (0+255),w,b
  2568  002D74  B4D8               	btfsc	status,2,c
  2569  002D76  EFBF  F016         	goto	u7501
  2570  002D7A  EFC1  F016         	goto	u7500
  2571  002D7E                     u7501:
  2572  002D7E  EFCF  F016         	goto	l8482
  2573  002D82                     u7500:
  2574  002D82                     
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2577  002D82  0E10               	movlw	low _dbuf
  2578  002D84  25E7               	addwf	efgtoa@n& (0+255),w,b
  2579  002D86  6E05               	movwf	strcpy@dest^0,c
  2580  002D88  0E01               	movlw	high _dbuf
  2581  002D8A  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2582  002D8C  6E06               	movwf	(strcpy@dest+1)^0,c
  2583  002D8E  0E5A               	movlw	low STR_3
  2584  002D90  6E07               	movwf	strcpy@src^0,c
  2585  002D92  0E10               	movlw	high STR_3
  2586  002D94  6E08               	movwf	(strcpy@src+1)^0,c
  2587  002D96  EC09  F031         	call	_strcpy	;wreg free
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2590  002D9A  EFDB  F016         	goto	l8484
  2591  002D9E                     l8482:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2595  002D9E  0E10               	movlw	low _dbuf
  2596  002DA0  25E7               	addwf	efgtoa@n& (0+255),w,b
  2597  002DA2  6E05               	movwf	strcpy@dest^0,c
  2598  002DA4  0E01               	movlw	high _dbuf
  2599  002DA6  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2600  002DA8  6E06               	movwf	(strcpy@dest+1)^0,c
  2601  002DAA  0E62               	movlw	low STR_4
  2602  002DAC  6E07               	movwf	strcpy@src^0,c
  2603  002DAE  0E10               	movlw	high STR_4
  2604  002DB0  6E08               	movwf	(strcpy@src+1)^0,c
  2605  002DB2  EC09  F031         	call	_strcpy	;wreg free
  2606  002DB6                     l8484:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2609  002DB6  0100               	movlb	0	; () banked
  2610  002DB8  0EFD               	movlw	253
  2611  002DBA  27D3               	addwf	efgtoa@w& (0+255),f,b
  2612  002DBC  0EFF               	movlw	255
  2613  002DBE  23D4               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2614  002DC0                     
  2615                           ; BSR set to: 0
  2616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2617  002DC0  C032  F017         	movff	efgtoa@fp,pad@fp
  2618  002DC4  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  2619  002DC8  0E10               	movlw	low _dbuf
  2620  002DCA  6E19               	movwf	pad@buf^0,c
  2621  002DCC  0E01               	movlw	high _dbuf
  2622  002DCE  6E1A               	movwf	(pad@buf+1)^0,c
  2623  002DD0  C0D3  F01B         	movff	efgtoa@w,pad@p
  2624  002DD4  C0D4  F01C         	movff	efgtoa@w+1,pad@p+1
  2625  002DD8  ECB9  F02B         	call	_pad	;wreg free
  2626  002DDC  C017  F032         	movff	?_pad,?_efgtoa
  2627  002DE0  C018  F033         	movff	?_pad+1,?_efgtoa+1
  2628  002DE4  EF7F  F01C         	goto	l1475
  2629  002DE8                     l8490:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2632  002DE8  C0E1  F005         	movff	efgtoa@g,___fpclassifyf@x
  2633  002DEC  C0E2  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2634  002DF0  C0E3  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2635  002DF4  C0E4  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2636  002DF8  ECCC  F02A         	call	___fpclassifyf	;wreg free
  2637  002DFC  5005               	movf	?___fpclassifyf^0,w,c
  2638  002DFE  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2639  002E00  A4D8               	btfss	status,2,c
  2640  002E02  EF05  F017         	goto	u7511
  2641  002E06  EF07  F017         	goto	u7510
  2642  002E0A                     u7511:
  2643  002E0A  EF5E  F017         	goto	l8508
  2644  002E0E                     u7510:
  2645  002E0E  0EBF               	movlw	191
  2646  002E10  6E39               	movwf	??_efgtoa^0,c
  2647  002E12  0EFF               	movlw	255
  2648  002E14  6E3A               	movwf	(??_efgtoa+1)^0,c
  2649  002E16  5038               	movf	efgtoa@c^0,w,c
  2650  002E18  6E3B               	movwf	(??_efgtoa+2)^0,c
  2651  002E1A  6A3C               	clrf	(??_efgtoa+3)^0,c
  2652  002E1C  5039               	movf	??_efgtoa^0,w,c
  2653  002E1E  263B               	addwf	(??_efgtoa+2)^0,f,c
  2654  002E20  503A               	movf	(??_efgtoa+1)^0,w,c
  2655  002E22  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2656  002E24  503C               	movf	(??_efgtoa+3)^0,w,c
  2657  002E26  E10A               	bnz	u7520
  2658  002E28  0E1A               	movlw	26
  2659  002E2A  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2660  002E2C  A0D8               	btfss	status,0,c
  2661  002E2E  EF1B  F017         	goto	u7521
  2662  002E32  EF1E  F017         	goto	u7520
  2663  002E36                     u7521:
  2664  002E36  0E01               	movlw	1
  2665  002E38  EF1F  F017         	goto	u7530
  2666  002E3C                     u7520:
  2667  002E3C  0E00               	movlw	0
  2668  002E3E                     u7530:
  2669  002E3E  0100               	movlb	0	; () banked
  2670  002E40  6FB9               	movwf	_efgtoa$2166& (0+255),b
  2671  002E42  6BBA               	clrf	(_efgtoa$2166+1)& (0+255),b
  2672  002E44                     
  2673                           ; BSR set to: 0
  2674  002E44  51B9               	movf	_efgtoa$2166& (0+255),w,b
  2675  002E46  11BA               	iorwf	(_efgtoa$2166+1)& (0+255),w,b
  2676  002E48  B4D8               	btfsc	status,2,c
  2677  002E4A  EF29  F017         	goto	u7541
  2678  002E4E  EF2B  F017         	goto	u7540
  2679  002E52                     u7541:
  2680  002E52  EF39  F017         	goto	l8500
  2681  002E56                     u7540:
  2682  002E56                     
  2683                           ; BSR set to: 0
  2684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2685  002E56  0E10               	movlw	low _dbuf
  2686  002E58  25E7               	addwf	efgtoa@n& (0+255),w,b
  2687  002E5A  6E05               	movwf	strcpy@dest^0,c
  2688  002E5C  0E01               	movlw	high _dbuf
  2689  002E5E  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2690  002E60  6E06               	movwf	(strcpy@dest+1)^0,c
  2691  002E62  0E5E               	movlw	low STR_7
  2692  002E64  6E07               	movwf	strcpy@src^0,c
  2693  002E66  0E10               	movlw	high STR_7
  2694  002E68  6E08               	movwf	(strcpy@src+1)^0,c
  2695  002E6A  EC09  F031         	call	_strcpy	;wreg free
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2698  002E6E  EF45  F017         	goto	l8502
  2699  002E72                     l8500:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2703  002E72  0E10               	movlw	low _dbuf
  2704  002E74  25E7               	addwf	efgtoa@n& (0+255),w,b
  2705  002E76  6E05               	movwf	strcpy@dest^0,c
  2706  002E78  0E01               	movlw	high _dbuf
  2707  002E7A  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2708  002E7C  6E06               	movwf	(strcpy@dest+1)^0,c
  2709  002E7E  0E66               	movlw	low STR_8
  2710  002E80  6E07               	movwf	strcpy@src^0,c
  2711  002E82  0E10               	movlw	high STR_8
  2712  002E84  6E08               	movwf	(strcpy@src+1)^0,c
  2713  002E86  EC09  F031         	call	_strcpy	;wreg free
  2714  002E8A                     l8502:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2717  002E8A  0100               	movlb	0	; () banked
  2718  002E8C  0EFD               	movlw	253
  2719  002E8E  27D3               	addwf	efgtoa@w& (0+255),f,b
  2720  002E90  0EFF               	movlw	255
  2721  002E92  23D4               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2722  002E94                     
  2723                           ; BSR set to: 0
  2724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2725  002E94  C032  F017         	movff	efgtoa@fp,pad@fp
  2726  002E98  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  2727  002E9C  0E10               	movlw	low _dbuf
  2728  002E9E  6E19               	movwf	pad@buf^0,c
  2729  002EA0  0E01               	movlw	high _dbuf
  2730  002EA2  6E1A               	movwf	(pad@buf+1)^0,c
  2731  002EA4  C0D3  F01B         	movff	efgtoa@w,pad@p
  2732  002EA8  C0D4  F01C         	movff	efgtoa@w+1,pad@p+1
  2733  002EAC  ECB9  F02B         	call	_pad	;wreg free
  2734  002EB0  C017  F032         	movff	?_pad,?_efgtoa
  2735  002EB4  C018  F033         	movff	?_pad+1,?_efgtoa+1
  2736  002EB8  EF7F  F01C         	goto	l1475
  2737  002EBC                     l8508:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2740  002EBC  0E00               	movlw	0
  2741  002EBE  0100               	movlb	0	; () banked
  2742  002EC0  6FE9               	movwf	efgtoa@u& (0+255),b
  2743  002EC2  0E00               	movlw	0
  2744  002EC4  6FEA               	movwf	(efgtoa@u+1)& (0+255),b
  2745  002EC6  0E80               	movlw	128
  2746  002EC8  6FEB               	movwf	(efgtoa@u+2)& (0+255),b
  2747  002ECA  0E3F               	movlw	63
  2748  002ECC  6FEC               	movwf	(efgtoa@u+3)& (0+255),b
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2751  002ECE  0E00               	movlw	0
  2752  002ED0  6FE6               	movwf	(efgtoa@e+1)& (0+255),b
  2753  002ED2  0E00               	movlw	0
  2754  002ED4  6FE5               	movwf	efgtoa@e& (0+255),b
  2755  002ED6                     
  2756                           ; BSR set to: 0
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2758  002ED6  C0E1  F005         	movff	efgtoa@g,___fleq@ff1
  2759  002EDA  C0E2  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2760  002EDE  C0E3  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2761  002EE2  C0E4  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2762  002EE6  0E00               	movlw	0
  2763  002EE8  6E09               	movwf	___fleq@ff2^0,c
  2764  002EEA  0E00               	movlw	0
  2765  002EEC  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2766  002EEE  0E00               	movlw	0
  2767  002EF0  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2768  002EF2  0E00               	movlw	0
  2769  002EF4  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2770  002EF6  EC98  F02D         	call	___fleq	;wreg free
  2771  002EFA  B0D8               	btfsc	status,0,c
  2772  002EFC  EF82  F017         	goto	u7551
  2773  002F00  EF84  F017         	goto	u7550
  2774  002F04                     u7551:
  2775  002F04  EF07  F018         	goto	l8526
  2776  002F08                     u7550:
  2777  002F08  EFA3  F017         	goto	l8518
  2778  002F0C                     l8514:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2781  002F0C  C0E9  F005         	movff	efgtoa@u,___flmul@b
  2782  002F10  C0EA  F006         	movff	efgtoa@u+1,___flmul@b+1
  2783  002F14  C0EB  F007         	movff	efgtoa@u+2,___flmul@b+2
  2784  002F18  C0EC  F008         	movff	efgtoa@u+3,___flmul@b+3
  2785  002F1C  0E00               	movlw	0
  2786  002F1E  6E09               	movwf	___flmul@a^0,c
  2787  002F20  0E00               	movlw	0
  2788  002F22  6E0A               	movwf	(___flmul@a+1)^0,c
  2789  002F24  0E20               	movlw	32
  2790  002F26  6E0B               	movwf	(___flmul@a+2)^0,c
  2791  002F28  0E41               	movlw	65
  2792  002F2A  6E0C               	movwf	(___flmul@a+3)^0,c
  2793  002F2C  EC30  F021         	call	___flmul	;wreg free
  2794  002F30  C005  F0E9         	movff	?___flmul,efgtoa@u
  2795  002F34  C006  F0EA         	movff	?___flmul+1,efgtoa@u+1
  2796  002F38  C007  F0EB         	movff	?___flmul+2,efgtoa@u+2
  2797  002F3C  C008  F0EC         	movff	?___flmul+3,efgtoa@u+3
  2798  002F40                     
  2799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2800  002F40  0100               	movlb	0	; () banked
  2801  002F42  4BE5               	infsnz	efgtoa@e& (0+255),f,b
  2802  002F44  2BE6               	incf	(efgtoa@e+1)& (0+255),f,b
  2803  002F46                     l8518:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2806  002F46  C0E1  F01E         	movff	efgtoa@g,___flge@ff1
  2807  002F4A  C0E2  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2808  002F4E  C0E3  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2809  002F52  C0E4  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2810  002F56  0E00               	movlw	0
  2811  002F58  6E09               	movwf	___flmul@a^0,c
  2812  002F5A  0E00               	movlw	0
  2813  002F5C  6E0A               	movwf	(___flmul@a+1)^0,c
  2814  002F5E  0E20               	movlw	32
  2815  002F60  6E0B               	movwf	(___flmul@a+2)^0,c
  2816  002F62  0E41               	movlw	65
  2817  002F64  6E0C               	movwf	(___flmul@a+3)^0,c
  2818  002F66  C0E9  F005         	movff	efgtoa@u,___flmul@b
  2819  002F6A  C0EA  F006         	movff	efgtoa@u+1,___flmul@b+1
  2820  002F6E  C0EB  F007         	movff	efgtoa@u+2,___flmul@b+2
  2821  002F72  C0EC  F008         	movff	efgtoa@u+3,___flmul@b+3
  2822  002F76  EC30  F021         	call	___flmul	;wreg free
  2823  002F7A  C005  F022         	movff	?___flmul,___flge@ff2
  2824  002F7E  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  2825  002F82  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  2826  002F86  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  2827  002F8A  EC4A  F02A         	call	___flge	;wreg free
  2828  002F8E  B0D8               	btfsc	status,0,c
  2829  002F90  EFCC  F017         	goto	u7561
  2830  002F94  EFCE  F017         	goto	u7560
  2831  002F98                     u7561:
  2832  002F98  EF86  F017         	goto	l8514
  2833  002F9C                     u7560:
  2834  002F9C  EFEE  F017         	goto	l8524
  2835  002FA0                     l8520:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2838  002FA0  C0E9  F005         	movff	efgtoa@u,___fldiv@b
  2839  002FA4  C0EA  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2840  002FA8  C0EB  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2841  002FAC  C0EC  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2842  002FB0  0E00               	movlw	0
  2843  002FB2  6E09               	movwf	___fldiv@a^0,c
  2844  002FB4  0E00               	movlw	0
  2845  002FB6  6E0A               	movwf	(___fldiv@a+1)^0,c
  2846  002FB8  0E20               	movlw	32
  2847  002FBA  6E0B               	movwf	(___fldiv@a+2)^0,c
  2848  002FBC  0E41               	movlw	65
  2849  002FBE  6E0C               	movwf	(___fldiv@a+3)^0,c
  2850  002FC0  EC45  F023         	call	___fldiv	;wreg free
  2851  002FC4  C005  F0E9         	movff	?___fldiv,efgtoa@u
  2852  002FC8  C006  F0EA         	movff	?___fldiv+1,efgtoa@u+1
  2853  002FCC  C007  F0EB         	movff	?___fldiv+2,efgtoa@u+2
  2854  002FD0  C008  F0EC         	movff	?___fldiv+3,efgtoa@u+3
  2855  002FD4                     
  2856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2857  002FD4  0100               	movlb	0	; () banked
  2858  002FD6  07E5               	decf	efgtoa@e& (0+255),f,b
  2859  002FD8  A0D8               	btfss	status,0,c
  2860  002FDA  07E6               	decf	(efgtoa@e+1)& (0+255),f,b
  2861  002FDC                     l8524:
  2862                           
  2863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2864  002FDC  C0E1  F01E         	movff	efgtoa@g,___flge@ff1
  2865  002FE0  C0E2  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2866  002FE4  C0E3  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2867  002FE8  C0E4  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2868  002FEC  C0E9  F022         	movff	efgtoa@u,___flge@ff2
  2869  002FF0  C0EA  F023         	movff	efgtoa@u+1,___flge@ff2+1
  2870  002FF4  C0EB  F024         	movff	efgtoa@u+2,___flge@ff2+2
  2871  002FF8  C0EC  F025         	movff	efgtoa@u+3,___flge@ff2+3
  2872  002FFC  EC4A  F02A         	call	___flge	;wreg free
  2873  003000  A0D8               	btfss	status,0,c
  2874  003002  EF05  F018         	goto	u7571
  2875  003006  EF07  F018         	goto	u7570
  2876  00300A                     u7571:
  2877  00300A  EFD0  F017         	goto	l8520
  2878  00300E                     u7570:
  2879  00300E                     l8526:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2882  00300E  C038  F00B         	movff	efgtoa@c,tolower@c
  2883  003012  6A0C               	clrf	(tolower@c+1)^0,c
  2884  003014  ECD9  F030         	call	_tolower	;wreg free
  2885  003018  500B               	movf	?_tolower^0,w,c
  2886  00301A  0100               	movlb	0	; () banked
  2887  00301C  6FD6               	movwf	efgtoa@mode& (0+255),b
  2888  00301E                     
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2891  00301E  C0D6  F0D5         	movff	efgtoa@mode,efgtoa@nmode
  2892  003022                     
  2893                           ; BSR set to: 0
  2894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2895  003022  0E67               	movlw	103
  2896  003024  19D6               	xorwf	efgtoa@mode& (0+255),w,b
  2897  003026  A4D8               	btfss	status,2,c
  2898  003028  EF18  F018         	goto	u7581
  2899  00302C  EF1A  F018         	goto	u7580
  2900  003030                     u7581:
  2901  003030  EF40  F018         	goto	l8540
  2902  003034                     u7580:
  2903  003034                     
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2906  003034  51A0               	movf	_prec& (0+255),w,b
  2907  003036  11A1               	iorwf	(_prec+1)& (0+255),w,b
  2908  003038  A4D8               	btfss	status,2,c
  2909  00303A  EF21  F018         	goto	u7591
  2910  00303E  EF23  F018         	goto	u7590
  2911  003042                     u7591:
  2912  003042  EF27  F018         	goto	l8536
  2913  003046                     u7590:
  2914  003046                     
  2915                           ; BSR set to: 0
  2916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2917  003046  0E00               	movlw	0
  2918  003048  6FA1               	movwf	(_prec+1)& (0+255),b
  2919  00304A  0E01               	movlw	1
  2920  00304C  6FA0               	movwf	_prec& (0+255),b
  2921  00304E                     l8536:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2925  00304E  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  2926  003050  EF34  F018         	goto	u7600
  2927  003054  51A1               	movf	(_prec+1)& (0+255),w,b
  2928  003056  E106               	bnz	u7601
  2929  003058  05A0               	decf	_prec& (0+255),w,b
  2930  00305A  B0D8               	btfsc	status,0,c
  2931  00305C  EF32  F018         	goto	u7601
  2932  003060  EF34  F018         	goto	u7600
  2933  003064                     u7601:
  2934  003064  EF3A  F018         	goto	l1493
  2935  003068                     u7600:
  2936  003068                     l8538:
  2937                           
  2938                           ; BSR set to: 0
  2939  003068  0E00               	movlw	0
  2940  00306A  6FD2               	movwf	(efgtoa@p+1)& (0+255),b
  2941  00306C  0E06               	movlw	6
  2942  00306E  6FD1               	movwf	efgtoa@p& (0+255),b
  2943  003070  EF49  F018         	goto	l8546
  2944  003074                     l1493:
  2945                           
  2946                           ; BSR set to: 0
  2947  003074  C0A0  F0D1         	movff	_prec,efgtoa@p
  2948  003078  C0A1  F0D2         	movff	_prec+1,efgtoa@p+1
  2949  00307C  EF49  F018         	goto	l8546
  2950  003080                     l8540:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2954  003080  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  2955  003082  EF45  F018         	goto	u7611
  2956  003086  EF47  F018         	goto	u7610
  2957  00308A                     u7611:
  2958  00308A  EF34  F018         	goto	l8538
  2959  00308E                     u7610:
  2960  00308E  EF3A  F018         	goto	l1493
  2961  003092                     l8546:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2965  003092  0E67               	movlw	103
  2966  003094  19D6               	xorwf	efgtoa@mode& (0+255),w,b
  2967  003096  A4D8               	btfss	status,2,c
  2968  003098  EF50  F018         	goto	u7621
  2969  00309C  EF52  F018         	goto	u7620
  2970  0030A0                     u7621:
  2971  0030A0  EF81  F018         	goto	l8556
  2972  0030A4                     u7620:
  2973  0030A4                     
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2976  0030A4  AFE6               	btfss	(efgtoa@e+1)& (0+255),7,b
  2977  0030A6  EF60  F018         	goto	u7630
  2978  0030AA  0EFC               	movlw	252
  2979  0030AC  5DE5               	subwf	efgtoa@e& (0+255),w,b
  2980  0030AE  0EFF               	movlw	255
  2981  0030B0  59E6               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2982  0030B2  A0D8               	btfss	status,0,c
  2983  0030B4  EF5E  F018         	goto	u7631
  2984  0030B8  EF60  F018         	goto	u7630
  2985  0030BC                     u7631:
  2986  0030BC  EF7F  F018         	goto	l8554
  2987  0030C0                     u7630:
  2988  0030C0                     
  2989                           ; BSR set to: 0
  2990  0030C0  0EFF               	movlw	255
  2991  0030C2  6E39               	movwf	??_efgtoa^0,c
  2992  0030C4  0EFF               	movlw	255
  2993  0030C6  6E3A               	movwf	(??_efgtoa+1)^0,c
  2994  0030C8  C0D1  F03B         	movff	efgtoa@p,??_efgtoa+2
  2995  0030CC  C0D2  F03C         	movff	efgtoa@p+1,??_efgtoa+3
  2996  0030D0  5039               	movf	??_efgtoa^0,w,c
  2997  0030D2  263B               	addwf	(??_efgtoa+2)^0,f,c
  2998  0030D4  503A               	movf	(??_efgtoa+1)^0,w,c
  2999  0030D6  223C               	addwfc	(??_efgtoa+3)^0,f,c
  3000  0030D8  51E5               	movf	efgtoa@e& (0+255),w,b
  3001  0030DA  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  3002  0030DC  503C               	movf	(??_efgtoa+3)^0,w,c
  3003  0030DE  0A80               	xorlw	128
  3004  0030E0  6E3D               	movwf	(??_efgtoa+4)^0,c
  3005  0030E2  51E6               	movf	(efgtoa@e+1)& (0+255),w,b
  3006  0030E4  0A80               	xorlw	128
  3007  0030E6  583D               	subwfb	(??_efgtoa+4)^0,w,c
  3008  0030E8  A0D8               	btfss	status,0,c
  3009  0030EA  EF79  F018         	goto	u7641
  3010  0030EE  EF7B  F018         	goto	u7640
  3011  0030F2                     u7641:
  3012  0030F2  EF7F  F018         	goto	l8554
  3013  0030F6                     u7640:
  3014  0030F6                     
  3015                           ; BSR set to: 0
  3016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3017  0030F6  0E66               	movlw	102
  3018  0030F8  6FD5               	movwf	efgtoa@nmode& (0+255),b
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3021  0030FA  EF81  F018         	goto	l8556
  3022  0030FE                     l8554:
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3026  0030FE  0E65               	movlw	101
  3027  003100  6FD5               	movwf	efgtoa@nmode& (0+255),b
  3028  003102                     l8556:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3032  003102  C0D1  F0C7         	movff	efgtoa@p,efgtoa@m
  3033  003106  C0D2  F0C8         	movff	efgtoa@p+1,efgtoa@m+1
  3034  00310A                     
  3035                           ; BSR set to: 0
  3036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3037  00310A  0E67               	movlw	103
  3038  00310C  19D6               	xorwf	efgtoa@mode& (0+255),w,b
  3039  00310E  A4D8               	btfss	status,2,c
  3040  003110  EF8C  F018         	goto	u7651
  3041  003114  EF8E  F018         	goto	u7650
  3042  003118                     u7651:
  3043  003118  EF9E  F018         	goto	l8564
  3044  00311C                     u7650:
  3045  00311C                     
  3046                           ; BSR set to: 0
  3047  00311C  0E66               	movlw	102
  3048  00311E  19D5               	xorwf	efgtoa@nmode& (0+255),w,b
  3049  003120  A4D8               	btfss	status,2,c
  3050  003122  EF95  F018         	goto	u7661
  3051  003126  EF97  F018         	goto	u7660
  3052  00312A                     u7661:
  3053  00312A  EFA0  F018         	goto	l8566
  3054  00312E                     u7660:
  3055  00312E                     
  3056                           ; BSR set to: 0
  3057  00312E  BFE6               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3058  003130  EF9E  F018         	goto	u7670
  3059  003134  EF9C  F018         	goto	u7671
  3060  003138                     u7671:
  3061  003138  EFA0  F018         	goto	l8566
  3062  00313C                     u7670:
  3063  00313C                     l8564:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3067  00313C  4BC7               	infsnz	efgtoa@m& (0+255),f,b
  3068  00313E  2BC8               	incf	(efgtoa@m+1)& (0+255),f,b
  3069  003140                     l8566:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3073  003140  0E66               	movlw	102
  3074  003142  19D5               	xorwf	efgtoa@nmode& (0+255),w,b
  3075  003144  A4D8               	btfss	status,2,c
  3076  003146  EFA7  F018         	goto	u7681
  3077  00314A  EFA9  F018         	goto	u7680
  3078  00314E                     u7681:
  3079  00314E  EFC9  F018         	goto	l8576
  3080  003152                     u7680:
  3081  003152                     
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3084  003152  BFE6               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3085  003154  EFB0  F018         	goto	u7690
  3086  003158  EFAE  F018         	goto	u7691
  3087  00315C                     u7691:
  3088  00315C  EFBC  F018         	goto	l8572
  3089  003160                     u7690:
  3090  003160                     
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3093  003160  0E00               	movlw	0
  3094  003162  6FE9               	movwf	efgtoa@u& (0+255),b
  3095  003164  0E00               	movlw	0
  3096  003166  6FEA               	movwf	(efgtoa@u+1)& (0+255),b
  3097  003168  0E80               	movlw	128
  3098  00316A  6FEB               	movwf	(efgtoa@u+2)& (0+255),b
  3099  00316C  0E3F               	movlw	63
  3100  00316E  6FEC               	movwf	(efgtoa@u+3)& (0+255),b
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3103  003170  0E00               	movlw	0
  3104  003172  6FE6               	movwf	(efgtoa@e+1)& (0+255),b
  3105  003174  0E00               	movlw	0
  3106  003176  6FE5               	movwf	efgtoa@e& (0+255),b
  3107  003178                     l8572:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3111  003178  0E67               	movlw	103
  3112  00317A  19D6               	xorwf	efgtoa@mode& (0+255),w,b
  3113  00317C  B4D8               	btfsc	status,2,c
  3114  00317E  EFC3  F018         	goto	u7701
  3115  003182  EFC5  F018         	goto	u7700
  3116  003186                     u7701:
  3117  003186  EFC9  F018         	goto	l8576
  3118  00318A                     u7700:
  3119  00318A                     
  3120                           ; BSR set to: 0
  3121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3122  00318A  51E5               	movf	efgtoa@e& (0+255),w,b
  3123  00318C  27C7               	addwf	efgtoa@m& (0+255),f,b
  3124  00318E  51E6               	movf	(efgtoa@e+1)& (0+255),w,b
  3125  003190  23C8               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3126  003192                     l8576:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3130  003192  0E00               	movlw	0
  3131  003194  6FE0               	movwf	(efgtoa@i+1)& (0+255),b
  3132  003196  0E00               	movlw	0
  3133  003198  6FDF               	movwf	efgtoa@i& (0+255),b
  3134  00319A                     
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3137  00319A  C0E1  F0D7         	movff	efgtoa@g,efgtoa@h
  3138  00319E  C0E2  F0D8         	movff	efgtoa@g+1,efgtoa@h+1
  3139  0031A2  C0E3  F0D9         	movff	efgtoa@g+2,efgtoa@h+2
  3140  0031A6  C0E4  F0DA         	movff	efgtoa@g+3,efgtoa@h+3
  3141  0031AA                     
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3144  0031AA  C0E9  F0C9         	movff	efgtoa@u,efgtoa@ou
  3145  0031AE  C0EA  F0CA         	movff	efgtoa@u+1,efgtoa@ou+1
  3146  0031B2  C0EB  F0CB         	movff	efgtoa@u+2,efgtoa@ou+2
  3147  0031B6  C0EC  F0CC         	movff	efgtoa@u+3,efgtoa@ou+3
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3150  0031BA  EF5A  F019         	goto	l8590
  3151  0031BE                     l8582:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3155  0031BE  C0D7  F005         	movff	efgtoa@h,___fldiv@b
  3156  0031C2  C0D8  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3157  0031C6  C0D9  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3158  0031CA  C0DA  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3159  0031CE  C0E9  F009         	movff	efgtoa@u,___fldiv@a
  3160  0031D2  C0EA  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3161  0031D6  C0EB  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3162  0031DA  C0EC  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3163  0031DE  EC45  F023         	call	___fldiv	;wreg free
  3164  0031E2  C005  F01E         	movff	?___fldiv,floorf@x
  3165  0031E6  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3166  0031EA  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3167  0031EE  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3168  0031F2  EC5C  F026         	call	_floorf	;wreg free
  3169  0031F6  C01E  F0DB         	movff	?_floorf,efgtoa@l
  3170  0031FA  C01F  F0DC         	movff	?_floorf+1,efgtoa@l+1
  3171  0031FE  C020  F0DD         	movff	?_floorf+2,efgtoa@l+2
  3172  003202  C021  F0DE         	movff	?_floorf+3,efgtoa@l+3
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3175  003206  C0DB  F005         	movff	efgtoa@l,___fltol@f1
  3176  00320A  C0DC  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3177  00320E  C0DD  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3178  003212  C0DE  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3179  003216  ECC7  F029         	call	___fltol	;wreg free
  3180  00321A  C005  F0CD         	movff	?___fltol,efgtoa@d
  3181  00321E  C006  F0CE         	movff	?___fltol+1,efgtoa@d+1
  3182  003222                     
  3183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3184  003222  C0D7  F01E         	movff	efgtoa@h,___flsub@b
  3185  003226  C0D8  F01F         	movff	efgtoa@h+1,___flsub@b+1
  3186  00322A  C0D9  F020         	movff	efgtoa@h+2,___flsub@b+2
  3187  00322E  C0DA  F021         	movff	efgtoa@h+3,___flsub@b+3
  3188  003232  C0E9  F009         	movff	efgtoa@u,___flmul@a
  3189  003236  C0EA  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3190  00323A  C0EB  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3191  00323E  C0EC  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3192  003242  C0DB  F005         	movff	efgtoa@l,___flmul@b
  3193  003246  C0DC  F006         	movff	efgtoa@l+1,___flmul@b+1
  3194  00324A  C0DD  F007         	movff	efgtoa@l+2,___flmul@b+2
  3195  00324E  C0DE  F008         	movff	efgtoa@l+3,___flmul@b+3
  3196  003252  EC30  F021         	call	___flmul	;wreg free
  3197  003256  C005  F022         	movff	?___flmul,___flsub@a
  3198  00325A  C006  F023         	movff	?___flmul+1,___flsub@a+1
  3199  00325E  C007  F024         	movff	?___flmul+2,___flsub@a+2
  3200  003262  C008  F025         	movff	?___flmul+3,___flsub@a+3
  3201  003266  ECBA  F031         	call	___flsub	;wreg free
  3202  00326A  C01E  F0D7         	movff	?___flsub,efgtoa@h
  3203  00326E  C01F  F0D8         	movff	?___flsub+1,efgtoa@h+1
  3204  003272  C020  F0D9         	movff	?___flsub+2,efgtoa@h+2
  3205  003276  C021  F0DA         	movff	?___flsub+3,efgtoa@h+3
  3206  00327A                     
  3207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3208  00327A  C0E9  F005         	movff	efgtoa@u,___fldiv@b
  3209  00327E  C0EA  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3210  003282  C0EB  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3211  003286  C0EC  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3212  00328A  0E00               	movlw	0
  3213  00328C  6E09               	movwf	___fldiv@a^0,c
  3214  00328E  0E00               	movlw	0
  3215  003290  6E0A               	movwf	(___fldiv@a+1)^0,c
  3216  003292  0E20               	movlw	32
  3217  003294  6E0B               	movwf	(___fldiv@a+2)^0,c
  3218  003296  0E41               	movlw	65
  3219  003298  6E0C               	movwf	(___fldiv@a+3)^0,c
  3220  00329A  EC45  F023         	call	___fldiv	;wreg free
  3221  00329E  C005  F0E9         	movff	?___fldiv,efgtoa@u
  3222  0032A2  C006  F0EA         	movff	?___fldiv+1,efgtoa@u+1
  3223  0032A6  C007  F0EB         	movff	?___fldiv+2,efgtoa@u+2
  3224  0032AA  C008  F0EC         	movff	?___fldiv+3,efgtoa@u+3
  3225  0032AE                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3227  0032AE  0100               	movlb	0	; () banked
  3228  0032B0  4BDF               	infsnz	efgtoa@i& (0+255),f,b
  3229  0032B2  2BE0               	incf	(efgtoa@i+1)& (0+255),f,b
  3230  0032B4                     l8590:
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3234  0032B4  51C7               	movf	efgtoa@m& (0+255),w,b
  3235  0032B6  5DDF               	subwf	efgtoa@i& (0+255),w,b
  3236  0032B8  51E0               	movf	(efgtoa@i+1)& (0+255),w,b
  3237  0032BA  0A80               	xorlw	128
  3238  0032BC  6E39               	movwf	??_efgtoa^0,c
  3239  0032BE  51C8               	movf	(efgtoa@m+1)& (0+255),w,b
  3240  0032C0  0A80               	xorlw	128
  3241  0032C2  5839               	subwfb	??_efgtoa^0,w,c
  3242  0032C4  A0D8               	btfss	status,0,c
  3243  0032C6  EF67  F019         	goto	u7711
  3244  0032CA  EF69  F019         	goto	u7710
  3245  0032CE                     u7711:
  3246  0032CE  EFDF  F018         	goto	l8582
  3247  0032D2                     u7710:
  3248  0032D2                     
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3251  0032D2  C0E9  F005         	movff	efgtoa@u,___flmul@b
  3252  0032D6  C0EA  F006         	movff	efgtoa@u+1,___flmul@b+1
  3253  0032DA  C0EB  F007         	movff	efgtoa@u+2,___flmul@b+2
  3254  0032DE  C0EC  F008         	movff	efgtoa@u+3,___flmul@b+3
  3255  0032E2  0E00               	movlw	0
  3256  0032E4  6E09               	movwf	___flmul@a^0,c
  3257  0032E6  0E00               	movlw	0
  3258  0032E8  6E0A               	movwf	(___flmul@a+1)^0,c
  3259  0032EA  0EA0               	movlw	160
  3260  0032EC  6E0B               	movwf	(___flmul@a+2)^0,c
  3261  0032EE  0E40               	movlw	64
  3262  0032F0  6E0C               	movwf	(___flmul@a+3)^0,c
  3263  0032F2  EC30  F021         	call	___flmul	;wreg free
  3264  0032F6  C005  F0DB         	movff	?___flmul,efgtoa@l
  3265  0032FA  C006  F0DC         	movff	?___flmul+1,efgtoa@l+1
  3266  0032FE  C007  F0DD         	movff	?___flmul+2,efgtoa@l+2
  3267  003302  C008  F0DE         	movff	?___flmul+3,efgtoa@l+3
  3268  003306                     
  3269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3270  003306  C0D7  F01E         	movff	efgtoa@h,___flge@ff1
  3271  00330A  C0D8  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3272  00330E  C0D9  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3273  003312  C0DA  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3274  003316  C0DB  F022         	movff	efgtoa@l,___flge@ff2
  3275  00331A  C0DC  F023         	movff	efgtoa@l+1,___flge@ff2+1
  3276  00331E  C0DD  F024         	movff	efgtoa@l+2,___flge@ff2+2
  3277  003322  C0DE  F025         	movff	efgtoa@l+3,___flge@ff2+3
  3278  003326  EC4A  F02A         	call	___flge	;wreg free
  3279  00332A  B0D8               	btfsc	status,0,c
  3280  00332C  EF9A  F019         	goto	u7721
  3281  003330  EF9C  F019         	goto	u7720
  3282  003334                     u7721:
  3283  003334  EFA7  F019         	goto	l8598
  3284  003338                     u7720:
  3285  003338                     
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3287  003338  0E00               	movlw	0
  3288  00333A  0100               	movlb	0	; () banked
  3289  00333C  6FDB               	movwf	efgtoa@l& (0+255),b
  3290  00333E  0E00               	movlw	0
  3291  003340  6FDC               	movwf	(efgtoa@l+1)& (0+255),b
  3292  003342  0E00               	movlw	0
  3293  003344  6FDD               	movwf	(efgtoa@l+2)& (0+255),b
  3294  003346  0E00               	movlw	0
  3295  003348  6FDE               	movwf	(efgtoa@l+3)& (0+255),b
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3298  00334A  EFD0  F019         	goto	l8604
  3299  00334E                     l8598:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3302  00334E  C0D7  F005         	movff	efgtoa@h,___fleq@ff1
  3303  003352  C0D8  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3304  003356  C0D9  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3305  00335A  C0DA  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3306  00335E  C0DB  F009         	movff	efgtoa@l,___fleq@ff2
  3307  003362  C0DC  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3308  003366  C0DD  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3309  00336A  C0DE  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3310  00336E  EC98  F02D         	call	___fleq	;wreg free
  3311  003372  A0D8               	btfss	status,0,c
  3312  003374  EFBE  F019         	goto	u7731
  3313  003378  EFC0  F019         	goto	u7730
  3314  00337C                     u7731:
  3315  00337C  EFD0  F019         	goto	l8604
  3316  003380                     u7730:
  3317  003380  0100               	movlb	0	; () banked
  3318  003382  B1CD               	btfsc	efgtoa@d& (0+255),0,b
  3319  003384  EFC6  F019         	goto	u7741
  3320  003388  EFC8  F019         	goto	u7740
  3321  00338C                     u7741:
  3322  00338C  EFD0  F019         	goto	l8604
  3323  003390                     u7740:
  3324  003390                     
  3325                           ; BSR set to: 0
  3326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3327  003390  0E00               	movlw	0
  3328  003392  6FDB               	movwf	efgtoa@l& (0+255),b
  3329  003394  0E00               	movlw	0
  3330  003396  6FDC               	movwf	(efgtoa@l+1)& (0+255),b
  3331  003398  0E00               	movlw	0
  3332  00339A  6FDD               	movwf	(efgtoa@l+2)& (0+255),b
  3333  00339C  0E00               	movlw	0
  3334  00339E  6FDE               	movwf	(efgtoa@l+3)& (0+255),b
  3335  0033A0                     l8604:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3338  0033A0  C0E1  F005         	movff	efgtoa@g,___fladd@b
  3339  0033A4  C0E2  F006         	movff	efgtoa@g+1,___fladd@b+1
  3340  0033A8  C0E3  F007         	movff	efgtoa@g+2,___fladd@b+2
  3341  0033AC  C0E4  F008         	movff	efgtoa@g+3,___fladd@b+3
  3342  0033B0  C0DB  F009         	movff	efgtoa@l,___fladd@a
  3343  0033B4  C0DC  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3344  0033B8  C0DD  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3345  0033BC  C0DE  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3346  0033C0  EC80  F01C         	call	___fladd	;wreg free
  3347  0033C4  C005  F0D7         	movff	?___fladd,efgtoa@h
  3348  0033C8  C006  F0D8         	movff	?___fladd+1,efgtoa@h+1
  3349  0033CC  C007  F0D9         	movff	?___fladd+2,efgtoa@h+2
  3350  0033D0  C008  F0DA         	movff	?___fladd+3,efgtoa@h+3
  3351  0033D4                     
  3352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3353  0033D4  C0D7  F01E         	movff	efgtoa@h,___flge@ff1
  3354  0033D8  C0D8  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3355  0033DC  C0D9  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3356  0033E0  C0DA  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3357  0033E4  0E00               	movlw	0
  3358  0033E6  6E09               	movwf	___flmul@a^0,c
  3359  0033E8  0E00               	movlw	0
  3360  0033EA  6E0A               	movwf	(___flmul@a+1)^0,c
  3361  0033EC  0E20               	movlw	32
  3362  0033EE  6E0B               	movwf	(___flmul@a+2)^0,c
  3363  0033F0  0E41               	movlw	65
  3364  0033F2  6E0C               	movwf	(___flmul@a+3)^0,c
  3365  0033F4  C0C9  F005         	movff	efgtoa@ou,___flmul@b
  3366  0033F8  C0CA  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3367  0033FC  C0CB  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3368  003400  C0CC  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3369  003404  EC30  F021         	call	___flmul	;wreg free
  3370  003408  C005  F022         	movff	?___flmul,___flge@ff2
  3371  00340C  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3372  003410  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3373  003414  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3374  003418  EC4A  F02A         	call	___flge	;wreg free
  3375  00341C  A0D8               	btfss	status,0,c
  3376  00341E  EF13  F01A         	goto	u7751
  3377  003422  EF15  F01A         	goto	u7750
  3378  003426                     u7751:
  3379  003426  EF3E  F01A         	goto	l8616
  3380  00342A                     u7750:
  3381  00342A                     
  3382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3383  00342A  0100               	movlb	0	; () banked
  3384  00342C  4BE5               	infsnz	efgtoa@e& (0+255),f,b
  3385  00342E  2BE6               	incf	(efgtoa@e+1)& (0+255),f,b
  3386  003430                     
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3389  003430  C0C9  F005         	movff	efgtoa@ou,___flmul@b
  3390  003434  C0CA  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3391  003438  C0CB  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3392  00343C  C0CC  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3393  003440  0E00               	movlw	0
  3394  003442  6E09               	movwf	___flmul@a^0,c
  3395  003444  0E00               	movlw	0
  3396  003446  6E0A               	movwf	(___flmul@a+1)^0,c
  3397  003448  0E20               	movlw	32
  3398  00344A  6E0B               	movwf	(___flmul@a+2)^0,c
  3399  00344C  0E41               	movlw	65
  3400  00344E  6E0C               	movwf	(___flmul@a+3)^0,c
  3401  003450  EC30  F021         	call	___flmul	;wreg free
  3402  003454  C005  F0C9         	movff	?___flmul,efgtoa@ou
  3403  003458  C006  F0CA         	movff	?___flmul+1,efgtoa@ou+1
  3404  00345C  C007  F0CB         	movff	?___flmul+2,efgtoa@ou+2
  3405  003460  C008  F0CC         	movff	?___flmul+3,efgtoa@ou+3
  3406  003464                     
  3407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3408  003464  0E66               	movlw	102
  3409  003466  0100               	movlb	0	; () banked
  3410  003468  19D5               	xorwf	efgtoa@nmode& (0+255),w,b
  3411  00346A  A4D8               	btfss	status,2,c
  3412  00346C  EF3A  F01A         	goto	u7761
  3413  003470  EF3C  F01A         	goto	u7760
  3414  003474                     u7761:
  3415  003474  EF3E  F01A         	goto	l8616
  3416  003478                     u7760:
  3417  003478                     
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3420  003478  4BC7               	infsnz	efgtoa@m& (0+255),f,b
  3421  00347A  2BC8               	incf	(efgtoa@m+1)& (0+255),f,b
  3422  00347C                     l8616:
  3423                           
  3424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3425  00347C  C0C9  F0E9         	movff	efgtoa@ou,efgtoa@u
  3426  003480  C0CA  F0EA         	movff	efgtoa@ou+1,efgtoa@u+1
  3427  003484  C0CB  F0EB         	movff	efgtoa@ou+2,efgtoa@u+2
  3428  003488  C0CC  F0EC         	movff	efgtoa@ou+3,efgtoa@u+3
  3429  00348C                     
  3430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3431  00348C  0E65               	movlw	101
  3432  00348E  0100               	movlb	0	; () banked
  3433  003490  19D5               	xorwf	efgtoa@nmode& (0+255),w,b
  3434  003492  B4D8               	btfsc	status,2,c
  3435  003494  EF4E  F01A         	goto	u7771
  3436  003498  EF50  F01A         	goto	u7770
  3437  00349C                     u7771:
  3438  00349C  EF56  F01A         	goto	l8622
  3439  0034A0                     u7770:
  3440  0034A0                     
  3441                           ; BSR set to: 0
  3442  0034A0  C0E5  F0C5         	movff	efgtoa@e,efgtoa@ne
  3443  0034A4  C0E6  F0C6         	movff	efgtoa@e+1,efgtoa@ne+1
  3444  0034A8  EF5A  F01A         	goto	l1521
  3445  0034AC                     l8622:
  3446                           
  3447                           ; BSR set to: 0
  3448  0034AC  0E00               	movlw	0
  3449  0034AE  6FC6               	movwf	(efgtoa@ne+1)& (0+255),b
  3450  0034B0  0E00               	movlw	0
  3451  0034B2  6FC5               	movwf	efgtoa@ne& (0+255),b
  3452  0034B4                     l1521:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3456  0034B4  0E00               	movlw	0
  3457  0034B6  6FC4               	movwf	(efgtoa@pp+1)& (0+255),b
  3458  0034B8  0E00               	movlw	0
  3459  0034BA  6FC3               	movwf	efgtoa@pp& (0+255),b
  3460                           
  3461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3462  0034BC  0E00               	movlw	0
  3463  0034BE  6FC2               	movwf	(efgtoa@t+1)& (0+255),b
  3464  0034C0  0E00               	movlw	0
  3465  0034C2  6FC1               	movwf	efgtoa@t& (0+255),b
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3468  0034C4  0E00               	movlw	0
  3469  0034C6  6FE0               	movwf	(efgtoa@i+1)& (0+255),b
  3470  0034C8  0E00               	movlw	0
  3471  0034CA  6FDF               	movwf	efgtoa@i& (0+255),b
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3474  0034CC  EF55  F01B         	goto	l8672
  3475  0034D0                     l8624:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3479  0034D0  C0D7  F005         	movff	efgtoa@h,___fldiv@b
  3480  0034D4  C0D8  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3481  0034D8  C0D9  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3482  0034DC  C0DA  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3483  0034E0  C0E9  F009         	movff	efgtoa@u,___fldiv@a
  3484  0034E4  C0EA  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3485  0034E8  C0EB  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3486  0034EC  C0EC  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3487  0034F0  EC45  F023         	call	___fldiv	;wreg free
  3488  0034F4  C005  F01E         	movff	?___fldiv,floorf@x
  3489  0034F8  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3490  0034FC  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3491  003500  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3492  003504  EC5C  F026         	call	_floorf	;wreg free
  3493  003508  C01E  F0DB         	movff	?_floorf,efgtoa@l
  3494  00350C  C01F  F0DC         	movff	?_floorf+1,efgtoa@l+1
  3495  003510  C020  F0DD         	movff	?_floorf+2,efgtoa@l+2
  3496  003514  C021  F0DE         	movff	?_floorf+3,efgtoa@l+3
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3499  003518  C0DB  F005         	movff	efgtoa@l,___fltol@f1
  3500  00351C  C0DC  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3501  003520  C0DD  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3502  003524  C0DE  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3503  003528  ECC7  F029         	call	___fltol	;wreg free
  3504  00352C  C005  F0CD         	movff	?___fltol,efgtoa@d
  3505  003530  C006  F0CE         	movff	?___fltol+1,efgtoa@d+1
  3506  003534                     
  3507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3508  003534  0100               	movlb	0	; () banked
  3509  003536  B9A2               	btfsc	_flags& (0+255),4,b
  3510  003538  EFA0  F01A         	goto	u7781
  3511  00353C  EFA2  F01A         	goto	u7780
  3512  003540                     u7781:
  3513  003540  EFBF  F01A         	goto	l8636
  3514  003544                     u7780:
  3515  003544                     
  3516                           ; BSR set to: 0
  3517  003544  51CD               	movf	efgtoa@d& (0+255),w,b
  3518  003546  11CE               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3519  003548  A4D8               	btfss	status,2,c
  3520  00354A  EFA9  F01A         	goto	u7791
  3521  00354E  EFAB  F01A         	goto	u7790
  3522  003552                     u7791:
  3523  003552  EFBF  F01A         	goto	l8636
  3524  003556                     u7790:
  3525  003556                     
  3526                           ; BSR set to: 0
  3527  003556  0E67               	movlw	103
  3528  003558  19D6               	xorwf	efgtoa@mode& (0+255),w,b
  3529  00355A  A4D8               	btfss	status,2,c
  3530  00355C  EFB2  F01A         	goto	u7801
  3531  003560  EFB4  F01A         	goto	u7800
  3532  003564                     u7801:
  3533  003564  EFBF  F01A         	goto	l8636
  3534  003568                     u7800:
  3535  003568                     
  3536                           ; BSR set to: 0
  3537  003568  BFC6               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3538  00356A  EFBB  F01A         	goto	u7810
  3539  00356E  EFB9  F01A         	goto	u7811
  3540  003572                     u7811:
  3541  003572  EFBF  F01A         	goto	l8636
  3542  003576                     u7810:
  3543  003576                     
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3546  003576  4BC1               	infsnz	efgtoa@t& (0+255),f,b
  3547  003578  2BC2               	incf	(efgtoa@t+1)& (0+255),f,b
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3550  00357A  EF09  F01B         	goto	l8664
  3551  00357E                     l8636:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3555  00357E  51C3               	movf	efgtoa@pp& (0+255),w,b
  3556  003580  11C4               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3557  003582  A4D8               	btfss	status,2,c
  3558  003584  EFC6  F01A         	goto	u7821
  3559  003588  EFC8  F01A         	goto	u7820
  3560  00358C                     u7821:
  3561  00358C  EFF2  F01A         	goto	l8656
  3562  003590                     u7820:
  3563  003590                     
  3564                           ; BSR set to: 0
  3565  003590  BFC6               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3566  003592  EFCF  F01A         	goto	u7830
  3567  003596  EFCD  F01A         	goto	u7831
  3568  00359A                     u7831:
  3569  00359A  EFF2  F01A         	goto	l8656
  3570  00359E                     u7830:
  3571  00359E                     
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3574  00359E  0E10               	movlw	low _dbuf
  3575  0035A0  25E7               	addwf	efgtoa@n& (0+255),w,b
  3576  0035A2  6ED9               	movwf	fsr2l,c
  3577  0035A4  0E01               	movlw	high _dbuf
  3578  0035A6  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3579  0035A8  6EDA               	movwf	fsr2h,c
  3580  0035AA  0E2E               	movlw	46
  3581  0035AC  6EDF               	movwf	indf2,c
  3582  0035AE                     
  3583                           ; BSR set to: 0
  3584  0035AE  4BE7               	infsnz	efgtoa@n& (0+255),f,b
  3585  0035B0  2BE8               	incf	(efgtoa@n+1)& (0+255),f,b
  3586  0035B2                     
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3589  0035B2  07D3               	decf	efgtoa@w& (0+255),f,b
  3590  0035B4  A0D8               	btfss	status,0,c
  3591  0035B6  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  3592  0035B8                     
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3595  0035B8  0E00               	movlw	0
  3596  0035BA  6FC4               	movwf	(efgtoa@pp+1)& (0+255),b
  3597  0035BC  0E01               	movlw	1
  3598  0035BE  6FC3               	movwf	efgtoa@pp& (0+255),b
  3599  0035C0  EFF2  F01A         	goto	l8656
  3600  0035C4                     l8648:
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3604  0035C4  0E10               	movlw	low _dbuf
  3605  0035C6  25E7               	addwf	efgtoa@n& (0+255),w,b
  3606  0035C8  6ED9               	movwf	fsr2l,c
  3607  0035CA  0E01               	movlw	high _dbuf
  3608  0035CC  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3609  0035CE  6EDA               	movwf	fsr2h,c
  3610  0035D0  0E30               	movlw	48
  3611  0035D2  6EDF               	movwf	indf2,c
  3612  0035D4                     
  3613                           ; BSR set to: 0
  3614  0035D4  4BE7               	infsnz	efgtoa@n& (0+255),f,b
  3615  0035D6  2BE8               	incf	(efgtoa@n+1)& (0+255),f,b
  3616  0035D8                     
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3619  0035D8  07D3               	decf	efgtoa@w& (0+255),f,b
  3620  0035DA  A0D8               	btfss	status,0,c
  3621  0035DC  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  3622  0035DE                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3625  0035DE  07C1               	decf	efgtoa@t& (0+255),f,b
  3626  0035E0  A0D8               	btfss	status,0,c
  3627  0035E2  07C2               	decf	(efgtoa@t+1)& (0+255),f,b
  3628  0035E4                     l8656:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3632  0035E4  51C1               	movf	efgtoa@t& (0+255),w,b
  3633  0035E6  11C2               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3634  0035E8  A4D8               	btfss	status,2,c
  3635  0035EA  EFF9  F01A         	goto	u7841
  3636  0035EE  EFFB  F01A         	goto	u7840
  3637  0035F2                     u7841:
  3638  0035F2  EFE2  F01A         	goto	l8648
  3639  0035F6                     u7840:
  3640  0035F6                     
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3643  0035F6  0E10               	movlw	low _dbuf
  3644  0035F8  25E7               	addwf	efgtoa@n& (0+255),w,b
  3645  0035FA  6ED9               	movwf	fsr2l,c
  3646  0035FC  0E01               	movlw	high _dbuf
  3647  0035FE  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3648  003600  6EDA               	movwf	fsr2h,c
  3649  003602  51CD               	movf	efgtoa@d& (0+255),w,b
  3650  003604  0F30               	addlw	48
  3651  003606  6EDF               	movwf	indf2,c
  3652  003608                     
  3653                           ; BSR set to: 0
  3654  003608  4BE7               	infsnz	efgtoa@n& (0+255),f,b
  3655  00360A  2BE8               	incf	(efgtoa@n+1)& (0+255),f,b
  3656  00360C                     
  3657                           ; BSR set to: 0
  3658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3659  00360C  07D3               	decf	efgtoa@w& (0+255),f,b
  3660  00360E  A0D8               	btfss	status,0,c
  3661  003610  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  3662  003612                     l8664:
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3666  003612  C0D7  F01E         	movff	efgtoa@h,___flsub@b
  3667  003616  C0D8  F01F         	movff	efgtoa@h+1,___flsub@b+1
  3668  00361A  C0D9  F020         	movff	efgtoa@h+2,___flsub@b+2
  3669  00361E  C0DA  F021         	movff	efgtoa@h+3,___flsub@b+3
  3670  003622  C0E9  F009         	movff	efgtoa@u,___flmul@a
  3671  003626  C0EA  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3672  00362A  C0EB  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3673  00362E  C0EC  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3674  003632  C0DB  F005         	movff	efgtoa@l,___flmul@b
  3675  003636  C0DC  F006         	movff	efgtoa@l+1,___flmul@b+1
  3676  00363A  C0DD  F007         	movff	efgtoa@l+2,___flmul@b+2
  3677  00363E  C0DE  F008         	movff	efgtoa@l+3,___flmul@b+3
  3678  003642  EC30  F021         	call	___flmul	;wreg free
  3679  003646  C005  F022         	movff	?___flmul,___flsub@a
  3680  00364A  C006  F023         	movff	?___flmul+1,___flsub@a+1
  3681  00364E  C007  F024         	movff	?___flmul+2,___flsub@a+2
  3682  003652  C008  F025         	movff	?___flmul+3,___flsub@a+3
  3683  003656  ECBA  F031         	call	___flsub	;wreg free
  3684  00365A  C01E  F0D7         	movff	?___flsub,efgtoa@h
  3685  00365E  C01F  F0D8         	movff	?___flsub+1,efgtoa@h+1
  3686  003662  C020  F0D9         	movff	?___flsub+2,efgtoa@h+2
  3687  003666  C021  F0DA         	movff	?___flsub+3,efgtoa@h+3
  3688  00366A                     
  3689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3690  00366A  C0E9  F005         	movff	efgtoa@u,___fldiv@b
  3691  00366E  C0EA  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3692  003672  C0EB  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3693  003676  C0EC  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3694  00367A  0E00               	movlw	0
  3695  00367C  6E09               	movwf	___fldiv@a^0,c
  3696  00367E  0E00               	movlw	0
  3697  003680  6E0A               	movwf	(___fldiv@a+1)^0,c
  3698  003682  0E20               	movlw	32
  3699  003684  6E0B               	movwf	(___fldiv@a+2)^0,c
  3700  003686  0E41               	movlw	65
  3701  003688  6E0C               	movwf	(___fldiv@a+3)^0,c
  3702  00368A  EC45  F023         	call	___fldiv	;wreg free
  3703  00368E  C005  F0E9         	movff	?___fldiv,efgtoa@u
  3704  003692  C006  F0EA         	movff	?___fldiv+1,efgtoa@u+1
  3705  003696  C007  F0EB         	movff	?___fldiv+2,efgtoa@u+2
  3706  00369A  C008  F0EC         	movff	?___fldiv+3,efgtoa@u+3
  3707  00369E                     
  3708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3709  00369E  0100               	movlb	0	; () banked
  3710  0036A0  07C5               	decf	efgtoa@ne& (0+255),f,b
  3711  0036A2  A0D8               	btfss	status,0,c
  3712  0036A4  07C6               	decf	(efgtoa@ne+1)& (0+255),f,b
  3713  0036A6                     
  3714                           ; BSR set to: 0
  3715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3716  0036A6  4BDF               	infsnz	efgtoa@i& (0+255),f,b
  3717  0036A8  2BE0               	incf	(efgtoa@i+1)& (0+255),f,b
  3718  0036AA                     l8672:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3722  0036AA  51C7               	movf	efgtoa@m& (0+255),w,b
  3723  0036AC  5DDF               	subwf	efgtoa@i& (0+255),w,b
  3724  0036AE  51E0               	movf	(efgtoa@i+1)& (0+255),w,b
  3725  0036B0  0A80               	xorlw	128
  3726  0036B2  6E39               	movwf	??_efgtoa^0,c
  3727  0036B4  51C8               	movf	(efgtoa@m+1)& (0+255),w,b
  3728  0036B6  0A80               	xorlw	128
  3729  0036B8  5839               	subwfb	??_efgtoa^0,w,c
  3730  0036BA  B0D8               	btfsc	status,0,c
  3731  0036BC  EF62  F01B         	goto	u7851
  3732  0036C0  EF64  F01B         	goto	u7850
  3733  0036C4                     u7851:
  3734  0036C4  EF72  F01B         	goto	l8676
  3735  0036C8                     u7850:
  3736  0036C8                     
  3737                           ; BSR set to: 0
  3738  0036C8  BFE8               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3739  0036CA  EF70  F01B         	goto	u7861
  3740  0036CE  51E8               	movf	(efgtoa@n+1)& (0+255),w,b
  3741  0036D0  E109               	bnz	u7860
  3742  0036D2  0E4B               	movlw	75
  3743  0036D4  5DE7               	subwf	efgtoa@n& (0+255),w,b
  3744  0036D6  A0D8               	btfss	status,0,c
  3745  0036D8  EF70  F01B         	goto	u7861
  3746  0036DC  EF72  F01B         	goto	u7860
  3747  0036E0                     u7861:
  3748  0036E0  EF68  F01A         	goto	l8624
  3749  0036E4                     u7860:
  3750  0036E4                     l8676:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3754  0036E4  51C3               	movf	efgtoa@pp& (0+255),w,b
  3755  0036E6  11C4               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3756  0036E8  A4D8               	btfss	status,2,c
  3757  0036EA  EF79  F01B         	goto	u7871
  3758  0036EE  EF7B  F01B         	goto	u7870
  3759  0036F2                     u7871:
  3760  0036F2  EF8C  F01B         	goto	l8684
  3761  0036F6                     u7870:
  3762  0036F6                     
  3763                           ; BSR set to: 0
  3764  0036F6  A9A2               	btfss	_flags& (0+255),4,b
  3765  0036F8  EF80  F01B         	goto	u7881
  3766  0036FC  EF82  F01B         	goto	u7880
  3767  003700                     u7881:
  3768  003700  EF8C  F01B         	goto	l8684
  3769  003704                     u7880:
  3770  003704                     
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3773  003704  0E10               	movlw	low _dbuf
  3774  003706  25E7               	addwf	efgtoa@n& (0+255),w,b
  3775  003708  6ED9               	movwf	fsr2l,c
  3776  00370A  0E01               	movlw	high _dbuf
  3777  00370C  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3778  00370E  6EDA               	movwf	fsr2h,c
  3779  003710  0E2E               	movlw	46
  3780  003712  6EDF               	movwf	indf2,c
  3781  003714                     
  3782                           ; BSR set to: 0
  3783  003714  4BE7               	infsnz	efgtoa@n& (0+255),f,b
  3784  003716  2BE8               	incf	(efgtoa@n+1)& (0+255),f,b
  3785  003718                     l8684:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3789  003718  0E10               	movlw	low _dbuf
  3790  00371A  25E7               	addwf	efgtoa@n& (0+255),w,b
  3791  00371C  6ED9               	movwf	fsr2l,c
  3792  00371E  0E01               	movlw	high _dbuf
  3793  003720  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3794  003722  6EDA               	movwf	fsr2h,c
  3795  003724  0E00               	movlw	0
  3796  003726  6EDF               	movwf	indf2,c
  3797  003728                     
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3800  003728  0E65               	movlw	101
  3801  00372A  19D5               	xorwf	efgtoa@nmode& (0+255),w,b
  3802  00372C  A4D8               	btfss	status,2,c
  3803  00372E  EF9B  F01B         	goto	u7891
  3804  003732  EF9D  F01B         	goto	u7890
  3805  003736                     u7891:
  3806  003736  EF6D  F01C         	goto	l8746
  3807  00373A                     u7890:
  3808  00373A                     
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3811  00373A  0E00               	movlw	0
  3812  00373C  6FE0               	movwf	(efgtoa@i+1)& (0+255),b
  3813  00373E  0E4F               	movlw	79
  3814  003740  6FDF               	movwf	efgtoa@i& (0+255),b
  3815  003742                     
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3818  003742  0E10               	movlw	low _dbuf
  3819  003744  25DF               	addwf	efgtoa@i& (0+255),w,b
  3820  003746  6ED9               	movwf	fsr2l,c
  3821  003748  0E01               	movlw	high _dbuf
  3822  00374A  21E0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3823  00374C  6EDA               	movwf	fsr2h,c
  3824  00374E  0E00               	movlw	0
  3825  003750  6EDF               	movwf	indf2,c
  3826  003752                     
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3829  003752  0E00               	movlw	0
  3830  003754  6FD0               	movwf	(efgtoa@sign+1)& (0+255),b
  3831  003756  0E00               	movlw	0
  3832  003758  6FCF               	movwf	efgtoa@sign& (0+255),b
  3833  00375A                     
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3836  00375A  BFE6               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3837  00375C  EFB4  F01B         	goto	u7900
  3838  003760  EFB2  F01B         	goto	u7901
  3839  003764                     u7901:
  3840  003764  EFBC  F01B         	goto	l8700
  3841  003768                     u7900:
  3842  003768                     
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3845  003768  0E00               	movlw	0
  3846  00376A  6FD0               	movwf	(efgtoa@sign+1)& (0+255),b
  3847  00376C  0E01               	movlw	1
  3848  00376E  6FCF               	movwf	efgtoa@sign& (0+255),b
  3849  003770                     
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3852  003770  6DE5               	negf	efgtoa@e& (0+255),b
  3853  003772  1FE6               	comf	(efgtoa@e+1)& (0+255),f,b
  3854  003774  B0D8               	btfsc	status,0,c
  3855  003776  2BE6               	incf	(efgtoa@e+1)& (0+255),f,b
  3856  003778                     l8700:
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3860  003778  0E00               	movlw	0
  3861  00377A  6FD2               	movwf	(efgtoa@p+1)& (0+255),b
  3862  00377C  0E02               	movlw	2
  3863  00377E  6FD1               	movwf	efgtoa@p& (0+255),b
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3866  003780  EFED  F01B         	goto	l8712
  3867  003784                     l8702:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3871  003784  07DF               	decf	efgtoa@i& (0+255),f,b
  3872  003786  A0D8               	btfss	status,0,c
  3873  003788  07E0               	decf	(efgtoa@i+1)& (0+255),f,b
  3874  00378A                     
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3877  00378A  0E10               	movlw	low _dbuf
  3878  00378C  25DF               	addwf	efgtoa@i& (0+255),w,b
  3879  00378E  6ED9               	movwf	fsr2l,c
  3880  003790  0E01               	movlw	high _dbuf
  3881  003792  21E0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3882  003794  6EDA               	movwf	fsr2h,c
  3883  003796  C0E5  F005         	movff	efgtoa@e,___awmod@dividend
  3884  00379A  C0E6  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  3885  00379E  0E00               	movlw	0
  3886  0037A0  6E08               	movwf	(___awmod@divisor+1)^0,c
  3887  0037A2  0E0A               	movlw	10
  3888  0037A4  6E07               	movwf	___awmod@divisor^0,c
  3889  0037A6  EC40  F02D         	call	___awmod	;wreg free
  3890  0037AA  5005               	movf	?___awmod^0,w,c
  3891  0037AC  0F30               	addlw	48
  3892  0037AE  6EDF               	movwf	indf2,c
  3893  0037B0                     
  3894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3895  0037B0  C0E5  F005         	movff	efgtoa@e,___awdiv@dividend
  3896  0037B4  C0E6  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  3897  0037B8  0E00               	movlw	0
  3898  0037BA  6E08               	movwf	(___awdiv@divisor+1)^0,c
  3899  0037BC  0E0A               	movlw	10
  3900  0037BE  6E07               	movwf	___awdiv@divisor^0,c
  3901  0037C0  EC1C  F02C         	call	___awdiv	;wreg free
  3902  0037C4  C005  F0E5         	movff	?___awdiv,efgtoa@e
  3903  0037C8  C006  F0E6         	movff	?___awdiv+1,efgtoa@e+1
  3904  0037CC                     
  3905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3906  0037CC  0100               	movlb	0	; () banked
  3907  0037CE  07D1               	decf	efgtoa@p& (0+255),f,b
  3908  0037D0  A0D8               	btfss	status,0,c
  3909  0037D2  07D2               	decf	(efgtoa@p+1)& (0+255),f,b
  3910  0037D4                     
  3911                           ; BSR set to: 0
  3912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3913  0037D4  07D3               	decf	efgtoa@w& (0+255),f,b
  3914  0037D6  A0D8               	btfss	status,0,c
  3915  0037D8  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  3916  0037DA                     l8712:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3920  0037DA  51E5               	movf	efgtoa@e& (0+255),w,b
  3921  0037DC  11E6               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3922  0037DE  A4D8               	btfss	status,2,c
  3923  0037E0  EFF4  F01B         	goto	u7911
  3924  0037E4  EFF6  F01B         	goto	u7910
  3925  0037E8                     u7911:
  3926  0037E8  EFC2  F01B         	goto	l8702
  3927  0037EC                     u7910:
  3928  0037EC                     
  3929                           ; BSR set to: 0
  3930  0037EC  BFD2               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3931  0037EE  EF03  F01C         	goto	u7920
  3932  0037F2  51D2               	movf	(efgtoa@p+1)& (0+255),w,b
  3933  0037F4  E106               	bnz	u7921
  3934  0037F6  05D1               	decf	efgtoa@p& (0+255),w,b
  3935  0037F8  B0D8               	btfsc	status,0,c
  3936  0037FA  EF01  F01C         	goto	u7921
  3937  0037FE  EF03  F01C         	goto	u7920
  3938  003802                     u7921:
  3939  003802  EFC2  F01B         	goto	l8702
  3940  003806                     u7920:
  3941  003806                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  3944  003806  07DF               	decf	efgtoa@i& (0+255),f,b
  3945  003808  A0D8               	btfss	status,0,c
  3946  00380A  07E0               	decf	(efgtoa@i+1)& (0+255),f,b
  3947  00380C                     
  3948                           ; BSR set to: 0
  3949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3950  00380C  51CF               	movf	efgtoa@sign& (0+255),w,b
  3951  00380E  11D0               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3952  003810  A4D8               	btfss	status,2,c
  3953  003812  EF0D  F01C         	goto	u7931
  3954  003816  EF0F  F01C         	goto	u7930
  3955  00381A                     u7931:
  3956  00381A  EF15  F01C         	goto	l8722
  3957  00381E                     u7930:
  3958  00381E                     
  3959                           ; BSR set to: 0
  3960  00381E  0E00               	movlw	0
  3961  003820  6FBC               	movwf	(_efgtoa$2170+1)& (0+255),b
  3962  003822  0E2B               	movlw	43
  3963  003824  6FBB               	movwf	_efgtoa$2170& (0+255),b
  3964  003826  EF19  F01C         	goto	l8724
  3965  00382A                     l8722:
  3966                           
  3967                           ; BSR set to: 0
  3968  00382A  0E00               	movlw	0
  3969  00382C  6FBC               	movwf	(_efgtoa$2170+1)& (0+255),b
  3970  00382E  0E2D               	movlw	45
  3971  003830  6FBB               	movwf	_efgtoa$2170& (0+255),b
  3972  003832                     l8724:
  3973                           
  3974                           ; BSR set to: 0
  3975  003832  0E10               	movlw	low _dbuf
  3976  003834  25DF               	addwf	efgtoa@i& (0+255),w,b
  3977  003836  6ED9               	movwf	fsr2l,c
  3978  003838  0E01               	movlw	high _dbuf
  3979  00383A  21E0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3980  00383C  6EDA               	movwf	fsr2h,c
  3981  00383E  C0BB  FFDF         	movff	_efgtoa$2170,indf2
  3982  003842                     
  3983                           ; BSR set to: 0
  3984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  3985  003842  07D3               	decf	efgtoa@w& (0+255),f,b
  3986  003844  A0D8               	btfss	status,0,c
  3987  003846  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  3988  003848                     
  3989                           ; BSR set to: 0
  3990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3991  003848  07DF               	decf	efgtoa@i& (0+255),f,b
  3992  00384A  A0D8               	btfss	status,0,c
  3993  00384C  07E0               	decf	(efgtoa@i+1)& (0+255),f,b
  3994  00384E                     
  3995                           ; BSR set to: 0
  3996  00384E  0EBF               	movlw	191
  3997  003850  6E39               	movwf	??_efgtoa^0,c
  3998  003852  0EFF               	movlw	255
  3999  003854  6E3A               	movwf	(??_efgtoa+1)^0,c
  4000  003856  5038               	movf	efgtoa@c^0,w,c
  4001  003858  6E3B               	movwf	(??_efgtoa+2)^0,c
  4002  00385A  6A3C               	clrf	(??_efgtoa+3)^0,c
  4003  00385C  5039               	movf	??_efgtoa^0,w,c
  4004  00385E  263B               	addwf	(??_efgtoa+2)^0,f,c
  4005  003860  503A               	movf	(??_efgtoa+1)^0,w,c
  4006  003862  223C               	addwfc	(??_efgtoa+3)^0,f,c
  4007  003864  503C               	movf	(??_efgtoa+3)^0,w,c
  4008  003866  E10A               	bnz	u7940
  4009  003868  0E1A               	movlw	26
  4010  00386A  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  4011  00386C  A0D8               	btfss	status,0,c
  4012  00386E  EF3B  F01C         	goto	u7941
  4013  003872  EF3E  F01C         	goto	u7940
  4014  003876                     u7941:
  4015  003876  0E01               	movlw	1
  4016  003878  EF3F  F01C         	goto	u7950
  4017  00387C                     u7940:
  4018  00387C  0E00               	movlw	0
  4019  00387E                     u7950:
  4020  00387E  6FBF               	movwf	_efgtoa$2172& (0+255),b
  4021  003880  6BC0               	clrf	(_efgtoa$2172+1)& (0+255),b
  4022  003882                     
  4023                           ; BSR set to: 0
  4024  003882  51BF               	movf	_efgtoa$2172& (0+255),w,b
  4025  003884  11C0               	iorwf	(_efgtoa$2172+1)& (0+255),w,b
  4026  003886  A4D8               	btfss	status,2,c
  4027  003888  EF48  F01C         	goto	u7961
  4028  00388C  EF4A  F01C         	goto	u7960
  4029  003890                     u7961:
  4030  003890  EF50  F01C         	goto	l8738
  4031  003894                     u7960:
  4032  003894                     
  4033                           ; BSR set to: 0
  4034  003894  0E00               	movlw	0
  4035  003896  6FBE               	movwf	(_efgtoa$2171+1)& (0+255),b
  4036  003898  0E65               	movlw	101
  4037  00389A  6FBD               	movwf	_efgtoa$2171& (0+255),b
  4038  00389C  EF54  F01C         	goto	l8740
  4039  0038A0                     l8738:
  4040                           
  4041                           ; BSR set to: 0
  4042  0038A0  0E00               	movlw	0
  4043  0038A2  6FBE               	movwf	(_efgtoa$2171+1)& (0+255),b
  4044  0038A4  0E45               	movlw	69
  4045  0038A6  6FBD               	movwf	_efgtoa$2171& (0+255),b
  4046  0038A8                     l8740:
  4047                           
  4048                           ; BSR set to: 0
  4049  0038A8  0E10               	movlw	low _dbuf
  4050  0038AA  25DF               	addwf	efgtoa@i& (0+255),w,b
  4051  0038AC  6ED9               	movwf	fsr2l,c
  4052  0038AE  0E01               	movlw	high _dbuf
  4053  0038B0  21E0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4054  0038B2  6EDA               	movwf	fsr2h,c
  4055  0038B4  C0BD  FFDF         	movff	_efgtoa$2171,indf2
  4056  0038B8                     
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4059  0038B8  07D3               	decf	efgtoa@w& (0+255),f,b
  4060  0038BA  A0D8               	btfss	status,0,c
  4061  0038BC  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  4062  0038BE                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4065  0038BE  0E10               	movlw	low _dbuf
  4066  0038C0  25E7               	addwf	efgtoa@n& (0+255),w,b
  4067  0038C2  6E05               	movwf	strcpy@dest^0,c
  4068  0038C4  0E01               	movlw	high _dbuf
  4069  0038C6  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4070  0038C8  6E06               	movwf	(strcpy@dest+1)^0,c
  4071  0038CA  0E10               	movlw	low _dbuf
  4072  0038CC  25DF               	addwf	efgtoa@i& (0+255),w,b
  4073  0038CE  6E07               	movwf	strcpy@src^0,c
  4074  0038D0  0E01               	movlw	high _dbuf
  4075  0038D2  21E0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4076  0038D4  6E08               	movwf	(strcpy@src+1)^0,c
  4077  0038D6  EC09  F031         	call	_strcpy	;wreg free
  4078  0038DA                     l8746:
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  4081  0038DA  C032  F017         	movff	efgtoa@fp,pad@fp
  4082  0038DE  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  4083  0038E2  0E10               	movlw	low _dbuf
  4084  0038E4  6E19               	movwf	pad@buf^0,c
  4085  0038E6  0E01               	movlw	high _dbuf
  4086  0038E8  6E1A               	movwf	(pad@buf+1)^0,c
  4087  0038EA  C0D3  F01B         	movff	efgtoa@w,pad@p
  4088  0038EE  C0D4  F01C         	movff	efgtoa@w+1,pad@p+1
  4089  0038F2  ECB9  F02B         	call	_pad	;wreg free
  4090  0038F6  C017  F032         	movff	?_pad,?_efgtoa
  4091  0038FA  C018  F033         	movff	?_pad+1,?_efgtoa+1
  4092  0038FE                     l1475:
  4093  0038FE  0012               	return		;funcret
  4094  003900                     __end_of_efgtoa:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _tolower *****************
  4098 ;; Defined at:
  4099 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  c               2   10[COMRAM] int 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  2   10[COMRAM] int 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;Total ram usage:        8 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; Hardware stack levels required when called: 5
  4120 ;; This function calls:
  4121 ;;		_isupper
  4122 ;; This function is called by:
  4123 ;;		_efgtoa
  4124 ;;		_vfpfcnvrt
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text6
  4129  0061B2                     __ptext6:
  4130                           	callstack 0
  4131  0061B2                     _tolower:
  4132                           	callstack 22
  4133  0061B2  0EBF               	movlw	191
  4134  0061B4  6E0D               	movwf	??_tolower^0,c
  4135  0061B6  0EFF               	movlw	255
  4136  0061B8  6E0E               	movwf	(??_tolower+1)^0,c
  4137  0061BA  C00B  F00F         	movff	tolower@c,??_tolower+2
  4138  0061BE  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4139  0061C2  500D               	movf	??_tolower^0,w,c
  4140  0061C4  260F               	addwf	(??_tolower+2)^0,f,c
  4141  0061C6  500E               	movf	(??_tolower+1)^0,w,c
  4142  0061C8  2210               	addwfc	(??_tolower+3)^0,f,c
  4143  0061CA  5010               	movf	(??_tolower+3)^0,w,c
  4144  0061CC  E10A               	bnz	u7260
  4145  0061CE  0E1A               	movlw	26
  4146  0061D0  5C0F               	subwf	(??_tolower+2)^0,w,c
  4147  0061D2  A0D8               	btfss	status,0,c
  4148  0061D4  EFEE  F030         	goto	u7261
  4149  0061D8  EFF1  F030         	goto	u7260
  4150  0061DC                     u7261:
  4151  0061DC  0E01               	movlw	1
  4152  0061DE  EFF2  F030         	goto	u7270
  4153  0061E2                     u7260:
  4154  0061E2  0E00               	movlw	0
  4155  0061E4                     u7270:
  4156  0061E4  6E11               	movwf	_tolower$2313^0,c
  4157  0061E6  6A12               	clrf	(_tolower$2313+1)^0,c
  4158  0061E8  5011               	movf	_tolower$2313^0,w,c
  4159  0061EA  1012               	iorwf	(_tolower$2313+1)^0,w,c
  4160  0061EC  B4D8               	btfsc	status,2,c
  4161  0061EE  EFFB  F030         	goto	u7281
  4162  0061F2  EFFD  F030         	goto	u7280
  4163  0061F6                     u7281:
  4164  0061F6  EF04  F031         	goto	l1702
  4165  0061FA                     u7280:
  4166  0061FA  0E20               	movlw	32
  4167  0061FC  100B               	iorwf	tolower@c^0,w,c
  4168  0061FE  6E0B               	movwf	?_tolower^0,c
  4169  006200  500C               	movf	(tolower@c+1)^0,w,c
  4170  006202  6E0C               	movwf	(?_tolower+1)^0,c
  4171  006204  EF08  F031         	goto	l1707
  4172  006208                     l1702:
  4173  006208  C00B  F00B         	movff	tolower@c,?_tolower
  4174  00620C  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4175  006210                     l1707:
  4176  006210  0012               	return		;funcret
  4177  006212                     __end_of_tolower:
  4178                           	callstack 0
  4179                           
  4180 ;; *************** function _isupper *****************
  4181 ;; Defined at:
  4182 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  c               2    4[COMRAM] int 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2    4[COMRAM] int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;Total ram usage:        6 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 4
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_efgtoa
  4207 ;;		_vfpfcnvrt
  4208 ;;		_tolower
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text7
  4213  00650A                     __ptext7:
  4214                           	callstack 0
  4215  00650A                     _isupper:
  4216                           	callstack 22
  4217  00650A  0EBF               	movlw	191
  4218  00650C  6E07               	movwf	??_isupper^0,c
  4219  00650E  0EFF               	movlw	255
  4220  006510  6E08               	movwf	(??_isupper+1)^0,c
  4221  006512  C005  F009         	movff	isupper@c,??_isupper+2
  4222  006516  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4223  00651A  5007               	movf	??_isupper^0,w,c
  4224  00651C  2609               	addwf	(??_isupper+2)^0,f,c
  4225  00651E  5008               	movf	(??_isupper+1)^0,w,c
  4226  006520  220A               	addwfc	(??_isupper+3)^0,f,c
  4227  006522  500A               	movf	(??_isupper+3)^0,w,c
  4228  006524  E10A               	bnz	u6410
  4229  006526  0E1A               	movlw	26
  4230  006528  5C09               	subwf	(??_isupper+2)^0,w,c
  4231  00652A  A0D8               	btfss	status,0,c
  4232  00652C  EF9A  F032         	goto	u6411
  4233  006530  EF9D  F032         	goto	u6410
  4234  006534                     u6411:
  4235  006534  0E01               	movlw	1
  4236  006536  EF9E  F032         	goto	u6420
  4237  00653A                     u6410:
  4238  00653A  0E00               	movlw	0
  4239  00653C                     u6420:
  4240  00653C  6E05               	movwf	?_isupper^0,c
  4241  00653E  6A06               	clrf	(?_isupper+1)^0,c
  4242  006540  0012               	return		;funcret
  4243  006542                     __end_of_isupper:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function _strcpy *****************
  4247 ;; Defined at:
  4248 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4251 ;;		 -> dbuf(80), 
  4252 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4253 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4254 ;;		 -> dbuf(80), 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  d               2   12[COMRAM] PTR unsigned char 
  4257 ;;		 -> dbuf(80), 
  4258 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4259 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4260 ;;		 -> dbuf(80), 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  2    4[COMRAM] PTR unsigned char 
  4263 ;; Registers used:
  4264 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;Total ram usage:       10 bytes
  4275 ;; Hardware stack levels used: 1
  4276 ;; Hardware stack levels required when called: 4
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_efgtoa
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text8
  4285  006212                     __ptext8:
  4286                           	callstack 0
  4287  006212                     _strcpy:
  4288                           	callstack 22
  4289  006212  C007  F00B         	movff	strcpy@src,strcpy@s
  4290  006216  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4291  00621A  C005  F00D         	movff	strcpy@dest,strcpy@d
  4292  00621E  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4293  006222                     l8386:
  4294  006222  500B               	movf	strcpy@s^0,w,c
  4295  006224  6E09               	movwf	??_strcpy^0,c
  4296  006226  500C               	movf	(strcpy@s+1)^0,w,c
  4297  006228  6E0A               	movwf	(??_strcpy+1)^0,c
  4298  00622A  4A0B               	infsnz	strcpy@s^0,f,c
  4299  00622C  2A0C               	incf	(strcpy@s+1)^0,f,c
  4300  00622E  C009  FFF6         	movff	??_strcpy,tblptrl
  4301  006232  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4302  006236  0E00               	movlw	low (__smallconst shr (0+16))
  4303  006238  6EF8               	movwf	tblptru,c
  4304  00623A  C00D  FFD9         	movff	strcpy@d,fsr2l
  4305  00623E  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4306  006242  4A0D               	infsnz	strcpy@d^0,f,c
  4307  006244  2A0E               	incf	(strcpy@d+1)^0,f,c
  4308  006246  0E0F               	movlw	(high __ramtop+-1)
  4309  006248  64F7               	cpfsgt	tblptrh,c
  4310  00624A  D003               	bra	u7247
  4311  00624C  0008               	tblrd		*
  4312  00624E  50F5               	movf	tablat,w,c
  4313  006250  D005               	bra	u7240
  4314  006252                     u7247:
  4315  006252  CFF6 FFE9          	movff	tblptrl,fsr0l
  4316  006256  CFF7 FFEA          	movff	tblptrh,fsr0h
  4317  00625A  50EF               	movf	indf0,w,c
  4318  00625C                     u7240:
  4319  00625C  6EDF               	movwf	indf2,c
  4320  00625E  50DF               	movf	indf2,w,c
  4321  006260  A4D8               	btfss	status,2,c
  4322  006262  EF35  F031         	goto	u7251
  4323  006266  EF37  F031         	goto	u7250
  4324  00626A                     u7251:
  4325  00626A  EF11  F031         	goto	l8386
  4326  00626E                     u7250:
  4327  00626E  0012               	return		;funcret
  4328  006270                     __end_of_strcpy:
  4329                           	callstack 0
  4330                           
  4331 ;; *************** function _pad *****************
  4332 ;; Defined at:
  4333 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4336 ;;		 -> NULL(0), 
  4337 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4338 ;;		 -> dbuf(80), 
  4339 ;;  p               2   26[COMRAM] int 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  w               2   31[COMRAM] int 
  4342 ;;  i               2   29[COMRAM] int 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  2   22[COMRAM] int 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4352 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;Total ram usage:       11 bytes
  4357 ;; Hardware stack levels used: 1
  4358 ;; Hardware stack levels required when called: 8
  4359 ;; This function calls:
  4360 ;;		_fputc
  4361 ;;		_fputs
  4362 ;;		_strlen
  4363 ;; This function is called by:
  4364 ;;		_efgtoa
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text9
  4369  005772                     __ptext9:
  4370                           	callstack 0
  4371  005772                     _pad:
  4372                           	callstack 18
  4373  005772                     
  4374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4375  005772  0100               	movlb	0	; () banked
  4376  005774  A1A2               	btfss	_flags& (0+255),0,b
  4377  005776  EFBF  F02B         	goto	u7131
  4378  00577A  EFC1  F02B         	goto	u7130
  4379  00577E                     u7131:
  4380  00577E  EFCB  F02B         	goto	l8344
  4381  005782                     u7130:
  4382  005782                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4385  005782  C019  F010         	movff	pad@buf,fputs@s
  4386  005786  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4387  00578A  C017  F012         	movff	pad@fp,fputs@fp
  4388  00578E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4389  005792  EC00  F032         	call	_fputs	;wreg free
  4390  005796                     l8344:
  4391                           
  4392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4393  005796  BE1C               	btfsc	(pad@p+1)^0,7,c
  4394  005798  EFD0  F02B         	goto	u7141
  4395  00579C  EFD2  F02B         	goto	u7140
  4396  0057A0                     u7141:
  4397  0057A0  EFD8  F02B         	goto	l8348
  4398  0057A4                     u7140:
  4399  0057A4  C01B  F020         	movff	pad@p,pad@w
  4400  0057A8  C01C  F021         	movff	pad@p+1,pad@w+1
  4401  0057AC  EFDC  F02B         	goto	l1452
  4402  0057B0                     l8348:
  4403  0057B0  0E00               	movlw	0
  4404  0057B2  6E21               	movwf	(pad@w+1)^0,c
  4405  0057B4  0E00               	movlw	0
  4406  0057B6  6E20               	movwf	pad@w^0,c
  4407  0057B8                     l1452:
  4408                           
  4409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4410  0057B8  0E00               	movlw	0
  4411  0057BA  6E1F               	movwf	(pad@i+1)^0,c
  4412  0057BC  0E00               	movlw	0
  4413  0057BE  6E1E               	movwf	pad@i^0,c
  4414                           
  4415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4416  0057C0  EFEE  F02B         	goto	l8354
  4417  0057C4                     l8350:
  4418                           
  4419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4420  0057C4  0E00               	movlw	0
  4421  0057C6  6E08               	movwf	(fputc@c+1)^0,c
  4422  0057C8  0E20               	movlw	32
  4423  0057CA  6E07               	movwf	fputc@c^0,c
  4424  0057CC  C017  F009         	movff	pad@fp,fputc@fp
  4425  0057D0  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4426  0057D4  EC40  F02E         	call	_fputc	;wreg free
  4427  0057D8                     
  4428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4429  0057D8  4A1E               	infsnz	pad@i^0,f,c
  4430  0057DA  2A1F               	incf	(pad@i+1)^0,f,c
  4431  0057DC                     l8354:
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4434  0057DC  5020               	movf	pad@w^0,w,c
  4435  0057DE  5C1E               	subwf	pad@i^0,w,c
  4436  0057E0  501F               	movf	(pad@i+1)^0,w,c
  4437  0057E2  0A80               	xorlw	128
  4438  0057E4  6E1D               	movwf	??_pad^0,c
  4439  0057E6  5021               	movf	(pad@w+1)^0,w,c
  4440  0057E8  0A80               	xorlw	128
  4441  0057EA  581D               	subwfb	??_pad^0,w,c
  4442  0057EC  A0D8               	btfss	status,0,c
  4443  0057EE  EFFB  F02B         	goto	u7151
  4444  0057F2  EFFD  F02B         	goto	u7150
  4445  0057F6                     u7151:
  4446  0057F6  EFE2  F02B         	goto	l8350
  4447  0057FA                     u7150:
  4448  0057FA                     
  4449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4450  0057FA  0100               	movlb	0	; () banked
  4451  0057FC  B1A2               	btfsc	_flags& (0+255),0,b
  4452  0057FE  EF03  F02C         	goto	u7161
  4453  005802  EF05  F02C         	goto	u7160
  4454  005806                     u7161:
  4455  005806  EF0F  F02C         	goto	l8358
  4456  00580A                     u7160:
  4457  00580A                     
  4458                           ; BSR set to: 0
  4459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4460  00580A  C019  F010         	movff	pad@buf,fputs@s
  4461  00580E  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4462  005812  C017  F012         	movff	pad@fp,fputs@fp
  4463  005816  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4464  00581A  EC00  F032         	call	_fputs	;wreg free
  4465  00581E                     l8358:
  4466                           
  4467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4468  00581E  C019  F005         	movff	pad@buf,strlen@s
  4469  005822  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4470  005826  ECD9  F032         	call	_strlen	;wreg free
  4471  00582A  5020               	movf	pad@w^0,w,c
  4472  00582C  2405               	addwf	?_strlen^0,w,c
  4473  00582E  6E17               	movwf	?_pad^0,c
  4474  005830  5021               	movf	(pad@w+1)^0,w,c
  4475  005832  2006               	addwfc	(?_strlen+1)^0,w,c
  4476  005834  6E18               	movwf	(?_pad+1)^0,c
  4477  005836  0012               	return		;funcret
  4478  005838                     __end_of_pad:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function _strlen *****************
  4482 ;; Defined at:
  4483 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4486 ;;		 -> dbuf(80), 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4489 ;;		 -> dbuf(80), 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2    4[COMRAM] unsigned int 
  4492 ;; Registers used:
  4493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;Total ram usage:        4 bytes
  4504 ;; Hardware stack levels used: 1
  4505 ;; Hardware stack levels required when called: 4
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_pad
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text10
  4514  0065B2                     __ptext10:
  4515                           	callstack 0
  4516  0065B2                     _strlen:
  4517                           	callstack 21
  4518  0065B2  C005  F007         	movff	strlen@s,strlen@a
  4519  0065B6  C006  F008         	movff	strlen@s+1,strlen@a+1
  4520  0065BA  EFE1  F032         	goto	l7880
  4521  0065BE                     l7878:
  4522  0065BE  4A05               	infsnz	strlen@s^0,f,c
  4523  0065C0  2A06               	incf	(strlen@s+1)^0,f,c
  4524  0065C2                     l7880:
  4525  0065C2  C005  FFD9         	movff	strlen@s,fsr2l
  4526  0065C6  C006  FFDA         	movff	strlen@s+1,fsr2h
  4527  0065CA  50DF               	movf	indf2,w,c
  4528  0065CC  A4D8               	btfss	status,2,c
  4529  0065CE  EFEB  F032         	goto	u6401
  4530  0065D2  EFED  F032         	goto	u6400
  4531  0065D6                     u6401:
  4532  0065D6  EFDF  F032         	goto	l7878
  4533  0065DA                     u6400:
  4534  0065DA  5007               	movf	strlen@a^0,w,c
  4535  0065DC  5C05               	subwf	strlen@s^0,w,c
  4536  0065DE  6E05               	movwf	?_strlen^0,c
  4537  0065E0  5008               	movf	(strlen@a+1)^0,w,c
  4538  0065E2  5806               	subwfb	(strlen@s+1)^0,w,c
  4539  0065E4  6E06               	movwf	(?_strlen+1)^0,c
  4540  0065E6  0012               	return		;funcret
  4541  0065E8                     __end_of_strlen:
  4542                           	callstack 0
  4543                           
  4544 ;; *************** function _fputs *****************
  4545 ;; Defined at:
  4546 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4549 ;;		 -> dbuf(80), 
  4550 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4551 ;;		 -> NULL(0), 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  i               2   20[COMRAM] int 
  4554 ;;  c               1   19[COMRAM] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  2   15[COMRAM] int 
  4557 ;; Registers used:
  4558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;Total ram usage:        7 bytes
  4569 ;; Hardware stack levels used: 1
  4570 ;; Hardware stack levels required when called: 7
  4571 ;; This function calls:
  4572 ;;		_fputc
  4573 ;; This function is called by:
  4574 ;;		_pad
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text11
  4579  006400                     __ptext11:
  4580                           	callstack 0
  4581  006400                     _fputs:
  4582                           	callstack 18
  4583  006400  0E00               	movlw	0
  4584  006402  6E16               	movwf	(fputs@i+1)^0,c
  4585  006404  0E00               	movlw	0
  4586  006406  6E15               	movwf	fputs@i^0,c
  4587  006408  EF11  F032         	goto	l7874
  4588  00640C                     l7870:
  4589  00640C  C014  F007         	movff	fputs@c,fputc@c
  4590  006410  6A08               	clrf	(fputc@c+1)^0,c
  4591  006412  C012  F009         	movff	fputs@fp,fputc@fp
  4592  006416  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4593  00641A  EC40  F02E         	call	_fputc	;wreg free
  4594  00641E  4A15               	infsnz	fputs@i^0,f,c
  4595  006420  2A16               	incf	(fputs@i+1)^0,f,c
  4596  006422                     l7874:
  4597  006422  5015               	movf	fputs@i^0,w,c
  4598  006424  2410               	addwf	fputs@s^0,w,c
  4599  006426  6ED9               	movwf	fsr2l,c
  4600  006428  5016               	movf	(fputs@i+1)^0,w,c
  4601  00642A  2011               	addwfc	(fputs@s+1)^0,w,c
  4602  00642C  6EDA               	movwf	fsr2h,c
  4603  00642E  50DF               	movf	indf2,w,c
  4604  006430  6E14               	movwf	fputs@c^0,c
  4605  006432  5014               	movf	fputs@c^0,w,c
  4606  006434  A4D8               	btfss	status,2,c
  4607  006436  EF1F  F032         	goto	u6391
  4608  00643A  EF21  F032         	goto	u6390
  4609  00643E                     u6391:
  4610  00643E  EF06  F032         	goto	l7870
  4611  006442                     u6390:
  4612  006442  0012               	return		;funcret
  4613  006444                     __end_of_fputs:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function _fputc *****************
  4617 ;; Defined at:
  4618 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  c               2    6[COMRAM] int 
  4621 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4622 ;;		 -> NULL(0), 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  2    6[COMRAM] int 
  4627 ;; Registers used:
  4628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;Total ram usage:        9 bytes
  4639 ;; Hardware stack levels used: 1
  4640 ;; Hardware stack levels required when called: 6
  4641 ;; This function calls:
  4642 ;;		_putch
  4643 ;; This function is called by:
  4644 ;;		_pad
  4645 ;;		_vfpfcnvrt
  4646 ;;		_fputs
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text12
  4651  005C80                     __ptext12:
  4652                           	callstack 0
  4653  005C80                     _fputc:
  4654                           	callstack 21
  4655  005C80  5009               	movf	fputc@fp^0,w,c
  4656  005C82  100A               	iorwf	(fputc@fp+1)^0,w,c
  4657  005C84  B4D8               	btfsc	status,2,c
  4658  005C86  EF47  F02E         	goto	u5961
  4659  005C8A  EF49  F02E         	goto	u5960
  4660  005C8E                     u5961:
  4661  005C8E  EF52  F02E         	goto	l7656
  4662  005C92                     u5960:
  4663  005C92  5009               	movf	fputc@fp^0,w,c
  4664  005C94  100A               	iorwf	(fputc@fp+1)^0,w,c
  4665  005C96  A4D8               	btfss	status,2,c
  4666  005C98  EF50  F02E         	goto	u5971
  4667  005C9C  EF52  F02E         	goto	u5970
  4668  005CA0                     u5971:
  4669  005CA0  EF57  F02E         	goto	l7658
  4670  005CA4                     u5970:
  4671  005CA4                     l7656:
  4672  005CA4  5007               	movf	fputc@c^0,w,c
  4673  005CA6  EC6A  F034         	call	_putch
  4674  005CAA  EF8A  F02E         	goto	l1668
  4675  005CAE                     l7658:
  4676  005CAE  EE20 F004          	lfsr	2,4
  4677  005CB2  5009               	movf	fputc@fp^0,w,c
  4678  005CB4  26D9               	addwf	fsr2l,f,c
  4679  005CB6  500A               	movf	(fputc@fp+1)^0,w,c
  4680  005CB8  22DA               	addwfc	fsr2h,f,c
  4681  005CBA  50DE               	movf	postinc2,w,c
  4682  005CBC  10DE               	iorwf	postinc2,w,c
  4683  005CBE  B4D8               	btfsc	status,2,c
  4684  005CC0  EF64  F02E         	goto	u5981
  4685  005CC4  EF66  F02E         	goto	u5980
  4686  005CC8                     u5981:
  4687  005CC8  EF81  F02E         	goto	l7662
  4688  005CCC                     u5980:
  4689  005CCC  EE20 F004          	lfsr	2,4
  4690  005CD0  5009               	movf	fputc@fp^0,w,c
  4691  005CD2  26D9               	addwf	fsr2l,f,c
  4692  005CD4  500A               	movf	(fputc@fp+1)^0,w,c
  4693  005CD6  22DA               	addwfc	fsr2h,f,c
  4694  005CD8  EE10 F002          	lfsr	1,2
  4695  005CDC  5009               	movf	fputc@fp^0,w,c
  4696  005CDE  26E1               	addwf	fsr1l,f,c
  4697  005CE0  500A               	movf	(fputc@fp+1)^0,w,c
  4698  005CE2  22E2               	addwfc	fsr1h,f,c
  4699  005CE4  50DE               	movf	postinc2,w,c
  4700  005CE6  5CE6               	subwf	postinc1,w,c
  4701  005CE8  50E6               	movf	postinc1,w,c
  4702  005CEA  0A80               	xorlw	128
  4703  005CEC  6E0F               	movwf	(??_fputc+4)^0,c
  4704  005CEE  50DE               	movf	postinc2,w,c
  4705  005CF0  0A80               	xorlw	128
  4706  005CF2  580F               	subwfb	(??_fputc+4)^0,w,c
  4707  005CF4  B0D8               	btfsc	status,0,c
  4708  005CF6  EF7F  F02E         	goto	u5991
  4709  005CFA  EF81  F02E         	goto	u5990
  4710  005CFE                     u5991:
  4711  005CFE  EF8A  F02E         	goto	l1668
  4712  005D02                     u5990:
  4713  005D02                     l7662:
  4714  005D02  EE20 F002          	lfsr	2,2
  4715  005D06  5009               	movf	fputc@fp^0,w,c
  4716  005D08  26D9               	addwf	fsr2l,f,c
  4717  005D0A  500A               	movf	(fputc@fp+1)^0,w,c
  4718  005D0C  22DA               	addwfc	fsr2h,f,c
  4719  005D0E  2ADE               	incf	postinc2,f,c
  4720  005D10  0E00               	movlw	0
  4721  005D12  22DD               	addwfc	postdec2,f,c
  4722  005D14                     l1668:
  4723  005D14  0012               	return		;funcret
  4724  005D16                     __end_of_fputc:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _putch *****************
  4728 ;; Defined at:
  4729 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  txData          1    wreg     unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  txData          1    5[COMRAM] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;Total ram usage:        1 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 5
  4750 ;; This function calls:
  4751 ;;		_EUSART_Write
  4752 ;; This function is called by:
  4753 ;;		_fputc
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text13
  4758  0068D4                     __ptext13:
  4759                           	callstack 0
  4760  0068D4                     _putch:
  4761                           	callstack 21
  4762                           
  4763                           ;incstack = 0
  4764                           ;putch@txData stored from wreg
  4765  0068D4  6E06               	movwf	putch@txData^0,c
  4766  0068D6                     
  4767                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4768  0068D6  5006               	movf	putch@txData^0,w,c
  4769  0068D8  EC65  F031         	call	_EUSART_Write
  4770  0068DC  0012               	return		;funcret
  4771  0068DE                     __end_of_putch:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _EUSART_Write *****************
  4775 ;; Defined at:
  4776 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  txData          1    wreg     unsigned char 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  txData          1    4[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        1 bytes
  4795 ;; Hardware stack levels used: 1
  4796 ;; Hardware stack levels required when called: 4
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_putch
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text14
  4805  0062CA                     __ptext14:
  4806                           	callstack 0
  4807  0062CA                     _EUSART_Write:
  4808                           	callstack 21
  4809                           
  4810                           ;incstack = 0
  4811                           ;EUSART_Write@txData stored from wreg
  4812  0062CA  6E05               	movwf	EUSART_Write@txData^0,c
  4813  0062CC                     l7634:
  4814                           
  4815                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4816  0062CC  0100               	movlb	0	; () banked
  4817  0062CE  51FF               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  4818  0062D0  B4D8               	btfsc	status,2,c
  4819  0062D2  EF6D  F031         	goto	u5931
  4820  0062D6  EF6F  F031         	goto	u5930
  4821  0062DA                     u5931:
  4822  0062DA  EF66  F031         	goto	l7634
  4823  0062DE                     u5930:
  4824  0062DE                     
  4825                           ; BSR set to: 0
  4826                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  4827  0062DE  B89D               	btfsc	157,4,c	;volatile
  4828  0062E0  EF74  F031         	goto	u5941
  4829  0062E4  EF76  F031         	goto	u5940
  4830  0062E8                     u5941:
  4831  0062E8  EF7A  F031         	goto	l595
  4832  0062EC                     u5940:
  4833  0062EC                     
  4834                           ; BSR set to: 0
  4835                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4836  0062EC  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  4837                           
  4838                           ;mcc_generated_files/eusart.c: 182:     }
  4839  0062F0  EF8F  F031         	goto	l7648
  4840  0062F4                     l595:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  4844  0062F4  989D               	bcf	157,4,c	;volatile
  4845  0062F6                     
  4846                           ; BSR set to: 0
  4847                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4848  0062F6  0E08               	movlw	low _eusartTxBuffer
  4849  0062F8  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  4850  0062FA  6ED9               	movwf	fsr2l,c
  4851  0062FC  6ADA               	clrf	fsr2h,c
  4852  0062FE  0E01               	movlw	high _eusartTxBuffer
  4853  006300  22DA               	addwfc	fsr2h,f,c
  4854  006302  C005  FFDF         	movff	EUSART_Write@txData,indf2
  4855  006306                     
  4856                           ; BSR set to: 0
  4857  006306  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  4858  006308                     
  4859                           ; BSR set to: 0
  4860                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4861  006308  0E07               	movlw	7
  4862  00630A  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  4863  00630C  EF8A  F031         	goto	u5951
  4864  006310  EF8C  F031         	goto	u5950
  4865  006314                     u5951:
  4866  006314  EF8E  F031         	goto	l7646
  4867  006318                     u5950:
  4868  006318                     
  4869                           ; BSR set to: 0
  4870                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4871  006318  0E00               	movlw	0
  4872  00631A  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  4873  00631C                     l7646:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4877  00631C  07FF               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  4878  00631E                     l7648:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  4882  00631E  889D               	bsf	157,4,c	;volatile
  4883  006320                     
  4884                           ; BSR set to: 0
  4885  006320  0012               	return		;funcret
  4886  006322                     __end_of_EUSART_Write:
  4887                           	callstack 0
  4888                           
  4889 ;; *************** function _floorf *****************
  4890 ;; Defined at:
  4891 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  x               4   29[COMRAM] float 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  u               4   45[COMRAM] struct .
  4896 ;;  m               4   39[COMRAM] unsigned long 
  4897 ;;  e               2   43[COMRAM] int 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  4   29[COMRAM] float 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;Total ram usage:       20 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; Hardware stack levels required when called: 4
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_efgtoa
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text15
  4922  004CB8                     __ptext15:
  4923                           	callstack 0
  4924  004CB8                     _floorf:
  4925                           	callstack 22
  4926  004CB8  C08C  F02E         	movff	floorf@F527,floorf@u
  4927  004CBC  C08D  F02F         	movff	floorf@F527+1,floorf@u+1
  4928  004CC0  C08E  F030         	movff	floorf@F527+2,floorf@u+2
  4929  004CC4  C08F  F031         	movff	floorf@F527+3,floorf@u+3
  4930  004CC8  C01E  F02E         	movff	floorf@x,floorf@u
  4931  004CCC  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  4932  004CD0  C020  F030         	movff	floorf@x+2,floorf@u+2
  4933  004CD4  C021  F031         	movff	floorf@x+3,floorf@u+3
  4934  004CD8  0E81               	movlw	129
  4935  004CDA  6E22               	movwf	??_floorf^0,c
  4936  004CDC  0EFF               	movlw	255
  4937  004CDE  6E23               	movwf	(??_floorf+1)^0,c
  4938  004CE0  C02E  F024         	movff	floorf@u,??_floorf+2
  4939  004CE4  C02F  F025         	movff	floorf@u+1,??_floorf+3
  4940  004CE8  C030  F026         	movff	floorf@u+2,??_floorf+4
  4941  004CEC  C031  F027         	movff	floorf@u+3,??_floorf+5
  4942  004CF0  0E18               	movlw	24
  4943  004CF2  EF80  F026         	goto	u7290
  4944  004CF6                     u7295:
  4945  004CF6  90D8               	bcf	status,0,c
  4946  004CF8  3227               	rrcf	(??_floorf+5)^0,f,c
  4947  004CFA  3226               	rrcf	(??_floorf+4)^0,f,c
  4948  004CFC  3225               	rrcf	(??_floorf+3)^0,f,c
  4949  004CFE  3224               	rrcf	(??_floorf+2)^0,f,c
  4950  004D00                     u7290:
  4951  004D00  2EE8               	decfsz	wreg,f,c
  4952  004D02  EF7B  F026         	goto	u7295
  4953  004D06  5024               	movf	(??_floorf+2)^0,w,c
  4954  004D08  2422               	addwf	??_floorf^0,w,c
  4955  004D0A  6E2C               	movwf	floorf@e^0,c
  4956  004D0C  0E00               	movlw	0
  4957  004D0E  2023               	addwfc	(??_floorf+1)^0,w,c
  4958  004D10  6E2D               	movwf	(floorf@e+1)^0,c
  4959  004D12  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4960  004D14  EF95  F026         	goto	u7301
  4961  004D18  502D               	movf	(floorf@e+1)^0,w,c
  4962  004D1A  E109               	bnz	u7300
  4963  004D1C  0E17               	movlw	23
  4964  004D1E  5C2C               	subwf	floorf@e^0,w,c
  4965  004D20  A0D8               	btfss	status,0,c
  4966  004D22  EF95  F026         	goto	u7301
  4967  004D26  EF97  F026         	goto	u7300
  4968  004D2A                     u7301:
  4969  004D2A  EFA1  F026         	goto	l8404
  4970  004D2E                     u7300:
  4971  004D2E                     l8402:
  4972  004D2E  C01E  F01E         	movff	floorf@x,?_floorf
  4973  004D32  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  4974  004D36  C020  F020         	movff	floorf@x+2,?_floorf+2
  4975  004D3A  C021  F021         	movff	floorf@x+3,?_floorf+3
  4976  004D3E  EF64  F027         	goto	l1629
  4977  004D42                     l8404:
  4978  004D42  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4979  004D44  EFA6  F026         	goto	u7311
  4980  004D48  EFA8  F026         	goto	u7310
  4981  004D4C                     u7311:
  4982  004D4C  EF18  F027         	goto	l8414
  4983  004D50                     u7310:
  4984  004D50  C02C  F022         	movff	floorf@e,??_floorf
  4985  004D54  0EFF               	movlw	255
  4986  004D56  6E23               	movwf	(??_floorf+1)^0,c
  4987  004D58  0EFF               	movlw	255
  4988  004D5A  6E24               	movwf	(??_floorf+2)^0,c
  4989  004D5C  0E7F               	movlw	127
  4990  004D5E  6E25               	movwf	(??_floorf+3)^0,c
  4991  004D60  0E00               	movlw	0
  4992  004D62  6E26               	movwf	(??_floorf+4)^0,c
  4993  004D64                     u7325:
  4994  004D64  6622               	tstfsz	??_floorf^0,c
  4995  004D66  EFB7  F026         	goto	u7326
  4996  004D6A  EFBF  F026         	goto	u7327
  4997  004D6E                     u7326:
  4998  004D6E  3426               	rlcf	(??_floorf+4)^0,w,c
  4999  004D70  3226               	rrcf	(??_floorf+4)^0,f,c
  5000  004D72  3225               	rrcf	(??_floorf+3)^0,f,c
  5001  004D74  3224               	rrcf	(??_floorf+2)^0,f,c
  5002  004D76  3223               	rrcf	(??_floorf+1)^0,f,c
  5003  004D78  2E22               	decfsz	??_floorf^0,f,c
  5004  004D7A  EFB2  F026         	goto	u7325
  5005  004D7E                     u7327:
  5006  004D7E  C023  F028         	movff	??_floorf+1,floorf@m
  5007  004D82  C024  F029         	movff	??_floorf+2,floorf@m+1
  5008  004D86  C025  F02A         	movff	??_floorf+3,floorf@m+2
  5009  004D8A  C026  F02B         	movff	??_floorf+4,floorf@m+3
  5010  004D8E  5028               	movf	floorf@m^0,w,c
  5011  004D90  142E               	andwf	floorf@u^0,w,c
  5012  004D92  6E22               	movwf	??_floorf^0,c
  5013  004D94  5029               	movf	(floorf@m+1)^0,w,c
  5014  004D96  142F               	andwf	(floorf@u+1)^0,w,c
  5015  004D98  6E23               	movwf	(??_floorf+1)^0,c
  5016  004D9A  502A               	movf	(floorf@m+2)^0,w,c
  5017  004D9C  1430               	andwf	(floorf@u+2)^0,w,c
  5018  004D9E  6E24               	movwf	(??_floorf+2)^0,c
  5019  004DA0  502B               	movf	(floorf@m+3)^0,w,c
  5020  004DA2  1431               	andwf	(floorf@u+3)^0,w,c
  5021  004DA4  6E25               	movwf	(??_floorf+3)^0,c
  5022  004DA6  5022               	movf	??_floorf^0,w,c
  5023  004DA8  1023               	iorwf	(??_floorf+1)^0,w,c
  5024  004DAA  1024               	iorwf	(??_floorf+2)^0,w,c
  5025  004DAC  1025               	iorwf	(??_floorf+3)^0,w,c
  5026  004DAE  A4D8               	btfss	status,2,c
  5027  004DB0  EFDC  F026         	goto	u7331
  5028  004DB4  EFDE  F026         	goto	u7330
  5029  004DB8                     u7331:
  5030  004DB8  EFE0  F026         	goto	l8410
  5031  004DBC                     u7330:
  5032  004DBC  EF97  F026         	goto	l8402
  5033  004DC0                     l8410:
  5034  004DC0  C02E  F022         	movff	floorf@u,??_floorf
  5035  004DC4  C02F  F023         	movff	floorf@u+1,??_floorf+1
  5036  004DC8  C030  F024         	movff	floorf@u+2,??_floorf+2
  5037  004DCC  C031  F025         	movff	floorf@u+3,??_floorf+3
  5038  004DD0  0E20               	movlw	32
  5039  004DD2  EFF0  F026         	goto	u7340
  5040  004DD6                     u7345:
  5041  004DD6  90D8               	bcf	status,0,c
  5042  004DD8  3225               	rrcf	(??_floorf+3)^0,f,c
  5043  004DDA  3224               	rrcf	(??_floorf+2)^0,f,c
  5044  004DDC  3223               	rrcf	(??_floorf+1)^0,f,c
  5045  004DDE  3222               	rrcf	??_floorf^0,f,c
  5046  004DE0                     u7340:
  5047  004DE0  2EE8               	decfsz	wreg,f,c
  5048  004DE2  EFEB  F026         	goto	u7345
  5049  004DE6  5022               	movf	??_floorf^0,w,c
  5050  004DE8  1023               	iorwf	(??_floorf+1)^0,w,c
  5051  004DEA  1024               	iorwf	(??_floorf+2)^0,w,c
  5052  004DEC  1025               	iorwf	(??_floorf+3)^0,w,c
  5053  004DEE  B4D8               	btfsc	status,2,c
  5054  004DF0  EFFC  F026         	goto	u7351
  5055  004DF4  EFFE  F026         	goto	u7350
  5056  004DF8                     u7351:
  5057  004DF8  EF06  F027         	goto	l1632
  5058  004DFC                     u7350:
  5059  004DFC  5028               	movf	floorf@m^0,w,c
  5060  004DFE  262E               	addwf	floorf@u^0,f,c
  5061  004E00  5029               	movf	(floorf@m+1)^0,w,c
  5062  004E02  222F               	addwfc	(floorf@u+1)^0,f,c
  5063  004E04  502A               	movf	(floorf@m+2)^0,w,c
  5064  004E06  2230               	addwfc	(floorf@u+2)^0,f,c
  5065  004E08  502B               	movf	(floorf@m+3)^0,w,c
  5066  004E0A  2231               	addwfc	(floorf@u+3)^0,f,c
  5067  004E0C                     l1632:
  5068  004E0C  1C28               	comf	floorf@m^0,w,c
  5069  004E0E  6E22               	movwf	??_floorf^0,c
  5070  004E10  1C29               	comf	(floorf@m+1)^0,w,c
  5071  004E12  6E23               	movwf	(??_floorf+1)^0,c
  5072  004E14  1C2A               	comf	(floorf@m+2)^0,w,c
  5073  004E16  6E24               	movwf	(??_floorf+2)^0,c
  5074  004E18  1C2B               	comf	(floorf@m+3)^0,w,c
  5075  004E1A  6E25               	movwf	(??_floorf+3)^0,c
  5076  004E1C  5022               	movf	??_floorf^0,w,c
  5077  004E1E  162E               	andwf	floorf@u^0,f,c
  5078  004E20  5023               	movf	(??_floorf+1)^0,w,c
  5079  004E22  162F               	andwf	(floorf@u+1)^0,f,c
  5080  004E24  5024               	movf	(??_floorf+2)^0,w,c
  5081  004E26  1630               	andwf	(floorf@u+2)^0,f,c
  5082  004E28  5025               	movf	(??_floorf+3)^0,w,c
  5083  004E2A  1631               	andwf	(floorf@u+3)^0,f,c
  5084  004E2C  EF5C  F027         	goto	l8422
  5085  004E30                     l8414:
  5086  004E30  C02E  F022         	movff	floorf@u,??_floorf
  5087  004E34  C02F  F023         	movff	floorf@u+1,??_floorf+1
  5088  004E38  C030  F024         	movff	floorf@u+2,??_floorf+2
  5089  004E3C  C031  F025         	movff	floorf@u+3,??_floorf+3
  5090  004E40  0E20               	movlw	32
  5091  004E42  EF28  F027         	goto	u7360
  5092  004E46                     u7365:
  5093  004E46  90D8               	bcf	status,0,c
  5094  004E48  3225               	rrcf	(??_floorf+3)^0,f,c
  5095  004E4A  3224               	rrcf	(??_floorf+2)^0,f,c
  5096  004E4C  3223               	rrcf	(??_floorf+1)^0,f,c
  5097  004E4E  3222               	rrcf	??_floorf^0,f,c
  5098  004E50                     u7360:
  5099  004E50  2EE8               	decfsz	wreg,f,c
  5100  004E52  EF23  F027         	goto	u7365
  5101  004E56  5022               	movf	??_floorf^0,w,c
  5102  004E58  1023               	iorwf	(??_floorf+1)^0,w,c
  5103  004E5A  1024               	iorwf	(??_floorf+2)^0,w,c
  5104  004E5C  1025               	iorwf	(??_floorf+3)^0,w,c
  5105  004E5E  A4D8               	btfss	status,2,c
  5106  004E60  EF34  F027         	goto	u7371
  5107  004E64  EF36  F027         	goto	u7370
  5108  004E68                     u7371:
  5109  004E68  EF40  F027         	goto	l8418
  5110  004E6C                     u7370:
  5111  004E6C  0E00               	movlw	0
  5112  004E6E  6E2E               	movwf	floorf@u^0,c
  5113  004E70  0E00               	movlw	0
  5114  004E72  6E2F               	movwf	(floorf@u+1)^0,c
  5115  004E74  0E00               	movlw	0
  5116  004E76  6E30               	movwf	(floorf@u+2)^0,c
  5117  004E78  0E00               	movlw	0
  5118  004E7A  6E31               	movwf	(floorf@u+3)^0,c
  5119  004E7C  EF5C  F027         	goto	l8422
  5120  004E80                     l8418:
  5121  004E80  90D8               	bcf	status,0,c
  5122  004E82  342E               	rlcf	floorf@u^0,w,c
  5123  004E84  6E22               	movwf	??_floorf^0,c
  5124  004E86  342F               	rlcf	(floorf@u+1)^0,w,c
  5125  004E88  6E23               	movwf	(??_floorf+1)^0,c
  5126  004E8A  3430               	rlcf	(floorf@u+2)^0,w,c
  5127  004E8C  6E24               	movwf	(??_floorf+2)^0,c
  5128  004E8E  3431               	rlcf	(floorf@u+3)^0,w,c
  5129  004E90  6E25               	movwf	(??_floorf+3)^0,c
  5130  004E92  5022               	movf	??_floorf^0,w,c
  5131  004E94  1023               	iorwf	(??_floorf+1)^0,w,c
  5132  004E96  1024               	iorwf	(??_floorf+2)^0,w,c
  5133  004E98  1025               	iorwf	(??_floorf+3)^0,w,c
  5134  004E9A  B4D8               	btfsc	status,2,c
  5135  004E9C  EF52  F027         	goto	u7381
  5136  004EA0  EF54  F027         	goto	u7380
  5137  004EA4                     u7381:
  5138  004EA4  EF5C  F027         	goto	l8422
  5139  004EA8                     u7380:
  5140  004EA8  0E00               	movlw	0
  5141  004EAA  6E2E               	movwf	floorf@u^0,c
  5142  004EAC  0E00               	movlw	0
  5143  004EAE  6E2F               	movwf	(floorf@u+1)^0,c
  5144  004EB0  0E80               	movlw	128
  5145  004EB2  6E30               	movwf	(floorf@u+2)^0,c
  5146  004EB4  0EBF               	movlw	191
  5147  004EB6  6E31               	movwf	(floorf@u+3)^0,c
  5148  004EB8                     l8422:
  5149  004EB8  C02E  F01E         	movff	floorf@u,?_floorf
  5150  004EBC  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  5151  004EC0  C030  F020         	movff	floorf@u+2,?_floorf+2
  5152  004EC4  C031  F021         	movff	floorf@u+3,?_floorf+3
  5153  004EC8                     l1629:
  5154  004EC8  0012               	return		;funcret
  5155  004ECA                     __end_of_floorf:
  5156                           	callstack 0
  5157                           
  5158 ;; *************** function ___fpclassifyf *****************
  5159 ;; Defined at:
  5160 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  x               4    4[COMRAM] float 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  u               4   14[COMRAM] struct .
  5165 ;;  e               2   12[COMRAM] int 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  2    4[COMRAM] int 
  5168 ;; Registers used:
  5169 ;;		wreg, status,2, status,0
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;Total ram usage:       14 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; Hardware stack levels required when called: 4
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_efgtoa
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text16
  5190  005598                     __ptext16:
  5191                           	callstack 0
  5192  005598                     ___fpclassifyf:
  5193                           	callstack 22
  5194  005598  C090  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5195  00559C  C091  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5196  0055A0  C092  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5197  0055A4  C093  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5198  0055A8  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5199  0055AC  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5200  0055B0  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5201  0055B4  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5202  0055B8  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5203  0055BC  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5204  0055C0  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5205  0055C4  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5206  0055C8  0E18               	movlw	24
  5207  0055CA  EFEC  F02A         	goto	u7170
  5208  0055CE                     u7175:
  5209  0055CE  90D8               	bcf	status,0,c
  5210  0055D0  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5211  0055D2  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5212  0055D4  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5213  0055D6  3209               	rrcf	??___fpclassifyf^0,f,c
  5214  0055D8                     u7170:
  5215  0055D8  2EE8               	decfsz	wreg,f,c
  5216  0055DA  EFE7  F02A         	goto	u7175
  5217  0055DE  5009               	movf	??___fpclassifyf^0,w,c
  5218  0055E0  6E0D               	movwf	___fpclassifyf@e^0,c
  5219  0055E2  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5220  0055E4  500D               	movf	___fpclassifyf@e^0,w,c
  5221  0055E6  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5222  0055E8  A4D8               	btfss	status,2,c
  5223  0055EA  EFF9  F02A         	goto	u7181
  5224  0055EE  EFFB  F02A         	goto	u7180
  5225  0055F2                     u7181:
  5226  0055F2  EF1B  F02B         	goto	l8374
  5227  0055F6                     u7180:
  5228  0055F6  90D8               	bcf	status,0,c
  5229  0055F8  340F               	rlcf	___fpclassifyf@u^0,w,c
  5230  0055FA  6E09               	movwf	??___fpclassifyf^0,c
  5231  0055FC  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5232  0055FE  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5233  005600  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5234  005602  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5235  005604  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5236  005606  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5237  005608  5009               	movf	??___fpclassifyf^0,w,c
  5238  00560A  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5239  00560C  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5240  00560E  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5241  005610  A4D8               	btfss	status,2,c
  5242  005612  EF0D  F02B         	goto	u7191
  5243  005616  EF0F  F02B         	goto	u7190
  5244  00561A                     u7191:
  5245  00561A  EF15  F02B         	goto	l8370
  5246  00561E                     u7190:
  5247  00561E  0E00               	movlw	0
  5248  005620  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5249  005622  0E02               	movlw	2
  5250  005624  6E05               	movwf	?___fpclassifyf^0,c
  5251  005626  EF4A  F02B         	goto	l1591
  5252  00562A                     l8370:
  5253  00562A  0E00               	movlw	0
  5254  00562C  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5255  00562E  0E03               	movlw	3
  5256  005630  6E05               	movwf	?___fpclassifyf^0,c
  5257  005632  EF4A  F02B         	goto	l1591
  5258  005636                     l8374:
  5259  005636  280D               	incf	___fpclassifyf@e^0,w,c
  5260  005638  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5261  00563A  A4D8               	btfss	status,2,c
  5262  00563C  EF22  F02B         	goto	u7201
  5263  005640  EF24  F02B         	goto	u7200
  5264  005644                     u7201:
  5265  005644  EF46  F02B         	goto	l8380
  5266  005648                     u7200:
  5267  005648  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5268  00564C  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5269  005650  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5270  005654  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5271  005658  0E09               	movlw	9
  5272  00565A                     u7215:
  5273  00565A  90D8               	bcf	status,0,c
  5274  00565C  3609               	rlcf	??___fpclassifyf^0,f,c
  5275  00565E  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5276  005660  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5277  005662  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5278  005664  2EE8               	decfsz	wreg,f,c
  5279  005666  EF2D  F02B         	goto	u7215
  5280  00566A  5009               	movf	??___fpclassifyf^0,w,c
  5281  00566C  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5282  00566E  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5283  005670  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5284  005672  B4D8               	btfsc	status,2,c
  5285  005674  EF3E  F02B         	goto	u7221
  5286  005678  EF41  F02B         	goto	u7220
  5287  00567C                     u7221:
  5288  00567C  0E01               	movlw	1
  5289  00567E  EF42  F02B         	goto	u7230
  5290  005682                     u7220:
  5291  005682  0E00               	movlw	0
  5292  005684                     u7230:
  5293  005684  6E05               	movwf	?___fpclassifyf^0,c
  5294  005686  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5295  005688  EF4A  F02B         	goto	l1591
  5296  00568C                     l8380:
  5297  00568C  0E00               	movlw	0
  5298  00568E  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5299  005690  0E04               	movlw	4
  5300  005692  6E05               	movwf	?___fpclassifyf^0,c
  5301  005694                     l1591:
  5302  005694  0012               	return		;funcret
  5303  005696                     __end_of___fpclassifyf:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function ___fltol *****************
  5307 ;; Defined at:
  5308 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  f1              4    4[COMRAM] int 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  exp1            1   13[COMRAM] unsigned char 
  5313 ;;  sign1           1   12[COMRAM] unsigned char 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  4    4[COMRAM] long 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;Total ram usage:       10 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; Hardware stack levels required when called: 4
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_efgtoa
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text17
  5338  00538E                     __ptext17:
  5339                           	callstack 0
  5340  00538E                     ___fltol:
  5341                           	callstack 22
  5342  00538E  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5343  005390  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5344  005392  6E0E               	movwf	___fltol@exp1^0,c
  5345  005394  500E               	movf	___fltol@exp1^0,w,c
  5346  005396  A4D8               	btfss	status,2,c
  5347  005398  EFD0  F029         	goto	u7061
  5348  00539C  EFD2  F029         	goto	u7060
  5349  0053A0                     u7061:
  5350  0053A0  EFDC  F029         	goto	l8302
  5351  0053A4                     u7060:
  5352  0053A4                     l8298:
  5353  0053A4  0E00               	movlw	0
  5354  0053A6  6E05               	movwf	?___fltol^0,c
  5355  0053A8  0E00               	movlw	0
  5356  0053AA  6E06               	movwf	(?___fltol+1)^0,c
  5357  0053AC  0E00               	movlw	0
  5358  0053AE  6E07               	movwf	(?___fltol+2)^0,c
  5359  0053B0  0E00               	movlw	0
  5360  0053B2  6E08               	movwf	(?___fltol+3)^0,c
  5361  0053B4  EF49  F02A         	goto	l1030
  5362  0053B8                     l8302:
  5363  0053B8  C005  F009         	movff	___fltol@f1,??___fltol
  5364  0053BC  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5365  0053C0  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5366  0053C4  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5367  0053C8  0E20               	movlw	32
  5368  0053CA  EFEC  F029         	goto	u7070
  5369  0053CE                     u7075:
  5370  0053CE  90D8               	bcf	status,0,c
  5371  0053D0  320C               	rrcf	(??___fltol+3)^0,f,c
  5372  0053D2  320B               	rrcf	(??___fltol+2)^0,f,c
  5373  0053D4  320A               	rrcf	(??___fltol+1)^0,f,c
  5374  0053D6  3209               	rrcf	??___fltol^0,f,c
  5375  0053D8                     u7070:
  5376  0053D8  2EE8               	decfsz	wreg,f,c
  5377  0053DA  EFE7  F029         	goto	u7075
  5378  0053DE  5009               	movf	??___fltol^0,w,c
  5379  0053E0  6E0D               	movwf	___fltol@sign1^0,c
  5380  0053E2  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5381  0053E4  0EFF               	movlw	255
  5382  0053E6  1605               	andwf	___fltol@f1^0,f,c
  5383  0053E8  0EFF               	movlw	255
  5384  0053EA  1606               	andwf	(___fltol@f1+1)^0,f,c
  5385  0053EC  0EFF               	movlw	255
  5386  0053EE  1607               	andwf	(___fltol@f1+2)^0,f,c
  5387  0053F0  0E00               	movlw	0
  5388  0053F2  1608               	andwf	(___fltol@f1+3)^0,f,c
  5389  0053F4  0E96               	movlw	150
  5390  0053F6  5E0E               	subwf	___fltol@exp1^0,f,c
  5391  0053F8  BE0E               	btfsc	___fltol@exp1^0,7,c
  5392  0053FA  EF03  F02A         	goto	u7080
  5393  0053FE  EF01  F02A         	goto	u7081
  5394  005402                     u7081:
  5395  005402  EF19  F02A         	goto	l8322
  5396  005406                     u7080:
  5397  005406  500E               	movf	___fltol@exp1^0,w,c
  5398  005408  0A80               	xorlw	128
  5399  00540A  0F97               	addlw	151
  5400  00540C  B0D8               	btfsc	status,0,c
  5401  00540E  EF0B  F02A         	goto	u7091
  5402  005412  EF0D  F02A         	goto	u7090
  5403  005416                     u7091:
  5404  005416  EF0F  F02A         	goto	l8318
  5405  00541A                     u7090:
  5406  00541A  EFD2  F029         	goto	l8298
  5407  00541E                     l8318:
  5408  00541E  90D8               	bcf	status,0,c
  5409  005420  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5410  005422  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5411  005424  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5412  005426  3205               	rrcf	___fltol@f1^0,f,c
  5413  005428  3E0E               	incfsz	___fltol@exp1^0,f,c
  5414  00542A  EF0F  F02A         	goto	l8318
  5415  00542E  EF31  F02A         	goto	l8332
  5416  005432                     l8322:
  5417  005432  0E1F               	movlw	31
  5418  005434  640E               	cpfsgt	___fltol@exp1^0,c
  5419  005436  EF1F  F02A         	goto	u7101
  5420  00543A  EF21  F02A         	goto	u7100
  5421  00543E                     u7101:
  5422  00543E  EF29  F02A         	goto	l8330
  5423  005442                     u7100:
  5424  005442  EFD2  F029         	goto	l8298
  5425  005446                     l8328:
  5426  005446  90D8               	bcf	status,0,c
  5427  005448  3605               	rlcf	___fltol@f1^0,f,c
  5428  00544A  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5429  00544C  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5430  00544E  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5431  005450  060E               	decf	___fltol@exp1^0,f,c
  5432  005452                     l8330:
  5433  005452  500E               	movf	___fltol@exp1^0,w,c
  5434  005454  A4D8               	btfss	status,2,c
  5435  005456  EF2F  F02A         	goto	u7111
  5436  00545A  EF31  F02A         	goto	u7110
  5437  00545E                     u7111:
  5438  00545E  EF23  F02A         	goto	l8328
  5439  005462                     u7110:
  5440  005462                     l8332:
  5441  005462  500D               	movf	___fltol@sign1^0,w,c
  5442  005464  B4D8               	btfsc	status,2,c
  5443  005466  EF37  F02A         	goto	u7121
  5444  00546A  EF39  F02A         	goto	u7120
  5445  00546E                     u7121:
  5446  00546E  EF41  F02A         	goto	l8336
  5447  005472                     u7120:
  5448  005472  1E08               	comf	(___fltol@f1+3)^0,f,c
  5449  005474  1E07               	comf	(___fltol@f1+2)^0,f,c
  5450  005476  1E06               	comf	(___fltol@f1+1)^0,f,c
  5451  005478  6C05               	negf	___fltol@f1^0,c
  5452  00547A  0E00               	movlw	0
  5453  00547C  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5454  00547E  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5455  005480  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5456  005482                     l8336:
  5457  005482  C005  F005         	movff	___fltol@f1,?___fltol
  5458  005486  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5459  00548A  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5460  00548E  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5461  005492                     l1030:
  5462  005492  0012               	return		;funcret
  5463  005494                     __end_of___fltol:
  5464                           	callstack 0
  5465                           
  5466 ;; *************** function ___flsub *****************
  5467 ;; Defined at:
  5468 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  b               4   29[COMRAM] long 
  5471 ;;  a               4   33[COMRAM] long 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  4   29[COMRAM] long 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5483 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;Total ram usage:        8 bytes
  5488 ;; Hardware stack levels used: 1
  5489 ;; Hardware stack levels required when called: 5
  5490 ;; This function calls:
  5491 ;;		___fladd
  5492 ;; This function is called by:
  5493 ;;		_efgtoa
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text18
  5498  006374                     __ptext18:
  5499                           	callstack 0
  5500  006374                     ___flsub:
  5501                           	callstack 21
  5502  006374  0E00               	movlw	0
  5503  006376  1A22               	xorwf	___flsub@a^0,f,c
  5504  006378  0E00               	movlw	0
  5505  00637A  1A23               	xorwf	(___flsub@a+1)^0,f,c
  5506  00637C  0E00               	movlw	0
  5507  00637E  1A24               	xorwf	(___flsub@a+2)^0,f,c
  5508  006380  0E80               	movlw	128
  5509  006382  1A25               	xorwf	(___flsub@a+3)^0,f,c
  5510  006384  C01E  F005         	movff	___flsub@b,___fladd@b
  5511  006388  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  5512  00638C  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  5513  006390  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  5514  006394  C022  F009         	movff	___flsub@a,___fladd@a
  5515  006398  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  5516  00639C  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  5517  0063A0  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  5518  0063A4  EC80  F01C         	call	___fladd	;wreg free
  5519  0063A8  C005  F01E         	movff	?___fladd,?___flsub
  5520  0063AC  C006  F01F         	movff	?___fladd+1,?___flsub+1
  5521  0063B0  C007  F020         	movff	?___fladd+2,?___flsub+2
  5522  0063B4  C008  F021         	movff	?___fladd+3,?___flsub+3
  5523  0063B8  0012               	return		;funcret
  5524  0063BA                     __end_of___flsub:
  5525                           	callstack 0
  5526                           
  5527 ;; *************** function ___fladd *****************
  5528 ;; Defined at:
  5529 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  b               4    4[COMRAM] long 
  5532 ;;  a               4    8[COMRAM] long 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  grs             1   19[COMRAM] unsigned char 
  5535 ;;  bexp            1   18[COMRAM] unsigned char 
  5536 ;;  aexp            1   17[COMRAM] unsigned char 
  5537 ;;  signs           1   16[COMRAM] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  4    4[COMRAM] unsigned char 
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5547 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;Total ram usage:       16 bytes
  5552 ;; Hardware stack levels used: 1
  5553 ;; Hardware stack levels required when called: 4
  5554 ;; This function calls:
  5555 ;;		Nothing
  5556 ;; This function is called by:
  5557 ;;		___flsub
  5558 ;;		_efgtoa
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text19
  5563  003900                     __ptext19:
  5564                           	callstack 0
  5565  003900                     ___fladd:
  5566                           	callstack 21
  5567  003900  5008               	movf	(___fladd@b+3)^0,w,c
  5568  003902  0B80               	andlw	128
  5569  003904  6E11               	movwf	___fladd@signs^0,c
  5570  003906  5008               	movf	(___fladd@b+3)^0,w,c
  5571  003908  2408               	addwf	(___fladd@b+3)^0,w,c
  5572  00390A  6E13               	movwf	___fladd@bexp^0,c
  5573  00390C  AE07               	btfss	(___fladd@b+2)^0,7,c
  5574  00390E  EF8B  F01C         	goto	u6001
  5575  003912  EF8D  F01C         	goto	u6000
  5576  003916                     u6001:
  5577  003916  EF8E  F01C         	goto	l7672
  5578  00391A                     u6000:
  5579  00391A  8013               	bsf	___fladd@bexp^0,0,c
  5580  00391C                     l7672:
  5581  00391C  5013               	movf	___fladd@bexp^0,w,c
  5582  00391E  B4D8               	btfsc	status,2,c
  5583  003920  EF94  F01C         	goto	u6011
  5584  003924  EF96  F01C         	goto	u6010
  5585  003928                     u6011:
  5586  003928  EFAB  F01C         	goto	l7682
  5587  00392C                     u6010:
  5588  00392C  2813               	incf	___fladd@bexp^0,w,c
  5589  00392E  A4D8               	btfss	status,2,c
  5590  003930  EF9C  F01C         	goto	u6021
  5591  003934  EF9E  F01C         	goto	u6020
  5592  003938                     u6021:
  5593  003938  EFA6  F01C         	goto	l7678
  5594  00393C                     u6020:
  5595  00393C  0E00               	movlw	0
  5596  00393E  6E05               	movwf	___fladd@b^0,c
  5597  003940  0E00               	movlw	0
  5598  003942  6E06               	movwf	(___fladd@b+1)^0,c
  5599  003944  0E00               	movlw	0
  5600  003946  6E07               	movwf	(___fladd@b+2)^0,c
  5601  003948  0E00               	movlw	0
  5602  00394A  6E08               	movwf	(___fladd@b+3)^0,c
  5603  00394C                     l7678:
  5604  00394C  8E07               	bsf	(___fladd@b+2)^0,7,c
  5605  00394E  0E00               	movlw	0
  5606  003950  6E08               	movwf	(___fladd@b+3)^0,c
  5607  003952  EFB3  F01C         	goto	l7684
  5608  003956                     l7682:
  5609  003956  0E00               	movlw	0
  5610  003958  6E05               	movwf	___fladd@b^0,c
  5611  00395A  0E00               	movlw	0
  5612  00395C  6E06               	movwf	(___fladd@b+1)^0,c
  5613  00395E  0E00               	movlw	0
  5614  003960  6E07               	movwf	(___fladd@b+2)^0,c
  5615  003962  0E00               	movlw	0
  5616  003964  6E08               	movwf	(___fladd@b+3)^0,c
  5617  003966                     l7684:
  5618  003966  500C               	movf	(___fladd@a+3)^0,w,c
  5619  003968  0B80               	andlw	128
  5620  00396A  6E12               	movwf	___fladd@aexp^0,c
  5621  00396C  5011               	movf	___fladd@signs^0,w,c
  5622  00396E  1812               	xorwf	___fladd@aexp^0,w,c
  5623  003970  B4D8               	btfsc	status,2,c
  5624  003972  EFBD  F01C         	goto	u6031
  5625  003976  EFBF  F01C         	goto	u6030
  5626  00397A                     u6031:
  5627  00397A  EFC0  F01C         	goto	l7690
  5628  00397E                     u6030:
  5629  00397E  8C11               	bsf	___fladd@signs^0,6,c
  5630  003980                     l7690:
  5631  003980  500C               	movf	(___fladd@a+3)^0,w,c
  5632  003982  240C               	addwf	(___fladd@a+3)^0,w,c
  5633  003984  6E12               	movwf	___fladd@aexp^0,c
  5634  003986  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5635  003988  EFC8  F01C         	goto	u6041
  5636  00398C  EFCA  F01C         	goto	u6040
  5637  003990                     u6041:
  5638  003990  EFCB  F01C         	goto	l7696
  5639  003994                     u6040:
  5640  003994  8012               	bsf	___fladd@aexp^0,0,c
  5641  003996                     l7696:
  5642  003996  5012               	movf	___fladd@aexp^0,w,c
  5643  003998  B4D8               	btfsc	status,2,c
  5644  00399A  EFD1  F01C         	goto	u6051
  5645  00399E  EFD3  F01C         	goto	u6050
  5646  0039A2                     u6051:
  5647  0039A2  EFE8  F01C         	goto	l7706
  5648  0039A6                     u6050:
  5649  0039A6  2812               	incf	___fladd@aexp^0,w,c
  5650  0039A8  A4D8               	btfss	status,2,c
  5651  0039AA  EFD9  F01C         	goto	u6061
  5652  0039AE  EFDB  F01C         	goto	u6060
  5653  0039B2                     u6061:
  5654  0039B2  EFE3  F01C         	goto	l7702
  5655  0039B6                     u6060:
  5656  0039B6  0E00               	movlw	0
  5657  0039B8  6E09               	movwf	___fladd@a^0,c
  5658  0039BA  0E00               	movlw	0
  5659  0039BC  6E0A               	movwf	(___fladd@a+1)^0,c
  5660  0039BE  0E00               	movlw	0
  5661  0039C0  6E0B               	movwf	(___fladd@a+2)^0,c
  5662  0039C2  0E00               	movlw	0
  5663  0039C4  6E0C               	movwf	(___fladd@a+3)^0,c
  5664  0039C6                     l7702:
  5665  0039C6  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5666  0039C8  0E00               	movlw	0
  5667  0039CA  6E0C               	movwf	(___fladd@a+3)^0,c
  5668  0039CC  EFF0  F01C         	goto	l7708
  5669  0039D0                     l7706:
  5670  0039D0  0E00               	movlw	0
  5671  0039D2  6E09               	movwf	___fladd@a^0,c
  5672  0039D4  0E00               	movlw	0
  5673  0039D6  6E0A               	movwf	(___fladd@a+1)^0,c
  5674  0039D8  0E00               	movlw	0
  5675  0039DA  6E0B               	movwf	(___fladd@a+2)^0,c
  5676  0039DC  0E00               	movlw	0
  5677  0039DE  6E0C               	movwf	(___fladd@a+3)^0,c
  5678  0039E0                     l7708:
  5679  0039E0  5013               	movf	___fladd@bexp^0,w,c
  5680  0039E2  5C12               	subwf	___fladd@aexp^0,w,c
  5681  0039E4  B0D8               	btfsc	status,0,c
  5682  0039E6  EFF7  F01C         	goto	u6071
  5683  0039EA  EFF9  F01C         	goto	u6070
  5684  0039EE                     u6071:
  5685  0039EE  EF20  F01D         	goto	l7744
  5686  0039F2                     u6070:
  5687  0039F2  AC11               	btfss	___fladd@signs^0,6,c
  5688  0039F4  EFFE  F01C         	goto	u6081
  5689  0039F8  EF00  F01D         	goto	u6080
  5690  0039FC                     u6081:
  5691  0039FC  EF02  F01D         	goto	l7714
  5692  003A00                     u6080:
  5693  003A00  0E80               	movlw	128
  5694  003A02  1A11               	xorwf	___fladd@signs^0,f,c
  5695  003A04                     l7714:
  5696  003A04  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5697  003A08  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5698  003A0C  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5699  003A10  C005  F014         	movff	___fladd@b,___fladd@grs
  5700  003A14  C009  F005         	movff	___fladd@a,___fladd@b
  5701  003A18  C014  F009         	movff	___fladd@grs,___fladd@a
  5702  003A1C  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5703  003A20  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5704  003A24  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5705  003A28  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5706  003A2C  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5707  003A30  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5708  003A34  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5709  003A38  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5710  003A3C  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5711  003A40                     l7744:
  5712  003A40  0E00               	movlw	0
  5713  003A42  6E14               	movwf	___fladd@grs^0,c
  5714  003A44  5013               	movf	___fladd@bexp^0,w,c
  5715  003A46  C012  F00D         	movff	___fladd@aexp,??___fladd
  5716  003A4A  6A0E               	clrf	(??___fladd+1)^0,c
  5717  003A4C  5E0D               	subwf	??___fladd^0,f,c
  5718  003A4E  0E00               	movlw	0
  5719  003A50  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5720  003A52  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5721  003A54  EF35  F01D         	goto	u6091
  5722  003A58  500E               	movf	(??___fladd+1)^0,w,c
  5723  003A5A  E109               	bnz	u6090
  5724  003A5C  0E1A               	movlw	26
  5725  003A5E  5C0D               	subwf	??___fladd^0,w,c
  5726  003A60  A0D8               	btfss	status,0,c
  5727  003A62  EF35  F01D         	goto	u6091
  5728  003A66  EF37  F01D         	goto	u6090
  5729  003A6A                     u6091:
  5730  003A6A  EF6E  F01D         	goto	l1262
  5731  003A6E                     u6090:
  5732  003A6E  5005               	movf	___fladd@b^0,w,c
  5733  003A70  1006               	iorwf	(___fladd@b+1)^0,w,c
  5734  003A72  1007               	iorwf	(___fladd@b+2)^0,w,c
  5735  003A74  1008               	iorwf	(___fladd@b+3)^0,w,c
  5736  003A76  A4D8               	btfss	status,2,c
  5737  003A78  EF40  F01D         	goto	u6101
  5738  003A7C  EF43  F01D         	goto	u6100
  5739  003A80                     u6101:
  5740  003A80  0E01               	movlw	1
  5741  003A82  EF44  F01D         	goto	u6110
  5742  003A86                     u6100:
  5743  003A86  0E00               	movlw	0
  5744  003A88                     u6110:
  5745  003A88  6E14               	movwf	___fladd@grs^0,c
  5746  003A8A  0E00               	movlw	0
  5747  003A8C  6E05               	movwf	___fladd@b^0,c
  5748  003A8E  0E00               	movlw	0
  5749  003A90  6E06               	movwf	(___fladd@b+1)^0,c
  5750  003A92  0E00               	movlw	0
  5751  003A94  6E07               	movwf	(___fladd@b+2)^0,c
  5752  003A96  0E00               	movlw	0
  5753  003A98  6E08               	movwf	(___fladd@b+3)^0,c
  5754  003A9A  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5755  003A9E  EF77  F01D         	goto	l1261
  5756  003AA2                     l1263:
  5757  003AA2  A014               	btfss	___fladd@grs^0,0,c
  5758  003AA4  EF56  F01D         	goto	u6121
  5759  003AA8  EF58  F01D         	goto	u6120
  5760  003AAC                     u6121:
  5761  003AAC  EF5E  F01D         	goto	l7756
  5762  003AB0                     u6120:
  5763  003AB0  90D8               	bcf	status,0,c
  5764  003AB2  3014               	rrcf	___fladd@grs^0,w,c
  5765  003AB4  0901               	iorlw	1
  5766  003AB6  6E14               	movwf	___fladd@grs^0,c
  5767  003AB8  EF60  F01D         	goto	l7758
  5768  003ABC                     l7756:
  5769  003ABC  90D8               	bcf	status,0,c
  5770  003ABE  3214               	rrcf	___fladd@grs^0,f,c
  5771  003AC0                     l7758:
  5772  003AC0  A005               	btfss	___fladd@b^0,0,c
  5773  003AC2  EF65  F01D         	goto	u6131
  5774  003AC6  EF67  F01D         	goto	u6130
  5775  003ACA                     u6131:
  5776  003ACA  EF68  F01D         	goto	l7762
  5777  003ACE                     u6130:
  5778  003ACE  8E14               	bsf	___fladd@grs^0,7,c
  5779  003AD0                     l7762:
  5780  003AD0  3408               	rlcf	(___fladd@b+3)^0,w,c
  5781  003AD2  3208               	rrcf	(___fladd@b+3)^0,f,c
  5782  003AD4  3207               	rrcf	(___fladd@b+2)^0,f,c
  5783  003AD6  3206               	rrcf	(___fladd@b+1)^0,f,c
  5784  003AD8  3205               	rrcf	___fladd@b^0,f,c
  5785  003ADA  2A13               	incf	___fladd@bexp^0,f,c
  5786  003ADC                     l1262:
  5787  003ADC  5012               	movf	___fladd@aexp^0,w,c
  5788  003ADE  5C13               	subwf	___fladd@bexp^0,w,c
  5789  003AE0  A0D8               	btfss	status,0,c
  5790  003AE2  EF75  F01D         	goto	u6141
  5791  003AE6  EF77  F01D         	goto	u6140
  5792  003AEA                     u6141:
  5793  003AEA  EF51  F01D         	goto	l1263
  5794  003AEE                     u6140:
  5795  003AEE                     l1261:
  5796  003AEE  BC11               	btfsc	___fladd@signs^0,6,c
  5797  003AF0  EF7C  F01D         	goto	u6151
  5798  003AF4  EF7E  F01D         	goto	u6150
  5799  003AF8                     u6151:
  5800  003AF8  EFBE  F01D         	goto	l7790
  5801  003AFC                     u6150:
  5802  003AFC  5013               	movf	___fladd@bexp^0,w,c
  5803  003AFE  A4D8               	btfss	status,2,c
  5804  003B00  EF84  F01D         	goto	u6161
  5805  003B04  EF86  F01D         	goto	u6160
  5806  003B08                     u6161:
  5807  003B08  EF90  F01D         	goto	l7772
  5808  003B0C                     u6160:
  5809  003B0C  0E00               	movlw	0
  5810  003B0E  6E05               	movwf	?___fladd^0,c
  5811  003B10  0E00               	movlw	0
  5812  003B12  6E06               	movwf	(?___fladd+1)^0,c
  5813  003B14  0E00               	movlw	0
  5814  003B16  6E07               	movwf	(?___fladd+2)^0,c
  5815  003B18  0E00               	movlw	0
  5816  003B1A  6E08               	movwf	(?___fladd+3)^0,c
  5817  003B1C  EFDF  F01E         	goto	l1270
  5818  003B20                     l7772:
  5819  003B20  5009               	movf	___fladd@a^0,w,c
  5820  003B22  2605               	addwf	___fladd@b^0,f,c
  5821  003B24  500A               	movf	(___fladd@a+1)^0,w,c
  5822  003B26  2206               	addwfc	(___fladd@b+1)^0,f,c
  5823  003B28  500B               	movf	(___fladd@a+2)^0,w,c
  5824  003B2A  2207               	addwfc	(___fladd@b+2)^0,f,c
  5825  003B2C  500C               	movf	(___fladd@a+3)^0,w,c
  5826  003B2E  2208               	addwfc	(___fladd@b+3)^0,f,c
  5827  003B30  A008               	btfss	(___fladd@b+3)^0,0,c
  5828  003B32  EF9D  F01D         	goto	u6171
  5829  003B36  EF9F  F01D         	goto	u6170
  5830  003B3A                     u6171:
  5831  003B3A  EF4B  F01E         	goto	l7826
  5832  003B3E                     u6170:
  5833  003B3E  A014               	btfss	___fladd@grs^0,0,c
  5834  003B40  EFA4  F01D         	goto	u6181
  5835  003B44  EFA6  F01D         	goto	u6180
  5836  003B48                     u6181:
  5837  003B48  EFAC  F01D         	goto	l7780
  5838  003B4C                     u6180:
  5839  003B4C  90D8               	bcf	status,0,c
  5840  003B4E  3014               	rrcf	___fladd@grs^0,w,c
  5841  003B50  0901               	iorlw	1
  5842  003B52  6E14               	movwf	___fladd@grs^0,c
  5843  003B54  EFAE  F01D         	goto	l7782
  5844  003B58                     l7780:
  5845  003B58  90D8               	bcf	status,0,c
  5846  003B5A  3214               	rrcf	___fladd@grs^0,f,c
  5847  003B5C                     l7782:
  5848  003B5C  A005               	btfss	___fladd@b^0,0,c
  5849  003B5E  EFB3  F01D         	goto	u6191
  5850  003B62  EFB5  F01D         	goto	u6190
  5851  003B66                     u6191:
  5852  003B66  EFB6  F01D         	goto	l7786
  5853  003B6A                     u6190:
  5854  003B6A  8E14               	bsf	___fladd@grs^0,7,c
  5855  003B6C                     l7786:
  5856  003B6C  3408               	rlcf	(___fladd@b+3)^0,w,c
  5857  003B6E  3208               	rrcf	(___fladd@b+3)^0,f,c
  5858  003B70  3207               	rrcf	(___fladd@b+2)^0,f,c
  5859  003B72  3206               	rrcf	(___fladd@b+1)^0,f,c
  5860  003B74  3205               	rrcf	___fladd@b^0,f,c
  5861  003B76  2A13               	incf	___fladd@bexp^0,f,c
  5862  003B78  EF4B  F01E         	goto	l7826
  5863  003B7C                     l7790:
  5864  003B7C  5009               	movf	___fladd@a^0,w,c
  5865  003B7E  5C05               	subwf	___fladd@b^0,w,c
  5866  003B80  500A               	movf	(___fladd@a+1)^0,w,c
  5867  003B82  5806               	subwfb	(___fladd@b+1)^0,w,c
  5868  003B84  500B               	movf	(___fladd@a+2)^0,w,c
  5869  003B86  5807               	subwfb	(___fladd@b+2)^0,w,c
  5870  003B88  5008               	movf	(___fladd@b+3)^0,w,c
  5871  003B8A  0A80               	xorlw	128
  5872  003B8C  6E0D               	movwf	??___fladd^0,c
  5873  003B8E  500C               	movf	(___fladd@a+3)^0,w,c
  5874  003B90  0A80               	xorlw	128
  5875  003B92  580D               	subwfb	??___fladd^0,w,c
  5876  003B94  B0D8               	btfsc	status,0,c
  5877  003B96  EFCF  F01D         	goto	u6201
  5878  003B9A  EFD1  F01D         	goto	u6200
  5879  003B9E                     u6201:
  5880  003B9E  EFFC  F01D         	goto	l7800
  5881  003BA2                     u6200:
  5882  003BA2  5005               	movf	___fladd@b^0,w,c
  5883  003BA4  5C09               	subwf	___fladd@a^0,w,c
  5884  003BA6  6E0D               	movwf	??___fladd^0,c
  5885  003BA8  5006               	movf	(___fladd@b+1)^0,w,c
  5886  003BAA  580A               	subwfb	(___fladd@a+1)^0,w,c
  5887  003BAC  6E0E               	movwf	(??___fladd+1)^0,c
  5888  003BAE  5007               	movf	(___fladd@b+2)^0,w,c
  5889  003BB0  580B               	subwfb	(___fladd@a+2)^0,w,c
  5890  003BB2  6E0F               	movwf	(??___fladd+2)^0,c
  5891  003BB4  5008               	movf	(___fladd@b+3)^0,w,c
  5892  003BB6  580C               	subwfb	(___fladd@a+3)^0,w,c
  5893  003BB8  6E10               	movwf	(??___fladd+3)^0,c
  5894  003BBA  0EFF               	movlw	255
  5895  003BBC  240D               	addwf	??___fladd^0,w,c
  5896  003BBE  6E05               	movwf	___fladd@b^0,c
  5897  003BC0  0EFF               	movlw	255
  5898  003BC2  200E               	addwfc	(??___fladd+1)^0,w,c
  5899  003BC4  6E06               	movwf	(___fladd@b+1)^0,c
  5900  003BC6  0EFF               	movlw	255
  5901  003BC8  200F               	addwfc	(??___fladd+2)^0,w,c
  5902  003BCA  6E07               	movwf	(___fladd@b+2)^0,c
  5903  003BCC  0EFF               	movlw	255
  5904  003BCE  2010               	addwfc	(??___fladd+3)^0,w,c
  5905  003BD0  6E08               	movwf	(___fladd@b+3)^0,c
  5906  003BD2  0E80               	movlw	128
  5907  003BD4  1A11               	xorwf	___fladd@signs^0,f,c
  5908  003BD6  6C14               	negf	___fladd@grs^0,c
  5909  003BD8  5014               	movf	___fladd@grs^0,w,c
  5910  003BDA  A4D8               	btfss	status,2,c
  5911  003BDC  EFF2  F01D         	goto	u6211
  5912  003BE0  EFF4  F01D         	goto	u6210
  5913  003BE4                     u6211:
  5914  003BE4  EF04  F01E         	goto	l1278
  5915  003BE8                     u6210:
  5916  003BE8  0E01               	movlw	1
  5917  003BEA  2605               	addwf	___fladd@b^0,f,c
  5918  003BEC  0E00               	movlw	0
  5919  003BEE  2206               	addwfc	(___fladd@b+1)^0,f,c
  5920  003BF0  2207               	addwfc	(___fladd@b+2)^0,f,c
  5921  003BF2  2208               	addwfc	(___fladd@b+3)^0,f,c
  5922  003BF4  EF04  F01E         	goto	l1278
  5923  003BF8                     l7800:
  5924  003BF8  5009               	movf	___fladd@a^0,w,c
  5925  003BFA  5E05               	subwf	___fladd@b^0,f,c
  5926  003BFC  500A               	movf	(___fladd@a+1)^0,w,c
  5927  003BFE  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5928  003C00  500B               	movf	(___fladd@a+2)^0,w,c
  5929  003C02  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5930  003C04  500C               	movf	(___fladd@a+3)^0,w,c
  5931  003C06  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5932  003C08                     l1278:
  5933  003C08  5005               	movf	___fladd@b^0,w,c
  5934  003C0A  1006               	iorwf	(___fladd@b+1)^0,w,c
  5935  003C0C  1007               	iorwf	(___fladd@b+2)^0,w,c
  5936  003C0E  1008               	iorwf	(___fladd@b+3)^0,w,c
  5937  003C10  A4D8               	btfss	status,2,c
  5938  003C12  EF0D  F01E         	goto	u6221
  5939  003C16  EF0F  F01E         	goto	u6220
  5940  003C1A                     u6221:
  5941  003C1A  EF44  F01E         	goto	l7824
  5942  003C1E                     u6220:
  5943  003C1E  5014               	movf	___fladd@grs^0,w,c
  5944  003C20  A4D8               	btfss	status,2,c
  5945  003C22  EF15  F01E         	goto	u6231
  5946  003C26  EF17  F01E         	goto	u6230
  5947  003C2A                     u6231:
  5948  003C2A  EF44  F01E         	goto	l7824
  5949  003C2E                     u6230:
  5950  003C2E  0E00               	movlw	0
  5951  003C30  6E05               	movwf	?___fladd^0,c
  5952  003C32  0E00               	movlw	0
  5953  003C34  6E06               	movwf	(?___fladd+1)^0,c
  5954  003C36  0E00               	movlw	0
  5955  003C38  6E07               	movwf	(?___fladd+2)^0,c
  5956  003C3A  0E00               	movlw	0
  5957  003C3C  6E08               	movwf	(?___fladd+3)^0,c
  5958  003C3E  EFDF  F01E         	goto	l1270
  5959  003C42                     l7808:
  5960  003C42  90D8               	bcf	status,0,c
  5961  003C44  3605               	rlcf	___fladd@b^0,f,c
  5962  003C46  3606               	rlcf	(___fladd@b+1)^0,f,c
  5963  003C48  3607               	rlcf	(___fladd@b+2)^0,f,c
  5964  003C4A  3608               	rlcf	(___fladd@b+3)^0,f,c
  5965  003C4C  AE14               	btfss	___fladd@grs^0,7,c
  5966  003C4E  EF2B  F01E         	goto	u6241
  5967  003C52  EF2D  F01E         	goto	u6240
  5968  003C56                     u6241:
  5969  003C56  EF2E  F01E         	goto	l7814
  5970  003C5A                     u6240:
  5971  003C5A  8005               	bsf	___fladd@b^0,0,c
  5972  003C5C                     l7814:
  5973  003C5C  A014               	btfss	___fladd@grs^0,0,c
  5974  003C5E  EF33  F01E         	goto	u6251
  5975  003C62  EF35  F01E         	goto	u6250
  5976  003C66                     u6251:
  5977  003C66  EF39  F01E         	goto	l7818
  5978  003C6A                     u6250:
  5979  003C6A  80D8               	bsf	status,0,c
  5980  003C6C  3614               	rlcf	___fladd@grs^0,f,c
  5981  003C6E  EF3B  F01E         	goto	l7820
  5982  003C72                     l7818:
  5983  003C72  90D8               	bcf	status,0,c
  5984  003C74  3614               	rlcf	___fladd@grs^0,f,c
  5985  003C76                     l7820:
  5986  003C76  5013               	movf	___fladd@bexp^0,w,c
  5987  003C78  B4D8               	btfsc	status,2,c
  5988  003C7A  EF41  F01E         	goto	u6261
  5989  003C7E  EF43  F01E         	goto	u6260
  5990  003C82                     u6261:
  5991  003C82  EF44  F01E         	goto	l7824
  5992  003C86                     u6260:
  5993  003C86  0613               	decf	___fladd@bexp^0,f,c
  5994  003C88                     l7824:
  5995  003C88  AE07               	btfss	(___fladd@b+2)^0,7,c
  5996  003C8A  EF49  F01E         	goto	u6271
  5997  003C8E  EF4B  F01E         	goto	u6270
  5998  003C92                     u6271:
  5999  003C92  EF21  F01E         	goto	l7808
  6000  003C96                     u6270:
  6001  003C96                     l7826:
  6002  003C96  0E00               	movlw	0
  6003  003C98  6E12               	movwf	___fladd@aexp^0,c
  6004  003C9A  AE14               	btfss	___fladd@grs^0,7,c
  6005  003C9C  EF52  F01E         	goto	u6281
  6006  003CA0  EF54  F01E         	goto	u6280
  6007  003CA4                     u6281:
  6008  003CA4  EF6C  F01E         	goto	l1287
  6009  003CA8                     u6280:
  6010  003CA8  C014  F00D         	movff	___fladd@grs,??___fladd
  6011  003CAC  0E7F               	movlw	127
  6012  003CAE  160D               	andwf	??___fladd^0,f,c
  6013  003CB0  B4D8               	btfsc	status,2,c
  6014  003CB2  EF5D  F01E         	goto	u6291
  6015  003CB6  EF5F  F01E         	goto	u6290
  6016  003CBA                     u6291:
  6017  003CBA  EF63  F01E         	goto	l1288
  6018  003CBE                     u6290:
  6019  003CBE                     l7832:
  6020  003CBE  0E01               	movlw	1
  6021  003CC0  6E12               	movwf	___fladd@aexp^0,c
  6022  003CC2  EF6C  F01E         	goto	l1287
  6023  003CC6                     l1288:
  6024  003CC6  A005               	btfss	___fladd@b^0,0,c
  6025  003CC8  EF68  F01E         	goto	u6301
  6026  003CCC  EF6A  F01E         	goto	u6300
  6027  003CD0                     u6301:
  6028  003CD0  EF6C  F01E         	goto	l1287
  6029  003CD4                     u6300:
  6030  003CD4  EF5F  F01E         	goto	l7832
  6031  003CD8                     l1287:
  6032  003CD8  5012               	movf	___fladd@aexp^0,w,c
  6033  003CDA  B4D8               	btfsc	status,2,c
  6034  003CDC  EF72  F01E         	goto	u6311
  6035  003CE0  EF74  F01E         	goto	u6310
  6036  003CE4                     u6311:
  6037  003CE4  EF9F  F01E         	goto	l7844
  6038  003CE8                     u6310:
  6039  003CE8  0E01               	movlw	1
  6040  003CEA  2605               	addwf	___fladd@b^0,f,c
  6041  003CEC  0E00               	movlw	0
  6042  003CEE  2206               	addwfc	(___fladd@b+1)^0,f,c
  6043  003CF0  2207               	addwfc	(___fladd@b+2)^0,f,c
  6044  003CF2  2208               	addwfc	(___fladd@b+3)^0,f,c
  6045  003CF4  A008               	btfss	(___fladd@b+3)^0,0,c
  6046  003CF6  EF7F  F01E         	goto	u6321
  6047  003CFA  EF81  F01E         	goto	u6320
  6048  003CFE                     u6321:
  6049  003CFE  EF9F  F01E         	goto	l7844
  6050  003D02                     u6320:
  6051  003D02  C005  F00D         	movff	___fladd@b,??___fladd
  6052  003D06  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  6053  003D0A  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  6054  003D0E  C008  F010         	movff	___fladd@b+3,??___fladd+3
  6055  003D12  3410               	rlcf	(??___fladd+3)^0,w,c
  6056  003D14  3210               	rrcf	(??___fladd+3)^0,f,c
  6057  003D16  320F               	rrcf	(??___fladd+2)^0,f,c
  6058  003D18  320E               	rrcf	(??___fladd+1)^0,f,c
  6059  003D1A  320D               	rrcf	??___fladd^0,f,c
  6060  003D1C  C00D  F005         	movff	??___fladd,___fladd@b
  6061  003D20  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  6062  003D24  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  6063  003D28  C010  F008         	movff	??___fladd+3,___fladd@b+3
  6064  003D2C  2813               	incf	___fladd@bexp^0,w,c
  6065  003D2E  B4D8               	btfsc	status,2,c
  6066  003D30  EF9C  F01E         	goto	u6331
  6067  003D34  EF9E  F01E         	goto	u6330
  6068  003D38                     u6331:
  6069  003D38  EF9F  F01E         	goto	l7844
  6070  003D3C                     u6330:
  6071  003D3C  2A13               	incf	___fladd@bexp^0,f,c
  6072  003D3E                     l7844:
  6073  003D3E  2813               	incf	___fladd@bexp^0,w,c
  6074  003D40  B4D8               	btfsc	status,2,c
  6075  003D42  EFA5  F01E         	goto	u6341
  6076  003D46  EFA7  F01E         	goto	u6340
  6077  003D4A                     u6341:
  6078  003D4A  EFAF  F01E         	goto	l7848
  6079  003D4E                     u6340:
  6080  003D4E  5013               	movf	___fladd@bexp^0,w,c
  6081  003D50  A4D8               	btfss	status,2,c
  6082  003D52  EFAD  F01E         	goto	u6351
  6083  003D56  EFAF  F01E         	goto	u6350
  6084  003D5A                     u6351:
  6085  003D5A  EFC1  F01E         	goto	l7852
  6086  003D5E                     u6350:
  6087  003D5E                     l7848:
  6088  003D5E  0E00               	movlw	0
  6089  003D60  6E05               	movwf	___fladd@b^0,c
  6090  003D62  0E00               	movlw	0
  6091  003D64  6E06               	movwf	(___fladd@b+1)^0,c
  6092  003D66  0E00               	movlw	0
  6093  003D68  6E07               	movwf	(___fladd@b+2)^0,c
  6094  003D6A  0E00               	movlw	0
  6095  003D6C  6E08               	movwf	(___fladd@b+3)^0,c
  6096  003D6E  5013               	movf	___fladd@bexp^0,w,c
  6097  003D70  A4D8               	btfss	status,2,c
  6098  003D72  EFBD  F01E         	goto	u6361
  6099  003D76  EFBF  F01E         	goto	u6360
  6100  003D7A                     u6361:
  6101  003D7A  EFC1  F01E         	goto	l7852
  6102  003D7E                     u6360:
  6103  003D7E  0E00               	movlw	0
  6104  003D80  6E11               	movwf	___fladd@signs^0,c
  6105  003D82                     l7852:
  6106  003D82  A013               	btfss	___fladd@bexp^0,0,c
  6107  003D84  EFC6  F01E         	goto	u6371
  6108  003D88  EFC8  F01E         	goto	u6370
  6109  003D8C                     u6371:
  6110  003D8C  EFCB  F01E         	goto	l7856
  6111  003D90                     u6370:
  6112  003D90  8E07               	bsf	(___fladd@b+2)^0,7,c
  6113  003D92  EFCC  F01E         	goto	l7858
  6114  003D96                     l7856:
  6115  003D96  9E07               	bcf	(___fladd@b+2)^0,7,c
  6116  003D98                     l7858:
  6117  003D98  90D8               	bcf	status,0,c
  6118  003D9A  3013               	rrcf	___fladd@bexp^0,w,c
  6119  003D9C  6E08               	movwf	(___fladd@b+3)^0,c
  6120  003D9E  AE11               	btfss	___fladd@signs^0,7,c
  6121  003DA0  EFD4  F01E         	goto	u6381
  6122  003DA4  EFD6  F01E         	goto	u6380
  6123  003DA8                     u6381:
  6124  003DA8  EFD7  F01E         	goto	l7864
  6125  003DAC                     u6380:
  6126  003DAC  8E08               	bsf	(___fladd@b+3)^0,7,c
  6127  003DAE                     l7864:
  6128  003DAE  C005  F005         	movff	___fladd@b,?___fladd
  6129  003DB2  C006  F006         	movff	___fladd@b+1,?___fladd+1
  6130  003DB6  C007  F007         	movff	___fladd@b+2,?___fladd+2
  6131  003DBA  C008  F008         	movff	___fladd@b+3,?___fladd+3
  6132  003DBE                     l1270:
  6133  003DBE  0012               	return		;funcret
  6134  003DC0                     __end_of___fladd:
  6135                           	callstack 0
  6136                           
  6137 ;; *************** function ___flneg *****************
  6138 ;; Defined at:
  6139 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  f1              4    4[COMRAM] unsigned char 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  4    4[COMRAM] unsigned char 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;Total ram usage:        4 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; Hardware stack levels required when called: 4
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_efgtoa
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text20
  6168  006542                     __ptext20:
  6169                           	callstack 0
  6170  006542                     ___flneg:
  6171                           	callstack 22
  6172  006542  5005               	movf	___flneg@f1^0,w,c
  6173  006544  1006               	iorwf	(___flneg@f1+1)^0,w,c
  6174  006546  1007               	iorwf	(___flneg@f1+2)^0,w,c
  6175  006548  1008               	iorwf	(___flneg@f1+3)^0,w,c
  6176  00654A  B4D8               	btfsc	status,2,c
  6177  00654C  EFAA  F032         	goto	u7051
  6178  006550  EFAC  F032         	goto	u7050
  6179  006554                     u7051:
  6180  006554  EFB4  F032         	goto	l8292
  6181  006558                     u7050:
  6182  006558  0E00               	movlw	0
  6183  00655A  1A05               	xorwf	___flneg@f1^0,f,c
  6184  00655C  0E00               	movlw	0
  6185  00655E  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  6186  006560  0E00               	movlw	0
  6187  006562  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  6188  006564  0E80               	movlw	128
  6189  006566  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  6190  006568                     l8292:
  6191  006568  C005  F005         	movff	___flneg@f1,?___flneg
  6192  00656C  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  6193  006570  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  6194  006574  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  6195  006578  0012               	return		;funcret
  6196  00657A                     __end_of___flneg:
  6197                           	callstack 0
  6198                           
  6199 ;; *************** function ___flmul *****************
  6200 ;; Defined at:
  6201 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  b               4    4[COMRAM] unsigned char 
  6204 ;;  a               4    8[COMRAM] unsigned char 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  prod            4   23[COMRAM] struct .
  6207 ;;  grs             4   18[COMRAM] unsigned long 
  6208 ;;  temp            2   27[COMRAM] struct .
  6209 ;;  bexp            1   22[COMRAM] unsigned char 
  6210 ;;  aexp            1   17[COMRAM] unsigned char 
  6211 ;;  sign            1   16[COMRAM] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  4    4[COMRAM] unsigned char 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0, prodl, prodh
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6221 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;Total ram usage:       25 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; Hardware stack levels required when called: 4
  6228 ;; This function calls:
  6229 ;;		Nothing
  6230 ;; This function is called by:
  6231 ;;		_efgtoa
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text21
  6236  004260                     __ptext21:
  6237                           	callstack 0
  6238  004260                     ___flmul:
  6239                           	callstack 22
  6240  004260  5008               	movf	(___flmul@b+3)^0,w,c
  6241  004262  0B80               	andlw	128
  6242  004264  6E11               	movwf	___flmul@sign^0,c
  6243  004266  5008               	movf	(___flmul@b+3)^0,w,c
  6244  004268  2408               	addwf	(___flmul@b+3)^0,w,c
  6245  00426A  6E17               	movwf	___flmul@bexp^0,c
  6246  00426C  AE07               	btfss	(___flmul@b+2)^0,7,c
  6247  00426E  EF3B  F021         	goto	u6661
  6248  004272  EF3D  F021         	goto	u6660
  6249  004276                     u6661:
  6250  004276  EF3E  F021         	goto	l8040
  6251  00427A                     u6660:
  6252  00427A  8017               	bsf	___flmul@bexp^0,0,c
  6253  00427C                     l8040:
  6254  00427C  5017               	movf	___flmul@bexp^0,w,c
  6255  00427E  B4D8               	btfsc	status,2,c
  6256  004280  EF44  F021         	goto	u6671
  6257  004284  EF46  F021         	goto	u6670
  6258  004288                     u6671:
  6259  004288  EF59  F021         	goto	l8048
  6260  00428C                     u6670:
  6261  00428C  2817               	incf	___flmul@bexp^0,w,c
  6262  00428E  A4D8               	btfss	status,2,c
  6263  004290  EF4C  F021         	goto	u6681
  6264  004294  EF4E  F021         	goto	u6680
  6265  004298                     u6681:
  6266  004298  EF56  F021         	goto	l8046
  6267  00429C                     u6680:
  6268  00429C  0E00               	movlw	0
  6269  00429E  6E05               	movwf	___flmul@b^0,c
  6270  0042A0  0E00               	movlw	0
  6271  0042A2  6E06               	movwf	(___flmul@b+1)^0,c
  6272  0042A4  0E00               	movlw	0
  6273  0042A6  6E07               	movwf	(___flmul@b+2)^0,c
  6274  0042A8  0E00               	movlw	0
  6275  0042AA  6E08               	movwf	(___flmul@b+3)^0,c
  6276  0042AC                     l8046:
  6277  0042AC  8E07               	bsf	(___flmul@b+2)^0,7,c
  6278  0042AE  EF61  F021         	goto	l8050
  6279  0042B2                     l8048:
  6280  0042B2  0E00               	movlw	0
  6281  0042B4  6E05               	movwf	___flmul@b^0,c
  6282  0042B6  0E00               	movlw	0
  6283  0042B8  6E06               	movwf	(___flmul@b+1)^0,c
  6284  0042BA  0E00               	movlw	0
  6285  0042BC  6E07               	movwf	(___flmul@b+2)^0,c
  6286  0042BE  0E00               	movlw	0
  6287  0042C0  6E08               	movwf	(___flmul@b+3)^0,c
  6288  0042C2                     l8050:
  6289  0042C2  500C               	movf	(___flmul@a+3)^0,w,c
  6290  0042C4  0B80               	andlw	128
  6291  0042C6  1A11               	xorwf	___flmul@sign^0,f,c
  6292  0042C8  500C               	movf	(___flmul@a+3)^0,w,c
  6293  0042CA  240C               	addwf	(___flmul@a+3)^0,w,c
  6294  0042CC  6E12               	movwf	___flmul@aexp^0,c
  6295  0042CE  AE0B               	btfss	(___flmul@a+2)^0,7,c
  6296  0042D0  EF6C  F021         	goto	u6691
  6297  0042D4  EF6E  F021         	goto	u6690
  6298  0042D8                     u6691:
  6299  0042D8  EF6F  F021         	goto	l8058
  6300  0042DC                     u6690:
  6301  0042DC  8012               	bsf	___flmul@aexp^0,0,c
  6302  0042DE                     l8058:
  6303  0042DE  5012               	movf	___flmul@aexp^0,w,c
  6304  0042E0  B4D8               	btfsc	status,2,c
  6305  0042E2  EF75  F021         	goto	u6701
  6306  0042E6  EF77  F021         	goto	u6700
  6307  0042EA                     u6701:
  6308  0042EA  EF8A  F021         	goto	l8066
  6309  0042EE                     u6700:
  6310  0042EE  2812               	incf	___flmul@aexp^0,w,c
  6311  0042F0  A4D8               	btfss	status,2,c
  6312  0042F2  EF7D  F021         	goto	u6711
  6313  0042F6  EF7F  F021         	goto	u6710
  6314  0042FA                     u6711:
  6315  0042FA  EF87  F021         	goto	l8064
  6316  0042FE                     u6710:
  6317  0042FE  0E00               	movlw	0
  6318  004300  6E09               	movwf	___flmul@a^0,c
  6319  004302  0E00               	movlw	0
  6320  004304  6E0A               	movwf	(___flmul@a+1)^0,c
  6321  004306  0E00               	movlw	0
  6322  004308  6E0B               	movwf	(___flmul@a+2)^0,c
  6323  00430A  0E00               	movlw	0
  6324  00430C  6E0C               	movwf	(___flmul@a+3)^0,c
  6325  00430E                     l8064:
  6326  00430E  8E0B               	bsf	(___flmul@a+2)^0,7,c
  6327  004310  EF92  F021         	goto	l1347
  6328  004314                     l8066:
  6329  004314  0E00               	movlw	0
  6330  004316  6E09               	movwf	___flmul@a^0,c
  6331  004318  0E00               	movlw	0
  6332  00431A  6E0A               	movwf	(___flmul@a+1)^0,c
  6333  00431C  0E00               	movlw	0
  6334  00431E  6E0B               	movwf	(___flmul@a+2)^0,c
  6335  004320  0E00               	movlw	0
  6336  004322  6E0C               	movwf	(___flmul@a+3)^0,c
  6337  004324                     l1347:
  6338  004324  5012               	movf	___flmul@aexp^0,w,c
  6339  004326  B4D8               	btfsc	status,2,c
  6340  004328  EF98  F021         	goto	u6721
  6341  00432C  EF9A  F021         	goto	u6720
  6342  004330                     u6721:
  6343  004330  EFA2  F021         	goto	l8070
  6344  004334                     u6720:
  6345  004334  5017               	movf	___flmul@bexp^0,w,c
  6346  004336  A4D8               	btfss	status,2,c
  6347  004338  EFA0  F021         	goto	u6731
  6348  00433C  EFA2  F021         	goto	u6730
  6349  004340                     u6731:
  6350  004340  EFAC  F021         	goto	l8074
  6351  004344                     u6730:
  6352  004344                     l8070:
  6353  004344  0E00               	movlw	0
  6354  004346  6E05               	movwf	?___flmul^0,c
  6355  004348  0E00               	movlw	0
  6356  00434A  6E06               	movwf	(?___flmul+1)^0,c
  6357  00434C  0E00               	movlw	0
  6358  00434E  6E07               	movwf	(?___flmul+2)^0,c
  6359  004350  0E00               	movlw	0
  6360  004352  6E08               	movwf	(?___flmul+3)^0,c
  6361  004354  EF44  F023         	goto	l1351
  6362  004358                     l8074:
  6363  004358  500B               	movf	(___flmul@a+2)^0,w,c
  6364  00435A  0205               	mulwf	___flmul@b^0,c
  6365  00435C  CFF3 F01C          	movff	prodl,___flmul@temp
  6366  004360  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6367  004364  501C               	movf	___flmul@temp^0,w,c
  6368  004366  6E13               	movwf	___flmul@grs^0,c
  6369  004368  6A14               	clrf	(___flmul@grs+1)^0,c
  6370  00436A  6A15               	clrf	(___flmul@grs+2)^0,c
  6371  00436C  6A16               	clrf	(___flmul@grs+3)^0,c
  6372  00436E  501D               	movf	(___flmul@temp+1)^0,w,c
  6373  004370  6E18               	movwf	___flmul@prod^0,c
  6374  004372  6A19               	clrf	(___flmul@prod+1)^0,c
  6375  004374  6A1A               	clrf	(___flmul@prod+2)^0,c
  6376  004376  6A1B               	clrf	(___flmul@prod+3)^0,c
  6377  004378  500A               	movf	(___flmul@a+1)^0,w,c
  6378  00437A  0206               	mulwf	(___flmul@b+1)^0,c
  6379  00437C  CFF3 F01C          	movff	prodl,___flmul@temp
  6380  004380  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6381  004384  501C               	movf	___flmul@temp^0,w,c
  6382  004386  2613               	addwf	___flmul@grs^0,f,c
  6383  004388  0E00               	movlw	0
  6384  00438A  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6385  00438C  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6386  00438E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6387  004390  501D               	movf	(___flmul@temp+1)^0,w,c
  6388  004392  2618               	addwf	___flmul@prod^0,f,c
  6389  004394  0E00               	movlw	0
  6390  004396  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6391  004398  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6392  00439A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6393  00439C  5009               	movf	___flmul@a^0,w,c
  6394  00439E  0207               	mulwf	(___flmul@b+2)^0,c
  6395  0043A0  CFF3 F01C          	movff	prodl,___flmul@temp
  6396  0043A4  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6397  0043A8  501C               	movf	___flmul@temp^0,w,c
  6398  0043AA  2613               	addwf	___flmul@grs^0,f,c
  6399  0043AC  0E00               	movlw	0
  6400  0043AE  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6401  0043B0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6402  0043B2  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6403  0043B4  501D               	movf	(___flmul@temp+1)^0,w,c
  6404  0043B6  2618               	addwf	___flmul@prod^0,f,c
  6405  0043B8  0E00               	movlw	0
  6406  0043BA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6407  0043BC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6408  0043BE  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6409  0043C0  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6410  0043C4  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6411  0043C8  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6412  0043CC  6A13               	clrf	___flmul@grs^0,c
  6413  0043CE  5009               	movf	___flmul@a^0,w,c
  6414  0043D0  0206               	mulwf	(___flmul@b+1)^0,c
  6415  0043D2  CFF3 F01C          	movff	prodl,___flmul@temp
  6416  0043D6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6417  0043DA  501C               	movf	___flmul@temp^0,w,c
  6418  0043DC  2613               	addwf	___flmul@grs^0,f,c
  6419  0043DE  501D               	movf	(___flmul@temp+1)^0,w,c
  6420  0043E0  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6421  0043E2  0E00               	movlw	0
  6422  0043E4  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6423  0043E6  0E00               	movlw	0
  6424  0043E8  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6425  0043EA  500A               	movf	(___flmul@a+1)^0,w,c
  6426  0043EC  0205               	mulwf	___flmul@b^0,c
  6427  0043EE  CFF3 F01C          	movff	prodl,___flmul@temp
  6428  0043F2  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6429  0043F6  501C               	movf	___flmul@temp^0,w,c
  6430  0043F8  2613               	addwf	___flmul@grs^0,f,c
  6431  0043FA  501D               	movf	(___flmul@temp+1)^0,w,c
  6432  0043FC  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6433  0043FE  0E00               	movlw	0
  6434  004400  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6435  004402  0E00               	movlw	0
  6436  004404  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6437  004406  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6438  00440A  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6439  00440E  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6440  004412  6A13               	clrf	___flmul@grs^0,c
  6441  004414  5009               	movf	___flmul@a^0,w,c
  6442  004416  0205               	mulwf	___flmul@b^0,c
  6443  004418  CFF3 F01C          	movff	prodl,___flmul@temp
  6444  00441C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6445  004420  501C               	movf	___flmul@temp^0,w,c
  6446  004422  2613               	addwf	___flmul@grs^0,f,c
  6447  004424  501D               	movf	(___flmul@temp+1)^0,w,c
  6448  004426  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6449  004428  0E00               	movlw	0
  6450  00442A  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6451  00442C  0E00               	movlw	0
  6452  00442E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6453  004430  500B               	movf	(___flmul@a+2)^0,w,c
  6454  004432  0206               	mulwf	(___flmul@b+1)^0,c
  6455  004434  CFF3 F01C          	movff	prodl,___flmul@temp
  6456  004438  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6457  00443C  501C               	movf	___flmul@temp^0,w,c
  6458  00443E  2618               	addwf	___flmul@prod^0,f,c
  6459  004440  501D               	movf	(___flmul@temp+1)^0,w,c
  6460  004442  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6461  004444  0E00               	movlw	0
  6462  004446  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6463  004448  0E00               	movlw	0
  6464  00444A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6465  00444C  500A               	movf	(___flmul@a+1)^0,w,c
  6466  00444E  0207               	mulwf	(___flmul@b+2)^0,c
  6467  004450  CFF3 F01C          	movff	prodl,___flmul@temp
  6468  004454  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6469  004458  501C               	movf	___flmul@temp^0,w,c
  6470  00445A  2618               	addwf	___flmul@prod^0,f,c
  6471  00445C  501D               	movf	(___flmul@temp+1)^0,w,c
  6472  00445E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6473  004460  0E00               	movlw	0
  6474  004462  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6475  004464  0E00               	movlw	0
  6476  004466  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6477  004468  500B               	movf	(___flmul@a+2)^0,w,c
  6478  00446A  0207               	mulwf	(___flmul@b+2)^0,c
  6479  00446C  CFF3 F01C          	movff	prodl,___flmul@temp
  6480  004470  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6481  004474  501C               	movf	___flmul@temp^0,w,c
  6482  004476  6E0D               	movwf	??___flmul^0,c
  6483  004478  501D               	movf	(___flmul@temp+1)^0,w,c
  6484  00447A  6E0E               	movwf	(??___flmul+1)^0,c
  6485  00447C  6A0F               	clrf	(??___flmul+2)^0,c
  6486  00447E  6A10               	clrf	(??___flmul+3)^0,c
  6487  004480  C00F  F010         	movff	??___flmul+2,??___flmul+3
  6488  004484  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  6489  004488  C00D  F00E         	movff	??___flmul,??___flmul+1
  6490  00448C  6A0D               	clrf	??___flmul^0,c
  6491  00448E  500D               	movf	??___flmul^0,w,c
  6492  004490  2618               	addwf	___flmul@prod^0,f,c
  6493  004492  500E               	movf	(??___flmul+1)^0,w,c
  6494  004494  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6495  004496  500F               	movf	(??___flmul+2)^0,w,c
  6496  004498  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6497  00449A  5010               	movf	(??___flmul+3)^0,w,c
  6498  00449C  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6499  00449E  C013  F00D         	movff	___flmul@grs,??___flmul
  6500  0044A2  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  6501  0044A6  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  6502  0044AA  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  6503  0044AE  0E19               	movlw	25
  6504  0044B0  EF5F  F022         	goto	u6740
  6505  0044B4                     u6745:
  6506  0044B4  90D8               	bcf	status,0,c
  6507  0044B6  3210               	rrcf	(??___flmul+3)^0,f,c
  6508  0044B8  320F               	rrcf	(??___flmul+2)^0,f,c
  6509  0044BA  320E               	rrcf	(??___flmul+1)^0,f,c
  6510  0044BC  320D               	rrcf	??___flmul^0,f,c
  6511  0044BE                     u6740:
  6512  0044BE  2EE8               	decfsz	wreg,f,c
  6513  0044C0  EF5A  F022         	goto	u6745
  6514  0044C4  500D               	movf	??___flmul^0,w,c
  6515  0044C6  2618               	addwf	___flmul@prod^0,f,c
  6516  0044C8  500E               	movf	(??___flmul+1)^0,w,c
  6517  0044CA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6518  0044CC  500F               	movf	(??___flmul+2)^0,w,c
  6519  0044CE  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6520  0044D0  5010               	movf	(??___flmul+3)^0,w,c
  6521  0044D2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6522  0044D4  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6523  0044D8  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6524  0044DC  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6525  0044E0  6A13               	clrf	___flmul@grs^0,c
  6526  0044E2  5012               	movf	___flmul@aexp^0,w,c
  6527  0044E4  C017  F00D         	movff	___flmul@bexp,??___flmul
  6528  0044E8  6A0E               	clrf	(??___flmul+1)^0,c
  6529  0044EA  260D               	addwf	??___flmul^0,f,c
  6530  0044EC  0E00               	movlw	0
  6531  0044EE  220E               	addwfc	(??___flmul+1)^0,f,c
  6532  0044F0  0E82               	movlw	130
  6533  0044F2  240D               	addwf	??___flmul^0,w,c
  6534  0044F4  6E1C               	movwf	___flmul@temp^0,c
  6535  0044F6  0EFF               	movlw	255
  6536  0044F8  200E               	addwfc	(??___flmul+1)^0,w,c
  6537  0044FA  6E1D               	movwf	(___flmul@temp+1)^0,c
  6538  0044FC  EF95  F022         	goto	l8122
  6539  004500                     l8116:
  6540  004500  90D8               	bcf	status,0,c
  6541  004502  3618               	rlcf	___flmul@prod^0,f,c
  6542  004504  3619               	rlcf	(___flmul@prod+1)^0,f,c
  6543  004506  361A               	rlcf	(___flmul@prod+2)^0,f,c
  6544  004508  361B               	rlcf	(___flmul@prod+3)^0,f,c
  6545  00450A  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6546  00450C  EF8A  F022         	goto	u6751
  6547  004510  EF8C  F022         	goto	u6750
  6548  004514                     u6751:
  6549  004514  EF8D  F022         	goto	l1354
  6550  004518                     u6750:
  6551  004518  8018               	bsf	___flmul@prod^0,0,c
  6552  00451A                     l1354:
  6553  00451A  90D8               	bcf	status,0,c
  6554  00451C  3613               	rlcf	___flmul@grs^0,f,c
  6555  00451E  3614               	rlcf	(___flmul@grs+1)^0,f,c
  6556  004520  3615               	rlcf	(___flmul@grs+2)^0,f,c
  6557  004522  3616               	rlcf	(___flmul@grs+3)^0,f,c
  6558  004524  061C               	decf	___flmul@temp^0,f,c
  6559  004526  A0D8               	btfss	status,0,c
  6560  004528  061D               	decf	(___flmul@temp+1)^0,f,c
  6561  00452A                     l8122:
  6562  00452A  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  6563  00452C  EF9A  F022         	goto	u6761
  6564  004530  EF9C  F022         	goto	u6760
  6565  004534                     u6761:
  6566  004534  EF80  F022         	goto	l8116
  6567  004538                     u6760:
  6568  004538  0E00               	movlw	0
  6569  00453A  6E12               	movwf	___flmul@aexp^0,c
  6570  00453C  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6571  00453E  EFA3  F022         	goto	u6771
  6572  004542  EFA5  F022         	goto	u6770
  6573  004546                     u6771:
  6574  004546  EFC9  F022         	goto	l1356
  6575  00454A                     u6770:
  6576  00454A  0EFF               	movlw	255
  6577  00454C  1413               	andwf	___flmul@grs^0,w,c
  6578  00454E  6E0D               	movwf	??___flmul^0,c
  6579  004550  0EFF               	movlw	255
  6580  004552  1414               	andwf	(___flmul@grs+1)^0,w,c
  6581  004554  6E0E               	movwf	(??___flmul+1)^0,c
  6582  004556  0EFF               	movlw	255
  6583  004558  1415               	andwf	(___flmul@grs+2)^0,w,c
  6584  00455A  6E0F               	movwf	(??___flmul+2)^0,c
  6585  00455C  0E7F               	movlw	127
  6586  00455E  1416               	andwf	(___flmul@grs+3)^0,w,c
  6587  004560  6E10               	movwf	(??___flmul+3)^0,c
  6588  004562  500D               	movf	??___flmul^0,w,c
  6589  004564  100E               	iorwf	(??___flmul+1)^0,w,c
  6590  004566  100F               	iorwf	(??___flmul+2)^0,w,c
  6591  004568  1010               	iorwf	(??___flmul+3)^0,w,c
  6592  00456A  B4D8               	btfsc	status,2,c
  6593  00456C  EFBA  F022         	goto	u6781
  6594  004570  EFBC  F022         	goto	u6780
  6595  004574                     u6781:
  6596  004574  EFC0  F022         	goto	l1357
  6597  004578                     u6780:
  6598  004578                     l8130:
  6599  004578  0E01               	movlw	1
  6600  00457A  6E12               	movwf	___flmul@aexp^0,c
  6601  00457C  EFC9  F022         	goto	l1356
  6602  004580                     l1357:
  6603  004580  A018               	btfss	___flmul@prod^0,0,c
  6604  004582  EFC5  F022         	goto	u6791
  6605  004586  EFC7  F022         	goto	u6790
  6606  00458A                     u6791:
  6607  00458A  EFC9  F022         	goto	l1356
  6608  00458E                     u6790:
  6609  00458E  EFBC  F022         	goto	l8130
  6610  004592                     l1356:
  6611  004592  5012               	movf	___flmul@aexp^0,w,c
  6612  004594  B4D8               	btfsc	status,2,c
  6613  004596  EFCF  F022         	goto	u6801
  6614  00459A  EFD1  F022         	goto	u6800
  6615  00459E                     u6801:
  6616  00459E  EFF5  F022         	goto	l8142
  6617  0045A2                     u6800:
  6618  0045A2  0E01               	movlw	1
  6619  0045A4  2618               	addwf	___flmul@prod^0,f,c
  6620  0045A6  0E00               	movlw	0
  6621  0045A8  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6622  0045AA  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6623  0045AC  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6624  0045AE  A01B               	btfss	(___flmul@prod+3)^0,0,c
  6625  0045B0  EFDC  F022         	goto	u6811
  6626  0045B4  EFDE  F022         	goto	u6810
  6627  0045B8                     u6811:
  6628  0045B8  EFF5  F022         	goto	l8142
  6629  0045BC                     u6810:
  6630  0045BC  C018  F00D         	movff	___flmul@prod,??___flmul
  6631  0045C0  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  6632  0045C4  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  6633  0045C8  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  6634  0045CC  3410               	rlcf	(??___flmul+3)^0,w,c
  6635  0045CE  3210               	rrcf	(??___flmul+3)^0,f,c
  6636  0045D0  320F               	rrcf	(??___flmul+2)^0,f,c
  6637  0045D2  320E               	rrcf	(??___flmul+1)^0,f,c
  6638  0045D4  320D               	rrcf	??___flmul^0,f,c
  6639  0045D6  C00D  F018         	movff	??___flmul,___flmul@prod
  6640  0045DA  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  6641  0045DE  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  6642  0045E2  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  6643  0045E6  4A1C               	infsnz	___flmul@temp^0,f,c
  6644  0045E8  2A1D               	incf	(___flmul@temp+1)^0,f,c
  6645  0045EA                     l8142:
  6646  0045EA  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  6647  0045EC  EF00  F023         	goto	u6821
  6648  0045F0  501D               	movf	(___flmul@temp+1)^0,w,c
  6649  0045F2  E108               	bnz	u6820
  6650  0045F4  281C               	incf	___flmul@temp^0,w,c
  6651  0045F6  A0D8               	btfss	status,0,c
  6652  0045F8  EF00  F023         	goto	u6821
  6653  0045FC  EF02  F023         	goto	u6820
  6654  004600                     u6821:
  6655  004600  EF0C  F023         	goto	l8146
  6656  004604                     u6820:
  6657  004604  0E00               	movlw	0
  6658  004606  6E18               	movwf	___flmul@prod^0,c
  6659  004608  0E00               	movlw	0
  6660  00460A  6E19               	movwf	(___flmul@prod+1)^0,c
  6661  00460C  0E80               	movlw	128
  6662  00460E  6E1A               	movwf	(___flmul@prod+2)^0,c
  6663  004610  0E7F               	movlw	127
  6664  004612  6E1B               	movwf	(___flmul@prod+3)^0,c
  6665  004614  EF3A  F023         	goto	l8158
  6666  004618                     l8146:
  6667  004618  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  6668  00461A  EF19  F023         	goto	u6830
  6669  00461E  501D               	movf	(___flmul@temp+1)^0,w,c
  6670  004620  E106               	bnz	u6831
  6671  004622  041C               	decf	___flmul@temp^0,w,c
  6672  004624  B0D8               	btfsc	status,0,c
  6673  004626  EF17  F023         	goto	u6831
  6674  00462A  EF19  F023         	goto	u6830
  6675  00462E                     u6831:
  6676  00462E  EF25  F023         	goto	l1364
  6677  004632                     u6830:
  6678  004632  0E00               	movlw	0
  6679  004634  6E18               	movwf	___flmul@prod^0,c
  6680  004636  0E00               	movlw	0
  6681  004638  6E19               	movwf	(___flmul@prod+1)^0,c
  6682  00463A  0E00               	movlw	0
  6683  00463C  6E1A               	movwf	(___flmul@prod+2)^0,c
  6684  00463E  0E00               	movlw	0
  6685  004640  6E1B               	movwf	(___flmul@prod+3)^0,c
  6686  004642  0E00               	movlw	0
  6687  004644  6E11               	movwf	___flmul@sign^0,c
  6688  004646  EF3A  F023         	goto	l8158
  6689  00464A                     l1364:
  6690  00464A  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  6691  00464E  0EFF               	movlw	255
  6692  004650  1618               	andwf	___flmul@prod^0,f,c
  6693  004652  0EFF               	movlw	255
  6694  004654  1619               	andwf	(___flmul@prod+1)^0,f,c
  6695  004656  0E7F               	movlw	127
  6696  004658  161A               	andwf	(___flmul@prod+2)^0,f,c
  6697  00465A  0E00               	movlw	0
  6698  00465C  161B               	andwf	(___flmul@prod+3)^0,f,c
  6699  00465E  A017               	btfss	___flmul@bexp^0,0,c
  6700  004660  EF34  F023         	goto	u6841
  6701  004664  EF36  F023         	goto	u6840
  6702  004668                     u6841:
  6703  004668  EF37  F023         	goto	l8156
  6704  00466C                     u6840:
  6705  00466C  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  6706  00466E                     l8156:
  6707  00466E  90D8               	bcf	status,0,c
  6708  004670  3017               	rrcf	___flmul@bexp^0,w,c
  6709  004672  6E1B               	movwf	(___flmul@prod+3)^0,c
  6710  004674                     l8158:
  6711  004674  5011               	movf	___flmul@sign^0,w,c
  6712  004676  121B               	iorwf	(___flmul@prod+3)^0,f,c
  6713  004678  C018  F005         	movff	___flmul@prod,?___flmul
  6714  00467C  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  6715  004680  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  6716  004684  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  6717  004688                     l1351:
  6718  004688  0012               	return		;funcret
  6719  00468A                     __end_of___flmul:
  6720                           	callstack 0
  6721                           
  6722 ;; *************** function ___flge *****************
  6723 ;; Defined at:
  6724 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  ff1             4   29[COMRAM] unsigned char 
  6727 ;;  ff2             4   33[COMRAM] unsigned char 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;		None               void
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6739 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;Total ram usage:       12 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; Hardware stack levels required when called: 4
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_main
  6750 ;;		_efgtoa
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text22
  6755  005494                     __ptext22:
  6756                           	callstack 0
  6757  005494                     ___flge:
  6758                           	callstack 22
  6759  005494  0E00               	movlw	0
  6760  005496  141E               	andwf	___flge@ff1^0,w,c
  6761  005498  6E26               	movwf	??___flge^0,c
  6762  00549A  0E00               	movlw	0
  6763  00549C  141F               	andwf	(___flge@ff1+1)^0,w,c
  6764  00549E  6E27               	movwf	(??___flge+1)^0,c
  6765  0054A0  0E80               	movlw	128
  6766  0054A2  1420               	andwf	(___flge@ff1+2)^0,w,c
  6767  0054A4  6E28               	movwf	(??___flge+2)^0,c
  6768  0054A6  0E7F               	movlw	127
  6769  0054A8  1421               	andwf	(___flge@ff1+3)^0,w,c
  6770  0054AA  6E29               	movwf	(??___flge+3)^0,c
  6771  0054AC  5026               	movf	??___flge^0,w,c
  6772  0054AE  1027               	iorwf	(??___flge+1)^0,w,c
  6773  0054B0  1028               	iorwf	(??___flge+2)^0,w,c
  6774  0054B2  1029               	iorwf	(??___flge+3)^0,w,c
  6775  0054B4  A4D8               	btfss	status,2,c
  6776  0054B6  EF5F  F02A         	goto	u7001
  6777  0054BA  EF61  F02A         	goto	u7000
  6778  0054BE                     u7001:
  6779  0054BE  EF69  F02A         	goto	l8270
  6780  0054C2                     u7000:
  6781  0054C2  0E00               	movlw	0
  6782  0054C4  6E1E               	movwf	___flge@ff1^0,c
  6783  0054C6  0E00               	movlw	0
  6784  0054C8  6E1F               	movwf	(___flge@ff1+1)^0,c
  6785  0054CA  0E00               	movlw	0
  6786  0054CC  6E20               	movwf	(___flge@ff1+2)^0,c
  6787  0054CE  0E00               	movlw	0
  6788  0054D0  6E21               	movwf	(___flge@ff1+3)^0,c
  6789  0054D2                     l8270:
  6790  0054D2  0E00               	movlw	0
  6791  0054D4  1422               	andwf	___flge@ff2^0,w,c
  6792  0054D6  6E26               	movwf	??___flge^0,c
  6793  0054D8  0E00               	movlw	0
  6794  0054DA  1423               	andwf	(___flge@ff2+1)^0,w,c
  6795  0054DC  6E27               	movwf	(??___flge+1)^0,c
  6796  0054DE  0E80               	movlw	128
  6797  0054E0  1424               	andwf	(___flge@ff2+2)^0,w,c
  6798  0054E2  6E28               	movwf	(??___flge+2)^0,c
  6799  0054E4  0E7F               	movlw	127
  6800  0054E6  1425               	andwf	(___flge@ff2+3)^0,w,c
  6801  0054E8  6E29               	movwf	(??___flge+3)^0,c
  6802  0054EA  5026               	movf	??___flge^0,w,c
  6803  0054EC  1027               	iorwf	(??___flge+1)^0,w,c
  6804  0054EE  1028               	iorwf	(??___flge+2)^0,w,c
  6805  0054F0  1029               	iorwf	(??___flge+3)^0,w,c
  6806  0054F2  A4D8               	btfss	status,2,c
  6807  0054F4  EF7E  F02A         	goto	u7011
  6808  0054F8  EF80  F02A         	goto	u7010
  6809  0054FC                     u7011:
  6810  0054FC  EF88  F02A         	goto	l8274
  6811  005500                     u7010:
  6812  005500  0E00               	movlw	0
  6813  005502  6E22               	movwf	___flge@ff2^0,c
  6814  005504  0E00               	movlw	0
  6815  005506  6E23               	movwf	(___flge@ff2+1)^0,c
  6816  005508  0E00               	movlw	0
  6817  00550A  6E24               	movwf	(___flge@ff2+2)^0,c
  6818  00550C  0E00               	movlw	0
  6819  00550E  6E25               	movwf	(___flge@ff2+3)^0,c
  6820  005510                     l8274:
  6821  005510  AE21               	btfss	(___flge@ff1+3)^0,7,c
  6822  005512  EF8D  F02A         	goto	u7021
  6823  005516  EF8F  F02A         	goto	u7020
  6824  00551A                     u7021:
  6825  00551A  EF98  F02A         	goto	l8278
  6826  00551E                     u7020:
  6827  00551E  6C1E               	negf	___flge@ff1^0,c
  6828  005520  1E1F               	comf	(___flge@ff1+1)^0,f,c
  6829  005522  B0D8               	btfsc	status,0,c
  6830  005524  2A1F               	incf	(___flge@ff1+1)^0,f,c
  6831  005526  1E20               	comf	(___flge@ff1+2)^0,f,c
  6832  005528  B0D8               	btfsc	status,0,c
  6833  00552A  2A20               	incf	(___flge@ff1+2)^0,f,c
  6834  00552C  0E80               	movlw	128
  6835  00552E  5621               	subfwb	(___flge@ff1+3)^0,f,c
  6836  005530                     l8278:
  6837  005530  AE25               	btfss	(___flge@ff2+3)^0,7,c
  6838  005532  EF9D  F02A         	goto	u7031
  6839  005536  EF9F  F02A         	goto	u7030
  6840  00553A                     u7031:
  6841  00553A  EFA8  F02A         	goto	l998
  6842  00553E                     u7030:
  6843  00553E  6C22               	negf	___flge@ff2^0,c
  6844  005540  1E23               	comf	(___flge@ff2+1)^0,f,c
  6845  005542  B0D8               	btfsc	status,0,c
  6846  005544  2A23               	incf	(___flge@ff2+1)^0,f,c
  6847  005546  1E24               	comf	(___flge@ff2+2)^0,f,c
  6848  005548  B0D8               	btfsc	status,0,c
  6849  00554A  2A24               	incf	(___flge@ff2+2)^0,f,c
  6850  00554C  0E80               	movlw	128
  6851  00554E  5625               	subfwb	(___flge@ff2+3)^0,f,c
  6852  005550                     l998:
  6853  005550  0E00               	movlw	0
  6854  005552  1A1E               	xorwf	___flge@ff1^0,f,c
  6855  005554  0E00               	movlw	0
  6856  005556  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  6857  005558  0E00               	movlw	0
  6858  00555A  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  6859  00555C  0E80               	movlw	128
  6860  00555E  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  6861  005560  0E00               	movlw	0
  6862  005562  1A22               	xorwf	___flge@ff2^0,f,c
  6863  005564  0E00               	movlw	0
  6864  005566  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  6865  005568  0E00               	movlw	0
  6866  00556A  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  6867  00556C  0E80               	movlw	128
  6868  00556E  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  6869  005570  5022               	movf	___flge@ff2^0,w,c
  6870  005572  5C1E               	subwf	___flge@ff1^0,w,c
  6871  005574  5023               	movf	(___flge@ff2+1)^0,w,c
  6872  005576  581F               	subwfb	(___flge@ff1+1)^0,w,c
  6873  005578  5024               	movf	(___flge@ff2+2)^0,w,c
  6874  00557A  5820               	subwfb	(___flge@ff1+2)^0,w,c
  6875  00557C  5025               	movf	(___flge@ff2+3)^0,w,c
  6876  00557E  5821               	subwfb	(___flge@ff1+3)^0,w,c
  6877  005580  B0D8               	btfsc	status,0,c
  6878  005582  EFC5  F02A         	goto	u7041
  6879  005586  EFC7  F02A         	goto	u7040
  6880  00558A                     u7041:
  6881  00558A  EFCA  F02A         	goto	l8284
  6882  00558E                     u7040:
  6883  00558E  90D8               	bcf	status,0,c
  6884  005590  EFCB  F02A         	goto	l1003
  6885  005594                     l8284:
  6886  005594  80D8               	bsf	status,0,c
  6887  005596                     l1003:
  6888  005596  0012               	return		;funcret
  6889  005598                     __end_of___flge:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function ___fleq *****************
  6893 ;; Defined at:
  6894 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  ff1             4    4[COMRAM] unsigned char 
  6897 ;;  ff2             4    8[COMRAM] unsigned char 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;		None               void
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6909 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;Total ram usage:       12 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; Hardware stack levels required when called: 4
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_efgtoa
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text23
  6924  005B30                     __ptext23:
  6925                           	callstack 0
  6926  005B30                     ___fleq:
  6927                           	callstack 22
  6928  005B30  0E00               	movlw	0
  6929  005B32  1405               	andwf	___fleq@ff1^0,w,c
  6930  005B34  6E0D               	movwf	??___fleq^0,c
  6931  005B36  0E00               	movlw	0
  6932  005B38  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6933  005B3A  6E0E               	movwf	(??___fleq+1)^0,c
  6934  005B3C  0E80               	movlw	128
  6935  005B3E  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6936  005B40  6E0F               	movwf	(??___fleq+2)^0,c
  6937  005B42  0E7F               	movlw	127
  6938  005B44  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6939  005B46  6E10               	movwf	(??___fleq+3)^0,c
  6940  005B48  500D               	movf	??___fleq^0,w,c
  6941  005B4A  100E               	iorwf	(??___fleq+1)^0,w,c
  6942  005B4C  100F               	iorwf	(??___fleq+2)^0,w,c
  6943  005B4E  1010               	iorwf	(??___fleq+3)^0,w,c
  6944  005B50  A4D8               	btfss	status,2,c
  6945  005B52  EFAD  F02D         	goto	u6971
  6946  005B56  EFAF  F02D         	goto	u6970
  6947  005B5A                     u6971:
  6948  005B5A  EFB7  F02D         	goto	l8254
  6949  005B5E                     u6970:
  6950  005B5E  0E00               	movlw	0
  6951  005B60  6E05               	movwf	___fleq@ff1^0,c
  6952  005B62  0E00               	movlw	0
  6953  005B64  6E06               	movwf	(___fleq@ff1+1)^0,c
  6954  005B66  0E00               	movlw	0
  6955  005B68  6E07               	movwf	(___fleq@ff1+2)^0,c
  6956  005B6A  0E00               	movlw	0
  6957  005B6C  6E08               	movwf	(___fleq@ff1+3)^0,c
  6958  005B6E                     l8254:
  6959  005B6E  0E00               	movlw	0
  6960  005B70  1409               	andwf	___fleq@ff2^0,w,c
  6961  005B72  6E0D               	movwf	??___fleq^0,c
  6962  005B74  0E00               	movlw	0
  6963  005B76  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6964  005B78  6E0E               	movwf	(??___fleq+1)^0,c
  6965  005B7A  0E80               	movlw	128
  6966  005B7C  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6967  005B7E  6E0F               	movwf	(??___fleq+2)^0,c
  6968  005B80  0E7F               	movlw	127
  6969  005B82  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6970  005B84  6E10               	movwf	(??___fleq+3)^0,c
  6971  005B86  500D               	movf	??___fleq^0,w,c
  6972  005B88  100E               	iorwf	(??___fleq+1)^0,w,c
  6973  005B8A  100F               	iorwf	(??___fleq+2)^0,w,c
  6974  005B8C  1010               	iorwf	(??___fleq+3)^0,w,c
  6975  005B8E  A4D8               	btfss	status,2,c
  6976  005B90  EFCC  F02D         	goto	u6981
  6977  005B94  EFCE  F02D         	goto	u6980
  6978  005B98                     u6981:
  6979  005B98  EFD6  F02D         	goto	l8258
  6980  005B9C                     u6980:
  6981  005B9C  0E00               	movlw	0
  6982  005B9E  6E09               	movwf	___fleq@ff2^0,c
  6983  005BA0  0E00               	movlw	0
  6984  005BA2  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6985  005BA4  0E00               	movlw	0
  6986  005BA6  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6987  005BA8  0E00               	movlw	0
  6988  005BAA  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6989  005BAC                     l8258:
  6990  005BAC  5009               	movf	___fleq@ff2^0,w,c
  6991  005BAE  1805               	xorwf	___fleq@ff1^0,w,c
  6992  005BB0  E10F               	bnz	u6990
  6993  005BB2  500A               	movf	(___fleq@ff2+1)^0,w,c
  6994  005BB4  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6995  005BB6  E10C               	bnz	u6990
  6996  005BB8  500B               	movf	(___fleq@ff2+2)^0,w,c
  6997  005BBA  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6998  005BBC  E109               	bnz	u6990
  6999  005BBE  500C               	movf	(___fleq@ff2+3)^0,w,c
  7000  005BC0  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  7001  005BC2  B4D8               	btfsc	status,2,c
  7002  005BC4  EFE6  F02D         	goto	u6991
  7003  005BC8  EFE8  F02D         	goto	u6990
  7004  005BCC                     u6991:
  7005  005BCC  EFEB  F02D         	goto	l8262
  7006  005BD0                     u6990:
  7007  005BD0  90D8               	bcf	status,0,c
  7008  005BD2  EFEC  F02D         	goto	l992
  7009  005BD6                     l8262:
  7010  005BD6  80D8               	bsf	status,0,c
  7011  005BD8                     l992:
  7012  005BD8  0012               	return		;funcret
  7013  005BDA                     __end_of___fleq:
  7014                           	callstack 0
  7015                           
  7016 ;; *************** function ___fldiv *****************
  7017 ;; Defined at:
  7018 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  b               4    4[COMRAM] unsigned char 
  7021 ;;  a               4    8[COMRAM] unsigned char 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  grs             4   23[COMRAM] unsigned long 
  7024 ;;  rem             4   16[COMRAM] unsigned long 
  7025 ;;  new_exp         2   21[COMRAM] short 
  7026 ;;  aexp            1   28[COMRAM] unsigned char 
  7027 ;;  bexp            1   27[COMRAM] unsigned char 
  7028 ;;  sign            1   20[COMRAM] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  4    4[COMRAM] unsigned char 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7038 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;Total ram usage:       25 bytes
  7043 ;; Hardware stack levels used: 1
  7044 ;; Hardware stack levels required when called: 4
  7045 ;; This function calls:
  7046 ;;		Nothing
  7047 ;; This function is called by:
  7048 ;;		_main
  7049 ;;		_efgtoa
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           	psect	text24
  7054  00468A                     __ptext24:
  7055                           	callstack 0
  7056  00468A                     ___fldiv:
  7057                           	callstack 22
  7058  00468A  5008               	movf	(___fldiv@b+3)^0,w,c
  7059  00468C  0B80               	andlw	128
  7060  00468E  6E15               	movwf	___fldiv@sign^0,c
  7061  004690  5008               	movf	(___fldiv@b+3)^0,w,c
  7062  004692  2408               	addwf	(___fldiv@b+3)^0,w,c
  7063  004694  6E1C               	movwf	___fldiv@bexp^0,c
  7064  004696  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7065  004698  EF50  F023         	goto	u6431
  7066  00469C  EF52  F023         	goto	u6430
  7067  0046A0                     u6431:
  7068  0046A0  EF53  F023         	goto	l7902
  7069  0046A4                     u6430:
  7070  0046A4  801C               	bsf	___fldiv@bexp^0,0,c
  7071  0046A6                     l7902:
  7072  0046A6  501C               	movf	___fldiv@bexp^0,w,c
  7073  0046A8  B4D8               	btfsc	status,2,c
  7074  0046AA  EF59  F023         	goto	u6441
  7075  0046AE  EF5B  F023         	goto	u6440
  7076  0046B2                     u6441:
  7077  0046B2  EF70  F023         	goto	l7912
  7078  0046B6                     u6440:
  7079  0046B6  281C               	incf	___fldiv@bexp^0,w,c
  7080  0046B8  A4D8               	btfss	status,2,c
  7081  0046BA  EF61  F023         	goto	u6451
  7082  0046BE  EF63  F023         	goto	u6450
  7083  0046C2                     u6451:
  7084  0046C2  EF6B  F023         	goto	l7908
  7085  0046C6                     u6450:
  7086  0046C6  0E00               	movlw	0
  7087  0046C8  6E05               	movwf	___fldiv@b^0,c
  7088  0046CA  0E00               	movlw	0
  7089  0046CC  6E06               	movwf	(___fldiv@b+1)^0,c
  7090  0046CE  0E00               	movlw	0
  7091  0046D0  6E07               	movwf	(___fldiv@b+2)^0,c
  7092  0046D2  0E00               	movlw	0
  7093  0046D4  6E08               	movwf	(___fldiv@b+3)^0,c
  7094  0046D6                     l7908:
  7095  0046D6  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7096  0046D8  0E00               	movlw	0
  7097  0046DA  6E08               	movwf	(___fldiv@b+3)^0,c
  7098  0046DC  EF78  F023         	goto	l7914
  7099  0046E0                     l7912:
  7100  0046E0  0E00               	movlw	0
  7101  0046E2  6E05               	movwf	___fldiv@b^0,c
  7102  0046E4  0E00               	movlw	0
  7103  0046E6  6E06               	movwf	(___fldiv@b+1)^0,c
  7104  0046E8  0E00               	movlw	0
  7105  0046EA  6E07               	movwf	(___fldiv@b+2)^0,c
  7106  0046EC  0E00               	movlw	0
  7107  0046EE  6E08               	movwf	(___fldiv@b+3)^0,c
  7108  0046F0                     l7914:
  7109  0046F0  500C               	movf	(___fldiv@a+3)^0,w,c
  7110  0046F2  0B80               	andlw	128
  7111  0046F4  1A15               	xorwf	___fldiv@sign^0,f,c
  7112  0046F6  500C               	movf	(___fldiv@a+3)^0,w,c
  7113  0046F8  240C               	addwf	(___fldiv@a+3)^0,w,c
  7114  0046FA  6E1D               	movwf	___fldiv@aexp^0,c
  7115  0046FC  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  7116  0046FE  EF83  F023         	goto	u6461
  7117  004702  EF85  F023         	goto	u6460
  7118  004706                     u6461:
  7119  004706  EF86  F023         	goto	l7922
  7120  00470A                     u6460:
  7121  00470A  801D               	bsf	___fldiv@aexp^0,0,c
  7122  00470C                     l7922:
  7123  00470C  501D               	movf	___fldiv@aexp^0,w,c
  7124  00470E  B4D8               	btfsc	status,2,c
  7125  004710  EF8C  F023         	goto	u6471
  7126  004714  EF8E  F023         	goto	u6470
  7127  004718                     u6471:
  7128  004718  EFA3  F023         	goto	l7932
  7129  00471C                     u6470:
  7130  00471C  281D               	incf	___fldiv@aexp^0,w,c
  7131  00471E  A4D8               	btfss	status,2,c
  7132  004720  EF94  F023         	goto	u6481
  7133  004724  EF96  F023         	goto	u6480
  7134  004728                     u6481:
  7135  004728  EF9E  F023         	goto	l7928
  7136  00472C                     u6480:
  7137  00472C  0E00               	movlw	0
  7138  00472E  6E09               	movwf	___fldiv@a^0,c
  7139  004730  0E00               	movlw	0
  7140  004732  6E0A               	movwf	(___fldiv@a+1)^0,c
  7141  004734  0E00               	movlw	0
  7142  004736  6E0B               	movwf	(___fldiv@a+2)^0,c
  7143  004738  0E00               	movlw	0
  7144  00473A  6E0C               	movwf	(___fldiv@a+3)^0,c
  7145  00473C                     l7928:
  7146  00473C  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  7147  00473E  0E00               	movlw	0
  7148  004740  6E0C               	movwf	(___fldiv@a+3)^0,c
  7149  004742  EFAB  F023         	goto	l7934
  7150  004746                     l7932:
  7151  004746  0E00               	movlw	0
  7152  004748  6E09               	movwf	___fldiv@a^0,c
  7153  00474A  0E00               	movlw	0
  7154  00474C  6E0A               	movwf	(___fldiv@a+1)^0,c
  7155  00474E  0E00               	movlw	0
  7156  004750  6E0B               	movwf	(___fldiv@a+2)^0,c
  7157  004752  0E00               	movlw	0
  7158  004754  6E0C               	movwf	(___fldiv@a+3)^0,c
  7159  004756                     l7934:
  7160  004756  5009               	movf	___fldiv@a^0,w,c
  7161  004758  100A               	iorwf	(___fldiv@a+1)^0,w,c
  7162  00475A  100B               	iorwf	(___fldiv@a+2)^0,w,c
  7163  00475C  100C               	iorwf	(___fldiv@a+3)^0,w,c
  7164  00475E  A4D8               	btfss	status,2,c
  7165  004760  EFB4  F023         	goto	u6491
  7166  004764  EFB6  F023         	goto	u6490
  7167  004768                     u6491:
  7168  004768  EFCE  F023         	goto	l7946
  7169  00476C                     u6490:
  7170  00476C  0E00               	movlw	0
  7171  00476E  6E05               	movwf	___fldiv@b^0,c
  7172  004770  0E00               	movlw	0
  7173  004772  6E06               	movwf	(___fldiv@b+1)^0,c
  7174  004774  0E00               	movlw	0
  7175  004776  6E07               	movwf	(___fldiv@b+2)^0,c
  7176  004778  0E00               	movlw	0
  7177  00477A  6E08               	movwf	(___fldiv@b+3)^0,c
  7178  00477C  0E80               	movlw	128
  7179  00477E  1207               	iorwf	(___fldiv@b+2)^0,f,c
  7180  004780  0E7F               	movlw	127
  7181  004782  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7182  004784                     l7940:
  7183  004784  5015               	movf	___fldiv@sign^0,w,c
  7184  004786  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7185  004788  C005  F005         	movff	___fldiv@b,?___fldiv
  7186  00478C  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  7187  004790  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  7188  004794  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  7189  004798  EF11  F025         	goto	l1315
  7190  00479C                     l7946:
  7191  00479C  501C               	movf	___fldiv@bexp^0,w,c
  7192  00479E  A4D8               	btfss	status,2,c
  7193  0047A0  EFD4  F023         	goto	u6501
  7194  0047A4  EFD6  F023         	goto	u6500
  7195  0047A8                     u6501:
  7196  0047A8  EFE0  F023         	goto	l7954
  7197  0047AC                     u6500:
  7198  0047AC  0E00               	movlw	0
  7199  0047AE  6E05               	movwf	?___fldiv^0,c
  7200  0047B0  0E00               	movlw	0
  7201  0047B2  6E06               	movwf	(?___fldiv+1)^0,c
  7202  0047B4  0E00               	movlw	0
  7203  0047B6  6E07               	movwf	(?___fldiv+2)^0,c
  7204  0047B8  0E00               	movlw	0
  7205  0047BA  6E08               	movwf	(?___fldiv+3)^0,c
  7206  0047BC  EF11  F025         	goto	l1315
  7207  0047C0                     l7954:
  7208  0047C0  501D               	movf	___fldiv@aexp^0,w,c
  7209  0047C2  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  7210  0047C6  6A0E               	clrf	(??___fldiv+1)^0,c
  7211  0047C8  5E0D               	subwf	??___fldiv^0,f,c
  7212  0047CA  0E00               	movlw	0
  7213  0047CC  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  7214  0047CE  0E7F               	movlw	127
  7215  0047D0  240D               	addwf	??___fldiv^0,w,c
  7216  0047D2  6E16               	movwf	___fldiv@new_exp^0,c
  7217  0047D4  0E00               	movlw	0
  7218  0047D6  200E               	addwfc	(??___fldiv+1)^0,w,c
  7219  0047D8  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7220  0047DA  C005  F011         	movff	___fldiv@b,___fldiv@rem
  7221  0047DE  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  7222  0047E2  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  7223  0047E6  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  7224  0047EA  0E00               	movlw	0
  7225  0047EC  6E05               	movwf	___fldiv@b^0,c
  7226  0047EE  0E00               	movlw	0
  7227  0047F0  6E06               	movwf	(___fldiv@b+1)^0,c
  7228  0047F2  0E00               	movlw	0
  7229  0047F4  6E07               	movwf	(___fldiv@b+2)^0,c
  7230  0047F6  0E00               	movlw	0
  7231  0047F8  6E08               	movwf	(___fldiv@b+3)^0,c
  7232  0047FA  0E00               	movlw	0
  7233  0047FC  6E18               	movwf	___fldiv@grs^0,c
  7234  0047FE  0E00               	movlw	0
  7235  004800  6E19               	movwf	(___fldiv@grs+1)^0,c
  7236  004802  0E00               	movlw	0
  7237  004804  6E1A               	movwf	(___fldiv@grs+2)^0,c
  7238  004806  0E00               	movlw	0
  7239  004808  6E1B               	movwf	(___fldiv@grs+3)^0,c
  7240  00480A  0E00               	movlw	0
  7241  00480C  6E1D               	movwf	___fldiv@aexp^0,c
  7242  00480E  EF41  F024         	goto	l1317
  7243  004812                     l7964:
  7244  004812  501D               	movf	___fldiv@aexp^0,w,c
  7245  004814  B4D8               	btfsc	status,2,c
  7246  004816  EF0F  F024         	goto	u6511
  7247  00481A  EF11  F024         	goto	u6510
  7248  00481E                     u6511:
  7249  00481E  EF28  F024         	goto	l7972
  7250  004822                     u6510:
  7251  004822  90D8               	bcf	status,0,c
  7252  004824  3611               	rlcf	___fldiv@rem^0,f,c
  7253  004826  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  7254  004828  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  7255  00482A  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  7256  00482C  90D8               	bcf	status,0,c
  7257  00482E  3605               	rlcf	___fldiv@b^0,f,c
  7258  004830  3606               	rlcf	(___fldiv@b+1)^0,f,c
  7259  004832  3607               	rlcf	(___fldiv@b+2)^0,f,c
  7260  004834  3608               	rlcf	(___fldiv@b+3)^0,f,c
  7261  004836  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7262  004838  EF20  F024         	goto	u6521
  7263  00483C  EF22  F024         	goto	u6520
  7264  004840                     u6521:
  7265  004840  EF23  F024         	goto	l1320
  7266  004844                     u6520:
  7267  004844  8005               	bsf	___fldiv@b^0,0,c
  7268  004846                     l1320:
  7269  004846  90D8               	bcf	status,0,c
  7270  004848  3618               	rlcf	___fldiv@grs^0,f,c
  7271  00484A  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  7272  00484C  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  7273  00484E  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  7274  004850                     l7972:
  7275  004850  5009               	movf	___fldiv@a^0,w,c
  7276  004852  5C11               	subwf	___fldiv@rem^0,w,c
  7277  004854  500A               	movf	(___fldiv@a+1)^0,w,c
  7278  004856  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  7279  004858  500B               	movf	(___fldiv@a+2)^0,w,c
  7280  00485A  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  7281  00485C  500C               	movf	(___fldiv@a+3)^0,w,c
  7282  00485E  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  7283  004860  A0D8               	btfss	status,0,c
  7284  004862  EF35  F024         	goto	u6531
  7285  004866  EF37  F024         	goto	u6530
  7286  00486A                     u6531:
  7287  00486A  EF40  F024         	goto	l7978
  7288  00486E                     u6530:
  7289  00486E  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  7290  004870  5009               	movf	___fldiv@a^0,w,c
  7291  004872  5E11               	subwf	___fldiv@rem^0,f,c
  7292  004874  500A               	movf	(___fldiv@a+1)^0,w,c
  7293  004876  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  7294  004878  500B               	movf	(___fldiv@a+2)^0,w,c
  7295  00487A  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  7296  00487C  500C               	movf	(___fldiv@a+3)^0,w,c
  7297  00487E  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  7298  004880                     l7978:
  7299  004880  2A1D               	incf	___fldiv@aexp^0,f,c
  7300  004882                     l1317:
  7301  004882  0E19               	movlw	25
  7302  004884  641D               	cpfsgt	___fldiv@aexp^0,c
  7303  004886  EF47  F024         	goto	u6541
  7304  00488A  EF49  F024         	goto	u6540
  7305  00488E                     u6541:
  7306  00488E  EF09  F024         	goto	l7964
  7307  004892                     u6540:
  7308  004892  5011               	movf	___fldiv@rem^0,w,c
  7309  004894  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  7310  004896  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  7311  004898  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  7312  00489A  B4D8               	btfsc	status,2,c
  7313  00489C  EF52  F024         	goto	u6551
  7314  0048A0  EF54  F024         	goto	u6550
  7315  0048A4                     u6551:
  7316  0048A4  EF6C  F024         	goto	l7990
  7317  0048A8                     u6550:
  7318  0048A8  8018               	bsf	___fldiv@grs^0,0,c
  7319  0048AA  EF6C  F024         	goto	l7990
  7320  0048AE                     l7984:
  7321  0048AE  90D8               	bcf	status,0,c
  7322  0048B0  3605               	rlcf	___fldiv@b^0,f,c
  7323  0048B2  3606               	rlcf	(___fldiv@b+1)^0,f,c
  7324  0048B4  3607               	rlcf	(___fldiv@b+2)^0,f,c
  7325  0048B6  3608               	rlcf	(___fldiv@b+3)^0,f,c
  7326  0048B8  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7327  0048BA  EF61  F024         	goto	u6561
  7328  0048BE  EF63  F024         	goto	u6560
  7329  0048C2                     u6561:
  7330  0048C2  EF64  F024         	goto	l1326
  7331  0048C6                     u6560:
  7332  0048C6  8005               	bsf	___fldiv@b^0,0,c
  7333  0048C8                     l1326:
  7334  0048C8  90D8               	bcf	status,0,c
  7335  0048CA  3618               	rlcf	___fldiv@grs^0,f,c
  7336  0048CC  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  7337  0048CE  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  7338  0048D0  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  7339  0048D2  0616               	decf	___fldiv@new_exp^0,f,c
  7340  0048D4  A0D8               	btfss	status,0,c
  7341  0048D6  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  7342  0048D8                     l7990:
  7343  0048D8  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7344  0048DA  EF71  F024         	goto	u6571
  7345  0048DE  EF73  F024         	goto	u6570
  7346  0048E2                     u6571:
  7347  0048E2  EF57  F024         	goto	l7984
  7348  0048E6                     u6570:
  7349  0048E6  0E00               	movlw	0
  7350  0048E8  6E1D               	movwf	___fldiv@aexp^0,c
  7351  0048EA  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7352  0048EC  EF7A  F024         	goto	u6581
  7353  0048F0  EF7C  F024         	goto	u6580
  7354  0048F4                     u6581:
  7355  0048F4  EFA0  F024         	goto	l1328
  7356  0048F8                     u6580:
  7357  0048F8  0EFF               	movlw	255
  7358  0048FA  1418               	andwf	___fldiv@grs^0,w,c
  7359  0048FC  6E0D               	movwf	??___fldiv^0,c
  7360  0048FE  0EFF               	movlw	255
  7361  004900  1419               	andwf	(___fldiv@grs+1)^0,w,c
  7362  004902  6E0E               	movwf	(??___fldiv+1)^0,c
  7363  004904  0EFF               	movlw	255
  7364  004906  141A               	andwf	(___fldiv@grs+2)^0,w,c
  7365  004908  6E0F               	movwf	(??___fldiv+2)^0,c
  7366  00490A  0E7F               	movlw	127
  7367  00490C  141B               	andwf	(___fldiv@grs+3)^0,w,c
  7368  00490E  6E10               	movwf	(??___fldiv+3)^0,c
  7369  004910  500D               	movf	??___fldiv^0,w,c
  7370  004912  100E               	iorwf	(??___fldiv+1)^0,w,c
  7371  004914  100F               	iorwf	(??___fldiv+2)^0,w,c
  7372  004916  1010               	iorwf	(??___fldiv+3)^0,w,c
  7373  004918  B4D8               	btfsc	status,2,c
  7374  00491A  EF91  F024         	goto	u6591
  7375  00491E  EF93  F024         	goto	u6590
  7376  004922                     u6591:
  7377  004922  EF97  F024         	goto	l1329
  7378  004926                     u6590:
  7379  004926                     l7998:
  7380  004926  0E01               	movlw	1
  7381  004928  6E1D               	movwf	___fldiv@aexp^0,c
  7382  00492A  EFA0  F024         	goto	l1328
  7383  00492E                     l1329:
  7384  00492E  A005               	btfss	___fldiv@b^0,0,c
  7385  004930  EF9C  F024         	goto	u6601
  7386  004934  EF9E  F024         	goto	u6600
  7387  004938                     u6601:
  7388  004938  EFA0  F024         	goto	l1328
  7389  00493C                     u6600:
  7390  00493C  EF93  F024         	goto	l7998
  7391  004940                     l1328:
  7392  004940  501D               	movf	___fldiv@aexp^0,w,c
  7393  004942  B4D8               	btfsc	status,2,c
  7394  004944  EFA6  F024         	goto	u6611
  7395  004948  EFA8  F024         	goto	u6610
  7396  00494C                     u6611:
  7397  00494C  EFCC  F024         	goto	l8010
  7398  004950                     u6610:
  7399  004950  0E01               	movlw	1
  7400  004952  2605               	addwf	___fldiv@b^0,f,c
  7401  004954  0E00               	movlw	0
  7402  004956  2206               	addwfc	(___fldiv@b+1)^0,f,c
  7403  004958  2207               	addwfc	(___fldiv@b+2)^0,f,c
  7404  00495A  2208               	addwfc	(___fldiv@b+3)^0,f,c
  7405  00495C  A008               	btfss	(___fldiv@b+3)^0,0,c
  7406  00495E  EFB3  F024         	goto	u6621
  7407  004962  EFB5  F024         	goto	u6620
  7408  004966                     u6621:
  7409  004966  EFCC  F024         	goto	l8010
  7410  00496A                     u6620:
  7411  00496A  C005  F00D         	movff	___fldiv@b,??___fldiv
  7412  00496E  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  7413  004972  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  7414  004976  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  7415  00497A  3410               	rlcf	(??___fldiv+3)^0,w,c
  7416  00497C  3210               	rrcf	(??___fldiv+3)^0,f,c
  7417  00497E  320F               	rrcf	(??___fldiv+2)^0,f,c
  7418  004980  320E               	rrcf	(??___fldiv+1)^0,f,c
  7419  004982  320D               	rrcf	??___fldiv^0,f,c
  7420  004984  C00D  F005         	movff	??___fldiv,___fldiv@b
  7421  004988  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  7422  00498C  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  7423  004990  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  7424  004994  4A16               	infsnz	___fldiv@new_exp^0,f,c
  7425  004996  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  7426  004998                     l8010:
  7427  004998  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7428  00499A  EFD7  F024         	goto	u6631
  7429  00499E  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7430  0049A0  E108               	bnz	u6630
  7431  0049A2  2816               	incf	___fldiv@new_exp^0,w,c
  7432  0049A4  A0D8               	btfss	status,0,c
  7433  0049A6  EFD7  F024         	goto	u6631
  7434  0049AA  EFD9  F024         	goto	u6630
  7435  0049AE                     u6631:
  7436  0049AE  EFE4  F024         	goto	l8014
  7437  0049B2                     u6630:
  7438  0049B2  0E00               	movlw	0
  7439  0049B4  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7440  0049B6  6816               	setf	___fldiv@new_exp^0,c
  7441  0049B8  0E00               	movlw	0
  7442  0049BA  6E05               	movwf	___fldiv@b^0,c
  7443  0049BC  0E00               	movlw	0
  7444  0049BE  6E06               	movwf	(___fldiv@b+1)^0,c
  7445  0049C0  0E00               	movlw	0
  7446  0049C2  6E07               	movwf	(___fldiv@b+2)^0,c
  7447  0049C4  0E00               	movlw	0
  7448  0049C6  6E08               	movwf	(___fldiv@b+3)^0,c
  7449  0049C8                     l8014:
  7450  0049C8  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7451  0049CA  EFF1  F024         	goto	u6640
  7452  0049CE  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7453  0049D0  E106               	bnz	u6641
  7454  0049D2  0416               	decf	___fldiv@new_exp^0,w,c
  7455  0049D4  B0D8               	btfsc	status,0,c
  7456  0049D6  EFEF  F024         	goto	u6641
  7457  0049DA  EFF1  F024         	goto	u6640
  7458  0049DE                     u6641:
  7459  0049DE  EFFF  F024         	goto	l8018
  7460  0049E2                     u6640:
  7461  0049E2  0E00               	movlw	0
  7462  0049E4  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7463  0049E6  0E00               	movlw	0
  7464  0049E8  6E16               	movwf	___fldiv@new_exp^0,c
  7465  0049EA  0E00               	movlw	0
  7466  0049EC  6E05               	movwf	___fldiv@b^0,c
  7467  0049EE  0E00               	movlw	0
  7468  0049F0  6E06               	movwf	(___fldiv@b+1)^0,c
  7469  0049F2  0E00               	movlw	0
  7470  0049F4  6E07               	movwf	(___fldiv@b+2)^0,c
  7471  0049F6  0E00               	movlw	0
  7472  0049F8  6E08               	movwf	(___fldiv@b+3)^0,c
  7473  0049FA  0E00               	movlw	0
  7474  0049FC  6E15               	movwf	___fldiv@sign^0,c
  7475  0049FE                     l8018:
  7476  0049FE  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  7477  004A02  A01C               	btfss	___fldiv@bexp^0,0,c
  7478  004A04  EF06  F025         	goto	u6651
  7479  004A08  EF08  F025         	goto	u6650
  7480  004A0C                     u6651:
  7481  004A0C  EF0B  F025         	goto	l8024
  7482  004A10                     u6650:
  7483  004A10  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7484  004A12  EF0C  F025         	goto	l8026
  7485  004A16                     l8024:
  7486  004A16  9E07               	bcf	(___fldiv@b+2)^0,7,c
  7487  004A18                     l8026:
  7488  004A18  90D8               	bcf	status,0,c
  7489  004A1A  301C               	rrcf	___fldiv@bexp^0,w,c
  7490  004A1C  6E08               	movwf	(___fldiv@b+3)^0,c
  7491  004A1E  EFC2  F023         	goto	l7940
  7492  004A22                     l1315:
  7493  004A22  0012               	return		;funcret
  7494  004A24                     __end_of___fldiv:
  7495                           	callstack 0
  7496                           
  7497 ;; *************** function ___awmod *****************
  7498 ;; Defined at:
  7499 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  dividend        2    4[COMRAM] int 
  7502 ;;  divisor         2    6[COMRAM] int 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  sign            1    9[COMRAM] unsigned char 
  7505 ;;  counter         1    8[COMRAM] unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  2    4[COMRAM] int 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7515 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;Total ram usage:        6 bytes
  7520 ;; Hardware stack levels used: 1
  7521 ;; Hardware stack levels required when called: 4
  7522 ;; This function calls:
  7523 ;;		Nothing
  7524 ;; This function is called by:
  7525 ;;		_efgtoa
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           	psect	text25
  7530  005A80                     __ptext25:
  7531                           	callstack 0
  7532  005A80                     ___awmod:
  7533                           	callstack 22
  7534  005A80  0E00               	movlw	0
  7535  005A82  6E0A               	movwf	___awmod@sign^0,c
  7536  005A84  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  7537  005A86  EF49  F02D         	goto	u6910
  7538  005A8A  EF47  F02D         	goto	u6911
  7539  005A8E                     u6911:
  7540  005A8E  EF4F  F02D         	goto	l8222
  7541  005A92                     u6910:
  7542  005A92  6C05               	negf	___awmod@dividend^0,c
  7543  005A94  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7544  005A96  B0D8               	btfsc	status,0,c
  7545  005A98  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7546  005A9A  0E01               	movlw	1
  7547  005A9C  6E0A               	movwf	___awmod@sign^0,c
  7548  005A9E                     l8222:
  7549  005A9E  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  7550  005AA0  EF56  F02D         	goto	u6920
  7551  005AA4  EF54  F02D         	goto	u6921
  7552  005AA8                     u6921:
  7553  005AA8  EF5A  F02D         	goto	l8226
  7554  005AAC                     u6920:
  7555  005AAC  6C07               	negf	___awmod@divisor^0,c
  7556  005AAE  1E08               	comf	(___awmod@divisor+1)^0,f,c
  7557  005AB0  B0D8               	btfsc	status,0,c
  7558  005AB2  2A08               	incf	(___awmod@divisor+1)^0,f,c
  7559  005AB4                     l8226:
  7560  005AB4  5007               	movf	___awmod@divisor^0,w,c
  7561  005AB6  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  7562  005AB8  B4D8               	btfsc	status,2,c
  7563  005ABA  EF61  F02D         	goto	u6931
  7564  005ABE  EF63  F02D         	goto	u6930
  7565  005AC2                     u6931:
  7566  005AC2  EF87  F02D         	goto	l8242
  7567  005AC6                     u6930:
  7568  005AC6  0E01               	movlw	1
  7569  005AC8  6E09               	movwf	___awmod@counter^0,c
  7570  005ACA  EF6B  F02D         	goto	l8232
  7571  005ACE                     l8230:
  7572  005ACE  90D8               	bcf	status,0,c
  7573  005AD0  3607               	rlcf	___awmod@divisor^0,f,c
  7574  005AD2  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  7575  005AD4  2A09               	incf	___awmod@counter^0,f,c
  7576  005AD6                     l8232:
  7577  005AD6  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  7578  005AD8  EF70  F02D         	goto	u6941
  7579  005ADC  EF72  F02D         	goto	u6940
  7580  005AE0                     u6941:
  7581  005AE0  EF67  F02D         	goto	l8230
  7582  005AE4                     u6940:
  7583  005AE4                     l8234:
  7584  005AE4  5007               	movf	___awmod@divisor^0,w,c
  7585  005AE6  5C05               	subwf	___awmod@dividend^0,w,c
  7586  005AE8  5008               	movf	(___awmod@divisor+1)^0,w,c
  7587  005AEA  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  7588  005AEC  A0D8               	btfss	status,0,c
  7589  005AEE  EF7B  F02D         	goto	u6951
  7590  005AF2  EF7D  F02D         	goto	u6950
  7591  005AF6                     u6951:
  7592  005AF6  EF81  F02D         	goto	l8238
  7593  005AFA                     u6950:
  7594  005AFA  5007               	movf	___awmod@divisor^0,w,c
  7595  005AFC  5E05               	subwf	___awmod@dividend^0,f,c
  7596  005AFE  5008               	movf	(___awmod@divisor+1)^0,w,c
  7597  005B00  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  7598  005B02                     l8238:
  7599  005B02  90D8               	bcf	status,0,c
  7600  005B04  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  7601  005B06  3207               	rrcf	___awmod@divisor^0,f,c
  7602  005B08  2E09               	decfsz	___awmod@counter^0,f,c
  7603  005B0A  EF72  F02D         	goto	l8234
  7604  005B0E                     l8242:
  7605  005B0E  500A               	movf	___awmod@sign^0,w,c
  7606  005B10  B4D8               	btfsc	status,2,c
  7607  005B12  EF8D  F02D         	goto	u6961
  7608  005B16  EF8F  F02D         	goto	u6960
  7609  005B1A                     u6961:
  7610  005B1A  EF93  F02D         	goto	l8246
  7611  005B1E                     u6960:
  7612  005B1E  6C05               	negf	___awmod@dividend^0,c
  7613  005B20  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7614  005B22  B0D8               	btfsc	status,0,c
  7615  005B24  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7616  005B26                     l8246:
  7617  005B26  C005  F005         	movff	___awmod@dividend,?___awmod
  7618  005B2A  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  7619  005B2E  0012               	return		;funcret
  7620  005B30                     __end_of___awmod:
  7621                           	callstack 0
  7622                           
  7623 ;; *************** function ___awdiv *****************
  7624 ;; Defined at:
  7625 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  dividend        2    4[COMRAM] int 
  7628 ;;  divisor         2    6[COMRAM] int 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  quotient        2   10[COMRAM] int 
  7631 ;;  sign            1    9[COMRAM] unsigned char 
  7632 ;;  counter         1    8[COMRAM] unsigned char 
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  2    4[COMRAM] int 
  7635 ;; Registers used:
  7636 ;;		wreg, status,2, status,0
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;Total ram usage:        8 bytes
  7647 ;; Hardware stack levels used: 1
  7648 ;; Hardware stack levels required when called: 4
  7649 ;; This function calls:
  7650 ;;		Nothing
  7651 ;; This function is called by:
  7652 ;;		_efgtoa
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text26
  7657  005838                     __ptext26:
  7658                           	callstack 0
  7659  005838                     ___awdiv:
  7660                           	callstack 22
  7661  005838  0E00               	movlw	0
  7662  00583A  6E0A               	movwf	___awdiv@sign^0,c
  7663  00583C  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  7664  00583E  EF25  F02C         	goto	u6850
  7665  005842  EF23  F02C         	goto	u6851
  7666  005846                     u6851:
  7667  005846  EF2B  F02C         	goto	l8178
  7668  00584A                     u6850:
  7669  00584A  6C07               	negf	___awdiv@divisor^0,c
  7670  00584C  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  7671  00584E  B0D8               	btfsc	status,0,c
  7672  005850  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  7673  005852  0E01               	movlw	1
  7674  005854  6E0A               	movwf	___awdiv@sign^0,c
  7675  005856                     l8178:
  7676  005856  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  7677  005858  EF32  F02C         	goto	u6860
  7678  00585C  EF30  F02C         	goto	u6861
  7679  005860                     u6861:
  7680  005860  EF38  F02C         	goto	l8184
  7681  005864                     u6860:
  7682  005864  6C05               	negf	___awdiv@dividend^0,c
  7683  005866  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  7684  005868  B0D8               	btfsc	status,0,c
  7685  00586A  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  7686  00586C  0E01               	movlw	1
  7687  00586E  1A0A               	xorwf	___awdiv@sign^0,f,c
  7688  005870                     l8184:
  7689  005870  0E00               	movlw	0
  7690  005872  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  7691  005874  0E00               	movlw	0
  7692  005876  6E0B               	movwf	___awdiv@quotient^0,c
  7693  005878  5007               	movf	___awdiv@divisor^0,w,c
  7694  00587A  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  7695  00587C  B4D8               	btfsc	status,2,c
  7696  00587E  EF43  F02C         	goto	u6871
  7697  005882  EF45  F02C         	goto	u6870
  7698  005886                     u6871:
  7699  005886  EF6D  F02C         	goto	l8206
  7700  00588A                     u6870:
  7701  00588A  0E01               	movlw	1
  7702  00588C  6E09               	movwf	___awdiv@counter^0,c
  7703  00588E  EF4D  F02C         	goto	l8192
  7704  005892                     l8190:
  7705  005892  90D8               	bcf	status,0,c
  7706  005894  3607               	rlcf	___awdiv@divisor^0,f,c
  7707  005896  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  7708  005898  2A09               	incf	___awdiv@counter^0,f,c
  7709  00589A                     l8192:
  7710  00589A  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  7711  00589C  EF52  F02C         	goto	u6881
  7712  0058A0  EF54  F02C         	goto	u6880
  7713  0058A4                     u6881:
  7714  0058A4  EF49  F02C         	goto	l8190
  7715  0058A8                     u6880:
  7716  0058A8                     l8194:
  7717  0058A8  90D8               	bcf	status,0,c
  7718  0058AA  360B               	rlcf	___awdiv@quotient^0,f,c
  7719  0058AC  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7720  0058AE  5007               	movf	___awdiv@divisor^0,w,c
  7721  0058B0  5C05               	subwf	___awdiv@dividend^0,w,c
  7722  0058B2  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7723  0058B4  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7724  0058B6  A0D8               	btfss	status,0,c
  7725  0058B8  EF60  F02C         	goto	u6891
  7726  0058BC  EF62  F02C         	goto	u6890
  7727  0058C0                     u6891:
  7728  0058C0  EF67  F02C         	goto	l8202
  7729  0058C4                     u6890:
  7730  0058C4  5007               	movf	___awdiv@divisor^0,w,c
  7731  0058C6  5E05               	subwf	___awdiv@dividend^0,f,c
  7732  0058C8  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7733  0058CA  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7734  0058CC  800B               	bsf	___awdiv@quotient^0,0,c
  7735  0058CE                     l8202:
  7736  0058CE  90D8               	bcf	status,0,c
  7737  0058D0  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7738  0058D2  3207               	rrcf	___awdiv@divisor^0,f,c
  7739  0058D4  2E09               	decfsz	___awdiv@counter^0,f,c
  7740  0058D6  EF54  F02C         	goto	l8194
  7741  0058DA                     l8206:
  7742  0058DA  500A               	movf	___awdiv@sign^0,w,c
  7743  0058DC  B4D8               	btfsc	status,2,c
  7744  0058DE  EF73  F02C         	goto	u6901
  7745  0058E2  EF75  F02C         	goto	u6900
  7746  0058E6                     u6901:
  7747  0058E6  EF79  F02C         	goto	l8210
  7748  0058EA                     u6900:
  7749  0058EA  6C0B               	negf	___awdiv@quotient^0,c
  7750  0058EC  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7751  0058EE  B0D8               	btfsc	status,0,c
  7752  0058F0  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7753  0058F2                     l8210:
  7754  0058F2  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7755  0058F6  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7756  0058FA  0012               	return		;funcret
  7757  0058FC                     __end_of___awdiv:
  7758                           	callstack 0
  7759                           
  7760 ;; *************** function _atoi *****************
  7761 ;; Defined at:
  7762 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7765 ;;		 -> STR_2(28), STR_1(29), 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  n               2   24[COMRAM] int 
  7768 ;;  neg             2   17[COMRAM] int 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  2   11[COMRAM] int 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;Total ram usage:       15 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 5
  7785 ;; This function calls:
  7786 ;;		___wmul
  7787 ;;		_isdigit
  7788 ;;		_isspace
  7789 ;; This function is called by:
  7790 ;;		_vfpfcnvrt
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text27
  7795  00507E                     __ptext27:
  7796                           	callstack 0
  7797  00507E                     _atoi:
  7798                           	callstack 22
  7799  00507E  0E00               	movlw	0
  7800  005080  6E1A               	movwf	(atoi@n+1)^0,c
  7801  005082  0E00               	movlw	0
  7802  005084  6E19               	movwf	atoi@n^0,c
  7803  005086  0E00               	movlw	0
  7804  005088  6E13               	movwf	(atoi@neg+1)^0,c
  7805  00508A  0E00               	movlw	0
  7806  00508C  6E12               	movwf	atoi@neg^0,c
  7807  00508E  EF4B  F028         	goto	l8754
  7808  005092                     l8752:
  7809  005092  4A0C               	infsnz	atoi@s^0,f,c
  7810  005094  2A0D               	incf	(atoi@s+1)^0,f,c
  7811  005096                     l8754:
  7812  005096  0E01               	movlw	1
  7813  005098  6E18               	movwf	_atoi$2225^0,c
  7814  00509A  C00C  FFF6         	movff	atoi@s,tblptrl
  7815  00509E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7816  0050A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7817  0050A2  6AF8               	clrf	tblptru,c
  7818  0050A4                     	endif
  7819  0050A4                     	if	0	;tblptru may be non-zero
  7820  0050A4                     	endif
  7821  0050A4  0008               	tblrd		*
  7822  0050A6  50F5               	movf	tablat,w,c
  7823  0050A8  0A20               	xorlw	32
  7824  0050AA  B4D8               	btfsc	status,2,c
  7825  0050AC  EF5A  F028         	goto	u7971
  7826  0050B0  EF5C  F028         	goto	u7970
  7827  0050B4                     u7971:
  7828  0050B4  EF7A  F028         	goto	l8762
  7829  0050B8                     u7970:
  7830  0050B8  0EF7               	movlw	247
  7831  0050BA  6E0E               	movwf	??_atoi^0,c
  7832  0050BC  0EFF               	movlw	255
  7833  0050BE  6E0F               	movwf	(??_atoi+1)^0,c
  7834  0050C0  C00C  FFF6         	movff	atoi@s,tblptrl
  7835  0050C4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7836  0050C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7837  0050C8  6AF8               	clrf	tblptru,c
  7838  0050CA                     	endif
  7839  0050CA                     	if	0	;tblptru may be non-zero
  7840  0050CA                     	endif
  7841  0050CA  0008               	tblrd		*
  7842  0050CC  50F5               	movf	tablat,w,c
  7843  0050CE  6E10               	movwf	(??_atoi+2)^0,c
  7844  0050D0  6A11               	clrf	(??_atoi+3)^0,c
  7845  0050D2  500E               	movf	??_atoi^0,w,c
  7846  0050D4  2610               	addwf	(??_atoi+2)^0,f,c
  7847  0050D6  500F               	movf	(??_atoi+1)^0,w,c
  7848  0050D8  2211               	addwfc	(??_atoi+3)^0,f,c
  7849  0050DA  5011               	movf	(??_atoi+3)^0,w,c
  7850  0050DC  E109               	bnz	u7980
  7851  0050DE  0E05               	movlw	5
  7852  0050E0  5C10               	subwf	(??_atoi+2)^0,w,c
  7853  0050E2  A0D8               	btfss	status,0,c
  7854  0050E4  EF76  F028         	goto	u7981
  7855  0050E8  EF78  F028         	goto	u7980
  7856  0050EC                     u7981:
  7857  0050EC  EF7A  F028         	goto	l8762
  7858  0050F0                     u7980:
  7859  0050F0  0E00               	movlw	0
  7860  0050F2  6E18               	movwf	_atoi$2225^0,c
  7861  0050F4                     l8762:
  7862  0050F4  C018  F014         	movff	_atoi$2225,_atoi$2224
  7863  0050F8  6A15               	clrf	(_atoi$2224+1)^0,c
  7864  0050FA  5014               	movf	_atoi$2224^0,w,c
  7865  0050FC  1015               	iorwf	(_atoi$2224+1)^0,w,c
  7866  0050FE  A4D8               	btfss	status,2,c
  7867  005100  EF84  F028         	goto	u7991
  7868  005104  EF86  F028         	goto	u7990
  7869  005108                     u7991:
  7870  005108  EF49  F028         	goto	l8752
  7871  00510C                     u7990:
  7872  00510C  EF90  F028         	goto	l8772
  7873  005110                     l8768:
  7874  005110  0E00               	movlw	0
  7875  005112  6E13               	movwf	(atoi@neg+1)^0,c
  7876  005114  0E01               	movlw	1
  7877  005116  6E12               	movwf	atoi@neg^0,c
  7878  005118                     l8770:
  7879  005118  4A0C               	infsnz	atoi@s^0,f,c
  7880  00511A  2A0D               	incf	(atoi@s+1)^0,f,c
  7881  00511C  EFC7  F028         	goto	l8778
  7882  005120                     l8772:
  7883  005120  C00C  FFF6         	movff	atoi@s,tblptrl
  7884  005124  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7885  005128                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7886  005128  6AF8               	clrf	tblptru,c
  7887  00512A                     	endif
  7888  00512A                     	if	0	;tblptru may be non-zero
  7889  00512A                     	endif
  7890  00512A  0008               	tblrd		*
  7891  00512C  50F5               	movf	tablat,w,c
  7892  00512E  6E0E               	movwf	??_atoi^0,c
  7893  005130  6A0F               	clrf	(??_atoi+1)^0,c
  7894                           
  7895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7896                           ; Switch size 1, requested type "simple"
  7897                           ; Number of cases is 1, Range of values is 0 to 0
  7898                           ; switch strategies available:
  7899                           ; Name         Instructions Cycles
  7900                           ; simple_byte            4     3 (average)
  7901                           ;	Chosen strategy is simple_byte
  7902  005132  500F               	movf	(??_atoi+1)^0,w,c
  7903  005134  0A00               	xorlw	0	; case 0
  7904  005136  B4D8               	btfsc	status,2,c
  7905  005138  EFA0  F028         	goto	l9050
  7906  00513C  EFC7  F028         	goto	l8778
  7907  005140                     l9050:
  7908                           
  7909                           ; Switch size 1, requested type "simple"
  7910                           ; Number of cases is 2, Range of values is 43 to 45
  7911                           ; switch strategies available:
  7912                           ; Name         Instructions Cycles
  7913                           ; simple_byte            7     4 (average)
  7914                           ;	Chosen strategy is simple_byte
  7915  005140  500E               	movf	??_atoi^0,w,c
  7916  005142  0A2B               	xorlw	43	; case 43
  7917  005144  B4D8               	btfsc	status,2,c
  7918  005146  EF8C  F028         	goto	l8770
  7919  00514A  0A06               	xorlw	6	; case 45
  7920  00514C  B4D8               	btfsc	status,2,c
  7921  00514E  EF88  F028         	goto	l8768
  7922  005152  EFC7  F028         	goto	l8778
  7923  005156                     l8774:
  7924  005156  C019  F005         	movff	atoi@n,___wmul@multiplier
  7925  00515A  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7926  00515E  0E00               	movlw	0
  7927  005160  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7928  005162  0E0A               	movlw	10
  7929  005164  6E07               	movwf	___wmul@multiplicand^0,c
  7930  005166  ECBB  F033         	call	___wmul	;wreg free
  7931  00516A  C00C  FFF6         	movff	atoi@s,tblptrl
  7932  00516E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7933  005172                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7934  005172  6AF8               	clrf	tblptru,c
  7935  005174                     	endif
  7936  005174                     	if	0	;tblptru may be non-zero
  7937  005174                     	endif
  7938  005174  0008               	tblrd		*
  7939  005176  50F5               	movf	tablat,w,c
  7940  005178  5E05               	subwf	?___wmul^0,f,c
  7941  00517A  0E00               	movlw	0
  7942  00517C  5A06               	subwfb	(?___wmul+1)^0,f,c
  7943  00517E  0E30               	movlw	48
  7944  005180  2405               	addwf	?___wmul^0,w,c
  7945  005182  6E19               	movwf	atoi@n^0,c
  7946  005184  0E00               	movlw	0
  7947  005186  2006               	addwfc	(?___wmul+1)^0,w,c
  7948  005188  6E1A               	movwf	(atoi@n+1)^0,c
  7949  00518A  EF8C  F028         	goto	l8770
  7950  00518E                     l8778:
  7951  00518E  0ED0               	movlw	208
  7952  005190  6E0E               	movwf	??_atoi^0,c
  7953  005192  0EFF               	movlw	255
  7954  005194  6E0F               	movwf	(??_atoi+1)^0,c
  7955  005196  C00C  FFF6         	movff	atoi@s,tblptrl
  7956  00519A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7957  00519E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7958  00519E  6AF8               	clrf	tblptru,c
  7959  0051A0                     	endif
  7960  0051A0                     	if	0	;tblptru may be non-zero
  7961  0051A0                     	endif
  7962  0051A0  0008               	tblrd		*
  7963  0051A2  50F5               	movf	tablat,w,c
  7964  0051A4  6E10               	movwf	(??_atoi+2)^0,c
  7965  0051A6  6A11               	clrf	(??_atoi+3)^0,c
  7966  0051A8  500E               	movf	??_atoi^0,w,c
  7967  0051AA  2610               	addwf	(??_atoi+2)^0,f,c
  7968  0051AC  500F               	movf	(??_atoi+1)^0,w,c
  7969  0051AE  2211               	addwfc	(??_atoi+3)^0,f,c
  7970  0051B0  5011               	movf	(??_atoi+3)^0,w,c
  7971  0051B2  E10A               	bnz	u8000
  7972  0051B4  0E0A               	movlw	10
  7973  0051B6  5C10               	subwf	(??_atoi+2)^0,w,c
  7974  0051B8  A0D8               	btfss	status,0,c
  7975  0051BA  EFE1  F028         	goto	u8001
  7976  0051BE  EFE4  F028         	goto	u8000
  7977  0051C2                     u8001:
  7978  0051C2  0E01               	movlw	1
  7979  0051C4  EFE5  F028         	goto	u8010
  7980  0051C8                     u8000:
  7981  0051C8  0E00               	movlw	0
  7982  0051CA                     u8010:
  7983  0051CA  6E16               	movwf	_atoi$2226^0,c
  7984  0051CC  6A17               	clrf	(_atoi$2226+1)^0,c
  7985  0051CE  5016               	movf	_atoi$2226^0,w,c
  7986  0051D0  1017               	iorwf	(_atoi$2226+1)^0,w,c
  7987  0051D2  A4D8               	btfss	status,2,c
  7988  0051D4  EFEE  F028         	goto	u8021
  7989  0051D8  EFF0  F028         	goto	u8020
  7990  0051DC                     u8021:
  7991  0051DC  EFAB  F028         	goto	l8774
  7992  0051E0                     u8020:
  7993  0051E0  5012               	movf	atoi@neg^0,w,c
  7994  0051E2  1013               	iorwf	(atoi@neg+1)^0,w,c
  7995  0051E4  A4D8               	btfss	status,2,c
  7996  0051E6  EFF7  F028         	goto	u8031
  7997  0051EA  EFF9  F028         	goto	u8030
  7998  0051EE                     u8031:
  7999  0051EE  EF07  F029         	goto	l1620
  8000  0051F2                     u8030:
  8001  0051F2  C019  F00E         	movff	atoi@n,??_atoi
  8002  0051F6  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  8003  0051FA  1E0E               	comf	??_atoi^0,f,c
  8004  0051FC  1E0F               	comf	(??_atoi+1)^0,f,c
  8005  0051FE  4A0E               	infsnz	??_atoi^0,f,c
  8006  005200  2A0F               	incf	(??_atoi+1)^0,f,c
  8007  005202  C00E  F00C         	movff	??_atoi,?_atoi
  8008  005206  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  8009  00520A  EF0B  F029         	goto	l1623
  8010  00520E                     l1620:
  8011  00520E  C019  F00C         	movff	atoi@n,?_atoi
  8012  005212  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  8013  005216                     l1623:
  8014  005216  0012               	return		;funcret
  8015  005218                     __end_of_atoi:
  8016                           	callstack 0
  8017                           
  8018 ;; *************** function _isspace *****************
  8019 ;; Defined at:
  8020 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  c               2    4[COMRAM] int 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  2    4[COMRAM] int 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8036 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8037 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8038 ;;Total ram usage:        7 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; Hardware stack levels required when called: 4
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_atoi
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text28
  8049  006322                     __ptext28:
  8050                           	callstack 0
  8051  006322                     _isspace:
  8052                           	callstack 22
  8053  006322  0E01               	movlw	1
  8054  006324  6E0B               	movwf	_isspace$2255^0,c
  8055  006326  0E20               	movlw	32
  8056  006328  1805               	xorwf	isspace@c^0,w,c
  8057  00632A  1006               	iorwf	(isspace@c+1)^0,w,c
  8058  00632C  B4D8               	btfsc	status,2,c
  8059  00632E  EF9B  F031         	goto	u7411
  8060  006332  EF9D  F031         	goto	u7410
  8061  006336                     u7411:
  8062  006336  EFB6  F031         	goto	l8438
  8063  00633A                     u7410:
  8064  00633A  0EF7               	movlw	247
  8065  00633C  6E07               	movwf	??_isspace^0,c
  8066  00633E  0EFF               	movlw	255
  8067  006340  6E08               	movwf	(??_isspace+1)^0,c
  8068  006342  C005  F009         	movff	isspace@c,??_isspace+2
  8069  006346  C006  F00A         	movff	isspace@c+1,??_isspace+3
  8070  00634A  5007               	movf	??_isspace^0,w,c
  8071  00634C  2609               	addwf	(??_isspace+2)^0,f,c
  8072  00634E  5008               	movf	(??_isspace+1)^0,w,c
  8073  006350  220A               	addwfc	(??_isspace+3)^0,f,c
  8074  006352  500A               	movf	(??_isspace+3)^0,w,c
  8075  006354  E109               	bnz	u7420
  8076  006356  0E05               	movlw	5
  8077  006358  5C09               	subwf	(??_isspace+2)^0,w,c
  8078  00635A  A0D8               	btfss	status,0,c
  8079  00635C  EFB2  F031         	goto	u7421
  8080  006360  EFB4  F031         	goto	u7420
  8081  006364                     u7421:
  8082  006364  EFB6  F031         	goto	l8438
  8083  006368                     u7420:
  8084  006368  0E00               	movlw	0
  8085  00636A  6E0B               	movwf	_isspace$2255^0,c
  8086  00636C                     l8438:
  8087  00636C  C00B  F005         	movff	_isspace$2255,?_isspace
  8088  006370  6A06               	clrf	(?_isspace+1)^0,c
  8089  006372  0012               	return		;funcret
  8090  006374                     __end_of_isspace:
  8091                           	callstack 0
  8092                           
  8093 ;; *************** function _isdigit *****************
  8094 ;; Defined at:
  8095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  c               2    4[COMRAM] int 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  2    4[COMRAM] int 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;Total ram usage:        6 bytes
  8114 ;; Hardware stack levels used: 1
  8115 ;; Hardware stack levels required when called: 4
  8116 ;; This function calls:
  8117 ;;		Nothing
  8118 ;; This function is called by:
  8119 ;;		_vfpfcnvrt
  8120 ;;		_atoi
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text29
  8125  00657A                     __ptext29:
  8126                           	callstack 0
  8127  00657A                     _isdigit:
  8128                           	callstack 23
  8129  00657A  0ED0               	movlw	208
  8130  00657C  6E07               	movwf	??_isdigit^0,c
  8131  00657E  0EFF               	movlw	255
  8132  006580  6E08               	movwf	(??_isdigit+1)^0,c
  8133  006582  C005  F009         	movff	isdigit@c,??_isdigit+2
  8134  006586  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  8135  00658A  5007               	movf	??_isdigit^0,w,c
  8136  00658C  2609               	addwf	(??_isdigit+2)^0,f,c
  8137  00658E  5008               	movf	(??_isdigit+1)^0,w,c
  8138  006590  220A               	addwfc	(??_isdigit+3)^0,f,c
  8139  006592  500A               	movf	(??_isdigit+3)^0,w,c
  8140  006594  E10A               	bnz	u7390
  8141  006596  0E0A               	movlw	10
  8142  006598  5C09               	subwf	(??_isdigit+2)^0,w,c
  8143  00659A  A0D8               	btfss	status,0,c
  8144  00659C  EFD2  F032         	goto	u7391
  8145  0065A0  EFD5  F032         	goto	u7390
  8146  0065A4                     u7391:
  8147  0065A4  0E01               	movlw	1
  8148  0065A6  EFD6  F032         	goto	u7400
  8149  0065AA                     u7390:
  8150  0065AA  0E00               	movlw	0
  8151  0065AC                     u7400:
  8152  0065AC  6E05               	movwf	?_isdigit^0,c
  8153  0065AE  6A06               	clrf	(?_isdigit+1)^0,c
  8154  0065B0  0012               	return		;funcret
  8155  0065B2                     __end_of_isdigit:
  8156                           	callstack 0
  8157                           
  8158 ;; *************** function ___wmul *****************
  8159 ;; Defined at:
  8160 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  multiplier      2    4[COMRAM] unsigned int 
  8163 ;;  multiplicand    2    6[COMRAM] unsigned int 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  product         2    8[COMRAM] unsigned int 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  2    4[COMRAM] unsigned int 
  8168 ;; Registers used:
  8169 ;;		wreg, status,2, status,0, prodl, prodh
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;Total ram usage:        6 bytes
  8180 ;; Hardware stack levels used: 1
  8181 ;; Hardware stack levels required when called: 4
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_atoi
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           	psect	text30
  8190  006776                     __ptext30:
  8191                           	callstack 0
  8192  006776                     ___wmul:
  8193                           	callstack 22
  8194  006776  5005               	movf	___wmul@multiplier^0,w,c
  8195  006778  0207               	mulwf	___wmul@multiplicand^0,c
  8196  00677A  CFF3 F009          	movff	prodl,___wmul@product
  8197  00677E  CFF4 F00A          	movff	prodh,___wmul@product+1
  8198  006782  5005               	movf	___wmul@multiplier^0,w,c
  8199  006784  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  8200  006786  50F3               	movf	243,w,c
  8201  006788  260A               	addwf	(___wmul@product+1)^0,f,c
  8202  00678A  5006               	movf	(___wmul@multiplier+1)^0,w,c
  8203  00678C  0207               	mulwf	___wmul@multiplicand^0,c
  8204  00678E  50F3               	movf	243,w,c
  8205  006790  260A               	addwf	(___wmul@product+1)^0,f,c
  8206  006792  C009  F005         	movff	___wmul@product,?___wmul
  8207  006796  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  8208  00679A  0012               	return		;funcret
  8209  00679C                     __end_of___wmul:
  8210                           	callstack 0
  8211                           
  8212 ;; *************** function _VL53L0X_SetAdd *****************
  8213 ;; Defined at:
  8214 ;;		line 635 in file "vl53l0x.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  new             1    wreg     unsigned char 
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  new             1   24[COMRAM] unsigned char 
  8219 ;;  data16          2    0        unsigned short 
  8220 ;;  data8           1    0        unsigned char 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  1    wreg      void 
  8223 ;; Registers used:
  8224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8234 ;;Total ram usage:        1 bytes
  8235 ;; Hardware stack levels used: 1
  8236 ;; Hardware stack levels required when called: 13
  8237 ;; This function calls:
  8238 ;;		_I2C_Write1ByteRegister
  8239 ;; This function is called by:
  8240 ;;		_main
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244                           	psect	text31
  8245  00686E                     __ptext31:
  8246                           	callstack 0
  8247  00686E                     _VL53L0X_SetAdd:
  8248                           	callstack 17
  8249                           
  8250                           ;incstack = 0
  8251                           ;VL53L0X_SetAdd@new stored from wreg
  8252  00686E  6E19               	movwf	VL53L0X_SetAdd@new^0,c
  8253  006870                     
  8254                           ;vl53l0x.c: 636:     uint16_t data16;;vl53l0x.c: 637:     uint8_t data8;;vl53l0x.c: 641:
      +                               I2C_Write1ByteRegister(0x29, 0x8A, new);
  8255  006870  0E8A               	movlw	138
  8256  006872  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8257  006874  C019  F017         	movff	VL53L0X_SetAdd@new,I2C_Write1ByteRegister@data
  8258  006878  0E29               	movlw	41
  8259  00687A  EC3D  F030         	call	_I2C_Write1ByteRegister
  8260  00687E  0012               	return		;funcret
  8261  006880                     __end_of_VL53L0X_SetAdd:
  8262                           	callstack 0
  8263                           
  8264 ;; *************** function _VL53L0X_Millimeter_GetValue *****************
  8265 ;; Defined at:
  8266 ;;		line 645 in file "vl53l0x.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  addr            1    wreg     unsigned char 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;  addr            1   42[COMRAM] unsigned char 
  8271 ;;  DistDistanzA    4   35[COMRAM] float 
  8272 ;;  data16          2   39[COMRAM] unsigned short 
  8273 ;;  data8           1   41[COMRAM] unsigned char 
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  4   29[COMRAM] float 
  8276 ;; Registers used:
  8277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8284 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8286 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;Total ram usage:       14 bytes
  8288 ;; Hardware stack levels used: 1
  8289 ;; Hardware stack levels required when called: 13
  8290 ;; This function calls:
  8291 ;;		_I2C_Read1ByteRegister
  8292 ;;		_I2C_Read2ByteRegister
  8293 ;;		_I2C_ReadNBytes
  8294 ;;		_I2C_Write1ByteRegister
  8295 ;;		_I2C_WriteNBytes
  8296 ;;		___xxtofl
  8297 ;; This function is called by:
  8298 ;;		_main
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text32
  8303  004A24                     __ptext32:
  8304                           	callstack 0
  8305  004A24                     _VL53L0X_Millimeter_GetValue:
  8306                           	callstack 17
  8307                           
  8308                           ;incstack = 0
  8309                           ;VL53L0X_Millimeter_GetValue@addr stored from wreg
  8310  004A24  6E2B               	movwf	VL53L0X_Millimeter_GetValue@addr^0,c
  8311  004A26                     
  8312                           ;vl53l0x.c: 646:     float DistDistanzAnz;;vl53l0x.c: 647:     uint16_t data16;;vl53l0x.
      +                          c: 648:     uint8_t data8;;vl53l0x.c: 651:     I2C_Write1ByteRegister(addr, 0x80, 0x01);
  8313  004A26  0E80               	movlw	128
  8314  004A28  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8315  004A2A  0E01               	movlw	1
  8316  004A2C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8317  004A2E  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8318  004A30  EC3D  F030         	call	_I2C_Write1ByteRegister
  8319                           
  8320                           ;vl53l0x.c: 652:     I2C_Write1ByteRegister(addr, 0xFF, 0x01);
  8321  004A34  0EFF               	movlw	255
  8322  004A36  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8323  004A38  0E01               	movlw	1
  8324  004A3A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8325  004A3C  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8326  004A3E  EC3D  F030         	call	_I2C_Write1ByteRegister
  8327                           
  8328                           ;vl53l0x.c: 653:     I2C_Write1ByteRegister(addr, 0x00, 0x00);
  8329  004A42  0E00               	movlw	0
  8330  004A44  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8331  004A46  0E00               	movlw	0
  8332  004A48  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8333  004A4A  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8334  004A4C  EC3D  F030         	call	_I2C_Write1ByteRegister
  8335                           
  8336                           ;vl53l0x.c: 654:     I2C_Write1ByteRegister(addr, 0x91, 0x3C);
  8337  004A50  0E91               	movlw	145
  8338  004A52  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8339  004A54  0E3C               	movlw	60
  8340  004A56  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8341  004A58  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8342  004A5A  EC3D  F030         	call	_I2C_Write1ByteRegister
  8343                           
  8344                           ;vl53l0x.c: 655:     I2C_Write1ByteRegister(addr, 0x00, 0x01);
  8345  004A5E  0E00               	movlw	0
  8346  004A60  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8347  004A62  0E01               	movlw	1
  8348  004A64  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8349  004A66  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8350  004A68  EC3D  F030         	call	_I2C_Write1ByteRegister
  8351                           
  8352                           ;vl53l0x.c: 656:     I2C_Write1ByteRegister(addr, 0xFF, 0x00);
  8353  004A6C  0EFF               	movlw	255
  8354  004A6E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8355  004A70  0E00               	movlw	0
  8356  004A72  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8357  004A74  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8358  004A76  EC3D  F030         	call	_I2C_Write1ByteRegister
  8359                           
  8360                           ;vl53l0x.c: 657:     I2C_Write1ByteRegister(addr, 0x80, 0x00);
  8361  004A7A  0E80               	movlw	128
  8362  004A7C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8363  004A7E  0E00               	movlw	0
  8364  004A80  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8365  004A82  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8366  004A84  EC3D  F030         	call	_I2C_Write1ByteRegister
  8367                           
  8368                           ;vl53l0x.c: 658:     I2C_Write1ByteRegister(addr, 0x00, 0x01);
  8369  004A88  0E00               	movlw	0
  8370  004A8A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8371  004A8C  0E01               	movlw	1
  8372  004A8E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8373  004A90  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8374  004A92  EC3D  F030         	call	_I2C_Write1ByteRegister
  8375                           
  8376                           ;vl53l0x.c: 659:     data8 = I2C_Read1ByteRegister(addr, 0x00);
  8377  004A96  0E00               	movlw	0
  8378  004A98  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8379  004A9A  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8380  004A9C  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8381  004AA0  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8382                           
  8383                           ;vl53l0x.c: 660:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8384  004AA2  0E13               	movlw	19
  8385  004AA4  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8386  004AA6  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8387  004AA8  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8388  004AAC  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8389                           
  8390                           ;vl53l0x.c: 661:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8391  004AAE  0E13               	movlw	19
  8392  004AB0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8393  004AB2  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8394  004AB4  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8395  004AB8  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8396                           
  8397                           ;vl53l0x.c: 662:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8398  004ABA  0E13               	movlw	19
  8399  004ABC  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8400  004ABE  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8401  004AC0  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8402  004AC4  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8403                           
  8404                           ;vl53l0x.c: 663:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8405  004AC6  0E13               	movlw	19
  8406  004AC8  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8407  004ACA  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8408  004ACC  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8409  004AD0  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8410                           
  8411                           ;vl53l0x.c: 664:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8412  004AD2  0E13               	movlw	19
  8413  004AD4  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8414  004AD6  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8415  004AD8  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8416  004ADC  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8417                           
  8418                           ;vl53l0x.c: 665:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8419  004ADE  0E13               	movlw	19
  8420  004AE0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8421  004AE2  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8422  004AE4  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8423  004AE8  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8424                           
  8425                           ;vl53l0x.c: 666:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8426  004AEA  0E13               	movlw	19
  8427  004AEC  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8428  004AEE  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8429  004AF0  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8430  004AF4  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8431                           
  8432                           ;vl53l0x.c: 667:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8433  004AF6  0E13               	movlw	19
  8434  004AF8  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8435  004AFA  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8436  004AFC  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8437  004B00  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8438                           
  8439                           ;vl53l0x.c: 668:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8440  004B02  0E13               	movlw	19
  8441  004B04  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8442  004B06  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8443  004B08  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8444  004B0C  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8445                           
  8446                           ;vl53l0x.c: 669:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8447  004B0E  0E13               	movlw	19
  8448  004B10  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8449  004B12  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8450  004B14  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8451  004B18  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8452                           
  8453                           ;vl53l0x.c: 670:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8454  004B1A  0E13               	movlw	19
  8455  004B1C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8456  004B1E  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8457  004B20  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8458  004B24  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8459                           
  8460                           ;vl53l0x.c: 671:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8461  004B26  0E13               	movlw	19
  8462  004B28  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8463  004B2A  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8464  004B2C  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8465  004B30  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8466                           
  8467                           ;vl53l0x.c: 672:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8468  004B32  0E13               	movlw	19
  8469  004B34  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8470  004B36  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8471  004B38  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8472  004B3C  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8473                           
  8474                           ;vl53l0x.c: 673:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8475  004B3E  0E13               	movlw	19
  8476  004B40  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8477  004B42  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8478  004B44  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8479  004B48  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8480                           
  8481                           ;vl53l0x.c: 674:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8482  004B4A  0E13               	movlw	19
  8483  004B4C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8484  004B4E  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8485  004B50  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8486  004B54  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8487                           
  8488                           ;vl53l0x.c: 675:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8489  004B56  0E13               	movlw	19
  8490  004B58  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8491  004B5A  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8492  004B5C  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8493  004B60  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8494                           
  8495                           ;vl53l0x.c: 676:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8496  004B62  0E13               	movlw	19
  8497  004B64  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8498  004B66  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8499  004B68  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8500  004B6C  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8501                           
  8502                           ;vl53l0x.c: 677:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8503  004B6E  0E13               	movlw	19
  8504  004B70  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8505  004B72  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8506  004B74  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8507  004B78  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8508                           
  8509                           ;vl53l0x.c: 678:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8510  004B7A  0E13               	movlw	19
  8511  004B7C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8512  004B7E  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8513  004B80  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8514  004B84  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8515                           
  8516                           ;vl53l0x.c: 679:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8517  004B86  0E13               	movlw	19
  8518  004B88  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8519  004B8A  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8520  004B8C  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8521  004B90  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8522                           
  8523                           ;vl53l0x.c: 680:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8524  004B92  0E13               	movlw	19
  8525  004B94  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8526  004B96  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8527  004B98  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8528  004B9C  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8529                           
  8530                           ;vl53l0x.c: 681:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8531  004B9E  0E13               	movlw	19
  8532  004BA0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8533  004BA2  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8534  004BA4  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8535  004BA8  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8536                           
  8537                           ;vl53l0x.c: 682:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8538  004BAA  0E13               	movlw	19
  8539  004BAC  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8540  004BAE  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8541  004BB0  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8542  004BB4  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8543                           
  8544                           ;vl53l0x.c: 683:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8545  004BB6  0E13               	movlw	19
  8546  004BB8  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8547  004BBA  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8548  004BBC  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8549  004BC0  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8550                           
  8551                           ;vl53l0x.c: 684:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8552  004BC2  0E13               	movlw	19
  8553  004BC4  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8554  004BC6  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8555  004BC8  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8556  004BCC  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8557                           
  8558                           ;vl53l0x.c: 685:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8559  004BCE  0E13               	movlw	19
  8560  004BD0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8561  004BD2  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8562  004BD4  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8563  004BD8  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8564                           
  8565                           ;vl53l0x.c: 686:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8566  004BDA  0E13               	movlw	19
  8567  004BDC  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8568  004BDE  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8569  004BE0  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8570  004BE4  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8571                           
  8572                           ;vl53l0x.c: 687:     data8 = I2C_Read1ByteRegister(addr, 0x13);
  8573  004BE6  0E13               	movlw	19
  8574  004BE8  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8575  004BEA  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8576  004BEC  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8577  004BF0  6E2A               	movwf	VL53L0X_Millimeter_GetValue@data8^0,c
  8578  004BF2                     
  8579                           ;vl53l0x.c: 688:         writeBuffer[0] = 0x1E;
  8580  004BF2  0E1E               	movlw	30
  8581  004BF4  0100               	movlb	0	; () banked
  8582  004BF6  6FA5               	movwf	_writeBuffer& (0+255),b
  8583  004BF8                     
  8584                           ; BSR set to: 0
  8585                           ;vl53l0x.c: 689:     I2C_WriteNBytes(addr, &writeBuffer[0], 1);
  8586  004BF8  0EA5               	movlw	low _writeBuffer
  8587  004BFA  6E16               	movwf	I2C_WriteNBytes@data^0,c
  8588  004BFC  0E00               	movlw	high _writeBuffer
  8589  004BFE  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  8590  004C00  0E00               	movlw	0
  8591  004C02  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  8592  004C04  0E01               	movlw	1
  8593  004C06  6E18               	movwf	I2C_WriteNBytes@len^0,c
  8594  004C08  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8595  004C0A  EC38  F031         	call	_I2C_WriteNBytes
  8596  004C0E                     
  8597                           ;vl53l0x.c: 690:     I2C_ReadNBytes(addr, &readBuffer[0], 12);
  8598  004C0E  0E60               	movlw	low _readBuffer
  8599  004C10  6E16               	movwf	I2C_ReadNBytes@data^0,c
  8600  004C12  0E01               	movlw	high _readBuffer
  8601  004C14  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  8602  004C16  0E00               	movlw	0
  8603  004C18  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  8604  004C1A  0E0C               	movlw	12
  8605  004C1C  6E18               	movwf	I2C_ReadNBytes@len^0,c
  8606  004C1E  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8607  004C20  ECDD  F031         	call	_I2C_ReadNBytes
  8608  004C24                     
  8609                           ;vl53l0x.c: 691:     I2C_Write1ByteRegister(addr, 0xFF, 0x01);
  8610  004C24  0EFF               	movlw	255
  8611  004C26  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8612  004C28  0E01               	movlw	1
  8613  004C2A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8614  004C2C  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8615  004C2E  EC3D  F030         	call	_I2C_Write1ByteRegister
  8616  004C32  0EB6               	movlw	182
  8617  004C34  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  8618  004C36  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8619  004C38  ECD2  F02E         	call	_I2C_Read2ByteRegister
  8620  004C3C                     
  8621                           ;vl53l0x.c: 693:     I2C_Write1ByteRegister(addr, 0xFF, 0x00);
  8622  004C3C  0EFF               	movlw	255
  8623  004C3E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8624  004C40  0E00               	movlw	0
  8625  004C42  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8626  004C44  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8627  004C46  EC3D  F030         	call	_I2C_Write1ByteRegister
  8628  004C4A                     
  8629                           ;vl53l0x.c: 694:     I2C_Write1ByteRegister(addr, 0x0B, 0x01);
  8630  004C4A  0E0B               	movlw	11
  8631  004C4C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8632  004C4E  0E01               	movlw	1
  8633  004C50  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8634  004C52  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8635  004C54  EC3D  F030         	call	_I2C_Write1ByteRegister
  8636  004C58                     
  8637                           ;vl53l0x.c: 695:     I2C_Write1ByteRegister(addr, 0x0B, 0x00);
  8638  004C58  0E0B               	movlw	11
  8639  004C5A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8640  004C5C  0E00               	movlw	0
  8641  004C5E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8642  004C60  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8643  004C62  EC3D  F030         	call	_I2C_Write1ByteRegister
  8644  004C66  0E13               	movlw	19
  8645  004C68  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8646  004C6A  502B               	movf	VL53L0X_Millimeter_GetValue@addr^0,w,c
  8647  004C6C  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8648  004C70                     
  8649                           ;vl53l0x.c: 698:     data16 = (readBuffer[0] << 8) + readBuffer[1];
  8650  004C70  0101               	movlb	1	; () banked
  8651  004C72  5160               	movf	_readBuffer& (0+255),w,b
  8652  004C74  6E23               	movwf	(??_VL53L0X_Millimeter_GetValue+1)^0,c
  8653  004C76  6A22               	clrf	??_VL53L0X_Millimeter_GetValue^0,c
  8654  004C78  5161               	movf	(_readBuffer+1)& (0+255),w,b
  8655  004C7A  2422               	addwf	??_VL53L0X_Millimeter_GetValue^0,w,c
  8656  004C7C  6E28               	movwf	VL53L0X_Millimeter_GetValue@data16^0,c
  8657  004C7E  0E00               	movlw	0
  8658  004C80  2023               	addwfc	(??_VL53L0X_Millimeter_GetValue+1)^0,w,c
  8659  004C82  6E29               	movwf	(VL53L0X_Millimeter_GetValue@data16+1)^0,c
  8660  004C84                     
  8661                           ; BSR set to: 1
  8662                           ;vl53l0x.c: 699:     DistDistanzAnz = data16;
  8663  004C84  C028  F005         	movff	VL53L0X_Millimeter_GetValue@data16,___xxtofl@val
  8664  004C88  C029  F006         	movff	VL53L0X_Millimeter_GetValue@data16+1,___xxtofl@val+1
  8665  004C8C  6A07               	clrf	(___xxtofl@val+2)^0,c
  8666  004C8E  6A08               	clrf	(___xxtofl@val+3)^0,c
  8667  004C90  0E00               	movlw	0
  8668  004C92  EC65  F027         	call	___xxtofl
  8669  004C96  C005  F024         	movff	?___xxtofl,VL53L0X_Millimeter_GetValue@DistDistanzAnz
  8670  004C9A  C006  F025         	movff	?___xxtofl+1,VL53L0X_Millimeter_GetValue@DistDistanzAnz+1
  8671  004C9E  C007  F026         	movff	?___xxtofl+2,VL53L0X_Millimeter_GetValue@DistDistanzAnz+2
  8672  004CA2  C008  F027         	movff	?___xxtofl+3,VL53L0X_Millimeter_GetValue@DistDistanzAnz+3
  8673  004CA6                     
  8674                           ;vl53l0x.c: 701:     return DistDistanzAnz;
  8675  004CA6  C024  F01E         	movff	VL53L0X_Millimeter_GetValue@DistDistanzAnz,?_VL53L0X_Millimeter_GetValue
  8676  004CAA  C025  F01F         	movff	VL53L0X_Millimeter_GetValue@DistDistanzAnz+1,?_VL53L0X_Millimeter_GetValue+1
  8677  004CAE  C026  F020         	movff	VL53L0X_Millimeter_GetValue@DistDistanzAnz+2,?_VL53L0X_Millimeter_GetValue+2
  8678  004CB2  C027  F021         	movff	VL53L0X_Millimeter_GetValue@DistDistanzAnz+3,?_VL53L0X_Millimeter_GetValue+3
  8679  004CB6  0012               	return		;funcret
  8680  004CB8                     __end_of_VL53L0X_Millimeter_GetValue:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function ___xxtofl *****************
  8684 ;; Defined at:
  8685 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  sign            1    wreg     unsigned char 
  8688 ;;  val             4    4[COMRAM] long 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  sign            1   12[COMRAM] unsigned char 
  8691 ;;  arg             4   14[COMRAM] unsigned long 
  8692 ;;  exp             1   13[COMRAM] unsigned char 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  4    4[COMRAM] unsigned char 
  8695 ;; Registers used:
  8696 ;;		wreg, status,2, status,0
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;Total ram usage:       14 bytes
  8707 ;; Hardware stack levels used: 1
  8708 ;; Hardware stack levels required when called: 4
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_VL53L0X_Millimeter_GetValue
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text33
  8717  004ECA                     __ptext33:
  8718                           	callstack 0
  8719  004ECA                     ___xxtofl:
  8720                           	callstack 25
  8721                           
  8722                           ;incstack = 0
  8723                           ;___xxtofl@sign stored from wreg
  8724  004ECA  6E0D               	movwf	___xxtofl@sign^0,c
  8725  004ECC  500D               	movf	___xxtofl@sign^0,w,c
  8726  004ECE  B4D8               	btfsc	status,2,c
  8727  004ED0  EF6C  F027         	goto	u5581
  8728  004ED4  EF6E  F027         	goto	u5580
  8729  004ED8                     u5581:
  8730  004ED8  EF90  F027         	goto	l1388
  8731  004EDC                     u5580:
  8732  004EDC  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8733  004EDE  EF75  F027         	goto	u5590
  8734  004EE2  EF73  F027         	goto	u5591
  8735  004EE6                     u5591:
  8736  004EE6  EF90  F027         	goto	l1388
  8737  004EEA                     u5590:
  8738  004EEA  C005  F009         	movff	___xxtofl@val,??___xxtofl
  8739  004EEE  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  8740  004EF2  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  8741  004EF6  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  8742  004EFA  1E09               	comf	??___xxtofl^0,f,c
  8743  004EFC  1E0A               	comf	(??___xxtofl+1)^0,f,c
  8744  004EFE  1E0B               	comf	(??___xxtofl+2)^0,f,c
  8745  004F00  1E0C               	comf	(??___xxtofl+3)^0,f,c
  8746  004F02  2A09               	incf	??___xxtofl^0,f,c
  8747  004F04  0E00               	movlw	0
  8748  004F06  220A               	addwfc	(??___xxtofl+1)^0,f,c
  8749  004F08  220B               	addwfc	(??___xxtofl+2)^0,f,c
  8750  004F0A  220C               	addwfc	(??___xxtofl+3)^0,f,c
  8751  004F0C  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  8752  004F10  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  8753  004F14  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  8754  004F18  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  8755  004F1C  EF98  F027         	goto	l6504
  8756  004F20                     l1388:
  8757  004F20  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  8758  004F24  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8759  004F28  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8760  004F2C  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8761  004F30                     l6504:
  8762  004F30  5005               	movf	___xxtofl@val^0,w,c
  8763  004F32  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  8764  004F34  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  8765  004F36  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  8766  004F38  A4D8               	btfss	status,2,c
  8767  004F3A  EFA1  F027         	goto	u5601
  8768  004F3E  EFA3  F027         	goto	u5600
  8769  004F42                     u5601:
  8770  004F42  EFAD  F027         	goto	l6510
  8771  004F46                     u5600:
  8772  004F46  0E00               	movlw	0
  8773  004F48  6E05               	movwf	?___xxtofl^0,c
  8774  004F4A  0E00               	movlw	0
  8775  004F4C  6E06               	movwf	(?___xxtofl+1)^0,c
  8776  004F4E  0E00               	movlw	0
  8777  004F50  6E07               	movwf	(?___xxtofl+2)^0,c
  8778  004F52  0E00               	movlw	0
  8779  004F54  6E08               	movwf	(?___xxtofl+3)^0,c
  8780  004F56  EF3E  F028         	goto	l1391
  8781  004F5A                     l6510:
  8782  004F5A  0E96               	movlw	150
  8783  004F5C  6E0E               	movwf	___xxtofl@exp^0,c
  8784  004F5E  EFB7  F027         	goto	l6514
  8785  004F62                     l6512:
  8786  004F62  2A0E               	incf	___xxtofl@exp^0,f,c
  8787  004F64  90D8               	bcf	status,0,c
  8788  004F66  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8789  004F68  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8790  004F6A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8791  004F6C  320F               	rrcf	___xxtofl@arg^0,f,c
  8792  004F6E                     l6514:
  8793  004F6E  0E00               	movlw	0
  8794  004F70  140F               	andwf	___xxtofl@arg^0,w,c
  8795  004F72  6E09               	movwf	??___xxtofl^0,c
  8796  004F74  0E00               	movlw	0
  8797  004F76  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8798  004F78  6E0A               	movwf	(??___xxtofl+1)^0,c
  8799  004F7A  0E00               	movlw	0
  8800  004F7C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8801  004F7E  6E0B               	movwf	(??___xxtofl+2)^0,c
  8802  004F80  0EFE               	movlw	254
  8803  004F82  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8804  004F84  6E0C               	movwf	(??___xxtofl+3)^0,c
  8805  004F86  5009               	movf	??___xxtofl^0,w,c
  8806  004F88  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8807  004F8A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8808  004F8C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8809  004F8E  A4D8               	btfss	status,2,c
  8810  004F90  EFCC  F027         	goto	u5611
  8811  004F94  EFCE  F027         	goto	u5610
  8812  004F98                     u5611:
  8813  004F98  EFB1  F027         	goto	l6512
  8814  004F9C                     u5610:
  8815  004F9C  EFDC  F027         	goto	l1395
  8816  004FA0                     l6516:
  8817  004FA0  2A0E               	incf	___xxtofl@exp^0,f,c
  8818  004FA2  0E01               	movlw	1
  8819  004FA4  260F               	addwf	___xxtofl@arg^0,f,c
  8820  004FA6  0E00               	movlw	0
  8821  004FA8  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  8822  004FAA  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  8823  004FAC  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  8824  004FAE  90D8               	bcf	status,0,c
  8825  004FB0  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8826  004FB2  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8827  004FB4  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8828  004FB6  320F               	rrcf	___xxtofl@arg^0,f,c
  8829  004FB8                     l1395:
  8830  004FB8  0E00               	movlw	0
  8831  004FBA  140F               	andwf	___xxtofl@arg^0,w,c
  8832  004FBC  6E09               	movwf	??___xxtofl^0,c
  8833  004FBE  0E00               	movlw	0
  8834  004FC0  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8835  004FC2  6E0A               	movwf	(??___xxtofl+1)^0,c
  8836  004FC4  0E00               	movlw	0
  8837  004FC6  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8838  004FC8  6E0B               	movwf	(??___xxtofl+2)^0,c
  8839  004FCA  0EFF               	movlw	255
  8840  004FCC  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8841  004FCE  6E0C               	movwf	(??___xxtofl+3)^0,c
  8842  004FD0  5009               	movf	??___xxtofl^0,w,c
  8843  004FD2  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8844  004FD4  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8845  004FD6  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8846  004FD8  A4D8               	btfss	status,2,c
  8847  004FDA  EFF1  F027         	goto	u5621
  8848  004FDE  EFF3  F027         	goto	u5620
  8849  004FE2                     u5621:
  8850  004FE2  EFD0  F027         	goto	l6516
  8851  004FE6                     u5620:
  8852  004FE6  EFFB  F027         	goto	l6524
  8853  004FEA                     l6522:
  8854  004FEA  060E               	decf	___xxtofl@exp^0,f,c
  8855  004FEC  90D8               	bcf	status,0,c
  8856  004FEE  360F               	rlcf	___xxtofl@arg^0,f,c
  8857  004FF0  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8858  004FF2  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8859  004FF4  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8860  004FF6                     l6524:
  8861  004FF6  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8862  004FF8  EF00  F028         	goto	u5631
  8863  004FFC  EF02  F028         	goto	u5630
  8864  005000                     u5631:
  8865  005000  EF0A  F028         	goto	l1402
  8866  005004                     u5630:
  8867  005004  0E02               	movlw	2
  8868  005006  600E               	cpfslt	___xxtofl@exp^0,c
  8869  005008  EF08  F028         	goto	u5641
  8870  00500C  EF0A  F028         	goto	u5640
  8871  005010                     u5641:
  8872  005010  EFF5  F027         	goto	l6522
  8873  005014                     u5640:
  8874  005014                     l1402:
  8875  005014  B00E               	btfsc	___xxtofl@exp^0,0,c
  8876  005016  EF0F  F028         	goto	u5651
  8877  00501A  EF11  F028         	goto	u5650
  8878  00501E                     u5651:
  8879  00501E  EF12  F028         	goto	l6530
  8880  005022                     u5650:
  8881  005022  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8882  005024                     l6530:
  8883  005024  90D8               	bcf	status,0,c
  8884  005026  320E               	rrcf	___xxtofl@exp^0,f,c
  8885  005028  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8886  00502C  6A0A               	clrf	(??___xxtofl+1)^0,c
  8887  00502E  6A0B               	clrf	(??___xxtofl+2)^0,c
  8888  005030  6A0C               	clrf	(??___xxtofl+3)^0,c
  8889  005032  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8890  005036  6A0B               	clrf	(??___xxtofl+2)^0,c
  8891  005038  6A0A               	clrf	(??___xxtofl+1)^0,c
  8892  00503A  6A09               	clrf	??___xxtofl^0,c
  8893  00503C  5009               	movf	??___xxtofl^0,w,c
  8894  00503E  120F               	iorwf	___xxtofl@arg^0,f,c
  8895  005040  500A               	movf	(??___xxtofl+1)^0,w,c
  8896  005042  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8897  005044  500B               	movf	(??___xxtofl+2)^0,w,c
  8898  005046  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8899  005048  500C               	movf	(??___xxtofl+3)^0,w,c
  8900  00504A  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8901  00504C  500D               	movf	___xxtofl@sign^0,w,c
  8902  00504E  B4D8               	btfsc	status,2,c
  8903  005050  EF2C  F028         	goto	u5661
  8904  005054  EF2E  F028         	goto	u5660
  8905  005058                     u5661:
  8906  005058  EF36  F028         	goto	l6540
  8907  00505C                     u5660:
  8908  00505C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8909  00505E  EF35  F028         	goto	u5670
  8910  005062  EF33  F028         	goto	u5671
  8911  005066                     u5671:
  8912  005066  EF36  F028         	goto	l6540
  8913  00506A                     u5670:
  8914  00506A  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8915  00506C                     l6540:
  8916  00506C  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8917  005070  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8918  005074  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8919  005078  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8920  00507C                     l1391:
  8921  00507C  0012               	return		;funcret
  8922  00507E                     __end_of___xxtofl:
  8923                           	callstack 0
  8924                           
  8925 ;; *************** function _VL53L0X_Init *****************
  8926 ;; Defined at:
  8927 ;;		line 71 in file "vl53l0x.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  data16          2   30[COMRAM] unsigned short 
  8932 ;;  data8           1   32[COMRAM] unsigned char 
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1    wreg      void 
  8935 ;; Registers used:
  8936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;Total ram usage:        4 bytes
  8947 ;; Hardware stack levels used: 1
  8948 ;; Hardware stack levels required when called: 13
  8949 ;; This function calls:
  8950 ;;		_I2C_Read1ByteRegister
  8951 ;;		_I2C_Read2ByteRegister
  8952 ;;		_I2C_ReadNBytes
  8953 ;;		_I2C_Write1ByteRegister
  8954 ;;		_I2C_WriteNBytes
  8955 ;; This function is called by:
  8956 ;;		_main
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text34
  8961  00106E                     __ptext34:
  8962                           	callstack 0
  8963  00106E                     _VL53L0X_Init:
  8964                           	callstack 17
  8965  00106E                     
  8966                           ;vl53l0x.c: 72:     uint16_t data16;;vl53l0x.c: 73:     uint8_t data8;;vl53l0x.c: 77:   
      +                            data8 = I2C_Read1ByteRegister(0x29, 0x89);
  8967  00106E  0E89               	movlw	137
  8968  001070  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8969  001072  0E29               	movlw	41
  8970  001074  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8971  001078  6E21               	movwf	VL53L0X_Init@data8^0,c
  8972                           
  8973                           ;vl53l0x.c: 78:     I2C_Write1ByteRegister(0x29, 0x89, 0x01);
  8974  00107A  0E89               	movlw	137
  8975  00107C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8976  00107E  0E01               	movlw	1
  8977  001080  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8978  001082  0E29               	movlw	41
  8979  001084  EC3D  F030         	call	_I2C_Write1ByteRegister
  8980                           
  8981                           ;vl53l0x.c: 79:     I2C_Write1ByteRegister(0x29,0x88,0x00);
  8982  001088  0E88               	movlw	136
  8983  00108A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8984  00108C  0E00               	movlw	0
  8985  00108E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8986  001090  0E29               	movlw	41
  8987  001092  EC3D  F030         	call	_I2C_Write1ByteRegister
  8988                           
  8989                           ;vl53l0x.c: 80:     data8 = I2C_Read1ByteRegister(0x29, 0xC0);
  8990  001096  0EC0               	movlw	192
  8991  001098  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8992  00109A  0E29               	movlw	41
  8993  00109C  ECCB  F02F         	call	_I2C_Read1ByteRegister
  8994  0010A0  6E21               	movwf	VL53L0X_Init@data8^0,c
  8995                           
  8996                           ;vl53l0x.c: 81:     data16 = I2C_Read2ByteRegister(0x29, 0xF8);
  8997  0010A2  0EF8               	movlw	248
  8998  0010A4  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  8999  0010A6  0E29               	movlw	41
  9000  0010A8  ECD2  F02E         	call	_I2C_Read2ByteRegister
  9001  0010AC  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
  9002  0010B0  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
  9003  0010B4                     
  9004                           ;vl53l0x.c: 82:         writeBuffer[0] = 0x04;
  9005  0010B4  0E04               	movlw	4
  9006  0010B6  0100               	movlb	0	; () banked
  9007  0010B8  6FA5               	movwf	_writeBuffer& (0+255),b
  9008  0010BA                     
  9009                           ; BSR set to: 0
  9010                           ;vl53l0x.c: 83:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
  9011  0010BA  0EA5               	movlw	low _writeBuffer
  9012  0010BC  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9013  0010BE  0E00               	movlw	high _writeBuffer
  9014  0010C0  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9015  0010C2  0E00               	movlw	0
  9016  0010C4  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9017  0010C6  0E01               	movlw	1
  9018  0010C8  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9019  0010CA  0E29               	movlw	41
  9020  0010CC  EC38  F031         	call	_I2C_WriteNBytes
  9021  0010D0                     
  9022                           ;vl53l0x.c: 84:     I2C_ReadNBytes(0x29, &readBuffer[0], 4);
  9023  0010D0  0E60               	movlw	low _readBuffer
  9024  0010D2  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9025  0010D4  0E01               	movlw	high _readBuffer
  9026  0010D6  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9027  0010D8  0E00               	movlw	0
  9028  0010DA  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9029  0010DC  0E04               	movlw	4
  9030  0010DE  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9031  0010E0  0E29               	movlw	41
  9032  0010E2  ECDD  F031         	call	_I2C_ReadNBytes
  9033  0010E6                     
  9034                           ;vl53l0x.c: 85:     data16 = I2C_Read2ByteRegister(0x29, 0x20);
  9035  0010E6  0E20               	movlw	32
  9036  0010E8  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  9037  0010EA  0E29               	movlw	41
  9038  0010EC  ECD2  F02E         	call	_I2C_Read2ByteRegister
  9039  0010F0  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
  9040  0010F4  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
  9041  0010F8                     
  9042                           ;vl53l0x.c: 86:     data16 = I2C_Read2ByteRegister(0x29, 0x28);
  9043  0010F8  0E28               	movlw	40
  9044  0010FA  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  9045  0010FC  0E29               	movlw	41
  9046  0010FE  ECD2  F02E         	call	_I2C_Read2ByteRegister
  9047  001102  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
  9048  001106  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
  9049  00110A                     
  9050                           ;vl53l0x.c: 87:     data16 = I2C_Read2ByteRegister(0x29, 0x44);
  9051  00110A  0E44               	movlw	68
  9052  00110C  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  9053  00110E  0E29               	movlw	41
  9054  001110  ECD2  F02E         	call	_I2C_Read2ByteRegister
  9055  001114  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
  9056  001118  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
  9057  00111C                     
  9058                           ;vl53l0x.c: 88:     data16 = I2C_Read2ByteRegister(0x29, 0x64);
  9059  00111C  0E64               	movlw	100
  9060  00111E  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  9061  001120  0E29               	movlw	41
  9062  001122  ECD2  F02E         	call	_I2C_Read2ByteRegister
  9063  001126  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
  9064  00112A  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
  9065  00112E                     
  9066                           ;vl53l0x.c: 89:     data16 = I2C_Read2ByteRegister(0x29, 0x64);
  9067  00112E  0E64               	movlw	100
  9068  001130  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  9069  001132  0E29               	movlw	41
  9070  001134  ECD2  F02E         	call	_I2C_Read2ByteRegister
  9071  001138  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
  9072  00113C  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
  9073  001140  0E01               	movlw	1
  9074  001142  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9075  001144  0E29               	movlw	41
  9076  001146  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9077  00114A  0E01               	movlw	1
  9078  00114C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9079  00114E  0E29               	movlw	41
  9080  001150  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9081  001154  0E50               	movlw	80
  9082  001156  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9083  001158  0E29               	movlw	41
  9084  00115A  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9085  00115E  0E46               	movlw	70
  9086  001160  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9087  001162  0E29               	movlw	41
  9088  001164  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9089  001168  0E50               	movlw	80
  9090  00116A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9091  00116C  0E29               	movlw	41
  9092  00116E  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9093  001172  0E50               	movlw	80
  9094  001174  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9095  001176  0E29               	movlw	41
  9096  001178  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9097  00117C                     
  9098                           ;vl53l0x.c: 96:     data16 = I2C_Read2ByteRegister(0x29, 0x51);
  9099  00117C  0E51               	movlw	81
  9100  00117E  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  9101  001180  0E29               	movlw	41
  9102  001182  ECD2  F02E         	call	_I2C_Read2ByteRegister
  9103  001186  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
  9104  00118A  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
  9105  00118E  0E01               	movlw	1
  9106  001190  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9107  001192  0E29               	movlw	41
  9108  001194  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9109  001198  0E50               	movlw	80
  9110  00119A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9111  00119C  0E29               	movlw	41
  9112  00119E  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9113  0011A2                     
  9114                           ;vl53l0x.c: 99:     data16 = I2C_Read2ByteRegister(0x29, 0x51);
  9115  0011A2  0E51               	movlw	81
  9116  0011A4  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  9117  0011A6  0E29               	movlw	41
  9118  0011A8  ECD2  F02E         	call	_I2C_Read2ByteRegister
  9119  0011AC  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
  9120  0011B0  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
  9121  0011B4  0E70               	movlw	112
  9122  0011B6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9123  0011B8  0E29               	movlw	41
  9124  0011BA  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9125  0011BE                     
  9126                           ;vl53l0x.c: 101:     data16 = I2C_Read2ByteRegister(0x29, 0x71);
  9127  0011BE  0E71               	movlw	113
  9128  0011C0  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  9129  0011C2  0E29               	movlw	41
  9130  0011C4  ECD2  F02E         	call	_I2C_Read2ByteRegister
  9131  0011C8  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
  9132  0011CC  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
  9133  0011D0                     
  9134                           ;vl53l0x.c: 102:     I2C_Write1ByteRegister(0x29, 0x80, 0x01);
  9135  0011D0  0E80               	movlw	128
  9136  0011D2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9137  0011D4  0E01               	movlw	1
  9138  0011D6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9139  0011D8  0E29               	movlw	41
  9140  0011DA  EC3D  F030         	call	_I2C_Write1ByteRegister
  9141  0011DE                     
  9142                           ;vl53l0x.c: 103:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
  9143  0011DE  0EFF               	movlw	255
  9144  0011E0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9145  0011E2  0E01               	movlw	1
  9146  0011E4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9147  0011E6  0E29               	movlw	41
  9148  0011E8  EC3D  F030         	call	_I2C_Write1ByteRegister
  9149  0011EC                     
  9150                           ;vl53l0x.c: 104:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
  9151  0011EC  0E00               	movlw	0
  9152  0011EE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9153  0011F0  0E00               	movlw	0
  9154  0011F2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9155  0011F4  0E29               	movlw	41
  9156  0011F6  EC3D  F030         	call	_I2C_Write1ByteRegister
  9157  0011FA  0E91               	movlw	145
  9158  0011FC  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9159  0011FE  0E29               	movlw	41
  9160  001200  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9161  001204                     
  9162                           ;vl53l0x.c: 106:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
  9163  001204  0E00               	movlw	0
  9164  001206  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9165  001208  0E01               	movlw	1
  9166  00120A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9167  00120C  0E29               	movlw	41
  9168  00120E  EC3D  F030         	call	_I2C_Write1ByteRegister
  9169  001212                     
  9170                           ;vl53l0x.c: 107:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
  9171  001212  0EFF               	movlw	255
  9172  001214  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9173  001216  0E00               	movlw	0
  9174  001218  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9175  00121A  0E29               	movlw	41
  9176  00121C  EC3D  F030         	call	_I2C_Write1ByteRegister
  9177  001220                     
  9178                           ;vl53l0x.c: 108:     I2C_Write1ByteRegister(0x29, 0x80, 0x00);
  9179  001220  0E80               	movlw	128
  9180  001222  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9181  001224  0E00               	movlw	0
  9182  001226  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9183  001228  0E29               	movlw	41
  9184  00122A  EC3D  F030         	call	_I2C_Write1ByteRegister
  9185  00122E                     
  9186                           ;vl53l0x.c: 109:         writeBuffer[0] = 0x44;
  9187  00122E  0E44               	movlw	68
  9188  001230  0100               	movlb	0	; () banked
  9189  001232  6FA5               	movwf	_writeBuffer& (0+255),b
  9190  001234                     
  9191                           ; BSR set to: 0
  9192                           ;vl53l0x.c: 110:         writeBuffer[1] = 0x00;
  9193  001234  0E00               	movlw	0
  9194  001236  6FA6               	movwf	(_writeBuffer+1)& (0+255),b
  9195  001238                     
  9196                           ; BSR set to: 0
  9197                           ;vl53l0x.c: 111:         writeBuffer[2] = 0x20;
  9198  001238  0E20               	movlw	32
  9199  00123A  6FA7               	movwf	(_writeBuffer+2)& (0+255),b
  9200                           
  9201                           ;vl53l0x.c: 112:     I2C_WriteNBytes(0x29, &writeBuffer[0], 3);
  9202  00123C  0EA5               	movlw	low _writeBuffer
  9203  00123E  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9204  001240  0E00               	movlw	high _writeBuffer
  9205  001242  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9206  001244  0E00               	movlw	0
  9207  001246  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9208  001248  0E03               	movlw	3
  9209  00124A  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9210  00124C  0E29               	movlw	41
  9211  00124E  EC38  F031         	call	_I2C_WriteNBytes
  9212                           
  9213                           ;vl53l0x.c: 113:     data8 = I2C_Read1ByteRegister(0x29, 0x60);
  9214  001252  0E60               	movlw	96
  9215  001254  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9216  001256  0E29               	movlw	41
  9217  001258  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9218  00125C  6E21               	movwf	VL53L0X_Init@data8^0,c
  9219                           
  9220                           ;vl53l0x.c: 114:     I2C_Write1ByteRegister(0x29, 0x60, 0x00);
  9221  00125E  0E60               	movlw	96
  9222  001260  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9223  001262  0E00               	movlw	0
  9224  001264  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9225  001266  0E29               	movlw	41
  9226  001268  EC3D  F030         	call	_I2C_Write1ByteRegister
  9227                           
  9228                           ;vl53l0x.c: 115:     data8 = I2C_Read1ByteRegister(0x29, 0x60);
  9229  00126C  0E60               	movlw	96
  9230  00126E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9231  001270  0E29               	movlw	41
  9232  001272  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9233  001276  6E21               	movwf	VL53L0X_Init@data8^0,c
  9234                           
  9235                           ;vl53l0x.c: 116:     I2C_Write1ByteRegister(0x29, 0x60, 0x00);
  9236  001278  0E60               	movlw	96
  9237  00127A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9238  00127C  0E00               	movlw	0
  9239  00127E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9240  001280  0E29               	movlw	41
  9241  001282  EC3D  F030         	call	_I2C_Write1ByteRegister
  9242                           
  9243                           ;vl53l0x.c: 117:     data8 = I2C_Read1ByteRegister(0x29, 0x60);
  9244  001286  0E60               	movlw	96
  9245  001288  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9246  00128A  0E29               	movlw	41
  9247  00128C  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9248  001290  6E21               	movwf	VL53L0X_Init@data8^0,c
  9249                           
  9250                           ;vl53l0x.c: 118:     I2C_Write1ByteRegister(0x29, 0x60, 0x02);
  9251  001292  0E60               	movlw	96
  9252  001294  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9253  001296  0E02               	movlw	2
  9254  001298  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9255  00129A  0E29               	movlw	41
  9256  00129C  EC3D  F030         	call	_I2C_Write1ByteRegister
  9257                           
  9258                           ;vl53l0x.c: 119:     data8 = I2C_Read1ByteRegister(0x29, 0x60);
  9259  0012A0  0E60               	movlw	96
  9260  0012A2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9261  0012A4  0E29               	movlw	41
  9262  0012A6  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9263  0012AA  6E21               	movwf	VL53L0X_Init@data8^0,c
  9264                           
  9265                           ;vl53l0x.c: 120:     I2C_Write1ByteRegister(0x29, 0x60, 0x12);
  9266  0012AC  0E60               	movlw	96
  9267  0012AE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9268  0012B0  0E12               	movlw	18
  9269  0012B2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9270  0012B4  0E29               	movlw	41
  9271  0012B6  EC3D  F030         	call	_I2C_Write1ByteRegister
  9272  0012BA                     
  9273                           ;vl53l0x.c: 121:         writeBuffer[0] = 0x44;
  9274  0012BA  0E44               	movlw	68
  9275  0012BC  0100               	movlb	0	; () banked
  9276  0012BE  6FA5               	movwf	_writeBuffer& (0+255),b
  9277  0012C0                     
  9278                           ; BSR set to: 0
  9279                           ;vl53l0x.c: 122:         writeBuffer[1] = 0x00;
  9280  0012C0  0E00               	movlw	0
  9281  0012C2  6FA6               	movwf	(_writeBuffer+1)& (0+255),b
  9282  0012C4                     
  9283                           ; BSR set to: 0
  9284                           ;vl53l0x.c: 123:         writeBuffer[2] = 0x20;
  9285  0012C4  0E20               	movlw	32
  9286  0012C6  6FA7               	movwf	(_writeBuffer+2)& (0+255),b
  9287  0012C8                     
  9288                           ; BSR set to: 0
  9289                           ;vl53l0x.c: 124:     I2C_WriteNBytes(0x29, &writeBuffer[0], 3);
  9290  0012C8  0EA5               	movlw	low _writeBuffer
  9291  0012CA  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9292  0012CC  0E00               	movlw	high _writeBuffer
  9293  0012CE  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9294  0012D0  0E00               	movlw	0
  9295  0012D2  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9296  0012D4  0E03               	movlw	3
  9297  0012D6  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9298  0012D8  0E29               	movlw	41
  9299  0012DA  EC38  F031         	call	_I2C_WriteNBytes
  9300  0012DE                     
  9301                           ;vl53l0x.c: 125:     I2C_Write1ByteRegister(0x29, 0x01, 0xFF);
  9302  0012DE  0E01               	movlw	1
  9303  0012E0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9304  0012E2  0EFF               	movlw	255
  9305  0012E4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9306  0012E6  0E29               	movlw	41
  9307  0012E8  EC3D  F030         	call	_I2C_Write1ByteRegister
  9308  0012EC                     
  9309                           ;vl53l0x.c: 126:     I2C_Write1ByteRegister(0x29, 0x8A, 0x29);
  9310  0012EC  0E8A               	movlw	138
  9311  0012EE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9312  0012F0  0E29               	movlw	41
  9313  0012F2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9314  0012F4  0E29               	movlw	41
  9315  0012F6  EC3D  F030         	call	_I2C_Write1ByteRegister
  9316  0012FA                     
  9317                           ;vl53l0x.c: 127:     I2C_Write1ByteRegister(0x29, 0x80, 0x01);
  9318  0012FA  0E80               	movlw	128
  9319  0012FC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9320  0012FE  0E01               	movlw	1
  9321  001300  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9322  001302  0E29               	movlw	41
  9323  001304  EC3D  F030         	call	_I2C_Write1ByteRegister
  9324  001308                     
  9325                           ;vl53l0x.c: 128:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
  9326  001308  0EFF               	movlw	255
  9327  00130A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9328  00130C  0E01               	movlw	1
  9329  00130E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9330  001310  0E29               	movlw	41
  9331  001312  EC3D  F030         	call	_I2C_Write1ByteRegister
  9332  001316                     
  9333                           ;vl53l0x.c: 129:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
  9334  001316  0E00               	movlw	0
  9335  001318  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9336  00131A  0E00               	movlw	0
  9337  00131C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9338  00131E  0E29               	movlw	41
  9339  001320  EC3D  F030         	call	_I2C_Write1ByteRegister
  9340  001324                     
  9341                           ;vl53l0x.c: 130:     I2C_Write1ByteRegister(0x29, 0xFF, 0x06);
  9342  001324  0EFF               	movlw	255
  9343  001326  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9344  001328  0E06               	movlw	6
  9345  00132A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9346  00132C  0E29               	movlw	41
  9347  00132E  EC3D  F030         	call	_I2C_Write1ByteRegister
  9348  001332  0E83               	movlw	131
  9349  001334  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9350  001336  0E29               	movlw	41
  9351  001338  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9352  00133C                     
  9353                           ;vl53l0x.c: 132:     I2C_Write1ByteRegister(0x29, 0x83, 0x05);
  9354  00133C  0E83               	movlw	131
  9355  00133E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9356  001340  0E05               	movlw	5
  9357  001342  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9358  001344  0E29               	movlw	41
  9359  001346  EC3D  F030         	call	_I2C_Write1ByteRegister
  9360  00134A                     
  9361                           ;vl53l0x.c: 133:     I2C_Write1ByteRegister(0x29, 0xFF, 0x07);
  9362  00134A  0EFF               	movlw	255
  9363  00134C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9364  00134E  0E07               	movlw	7
  9365  001350  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9366  001352  0E29               	movlw	41
  9367  001354  EC3D  F030         	call	_I2C_Write1ByteRegister
  9368  001358                     
  9369                           ;vl53l0x.c: 134:     I2C_Write1ByteRegister(0x29, 0x81, 0x01);
  9370  001358  0E81               	movlw	129
  9371  00135A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9372  00135C  0E01               	movlw	1
  9373  00135E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9374  001360  0E29               	movlw	41
  9375  001362  EC3D  F030         	call	_I2C_Write1ByteRegister
  9376  001366                     
  9377                           ;vl53l0x.c: 135:     I2C_Write1ByteRegister(0x29, 0x80, 0x01);
  9378  001366  0E80               	movlw	128
  9379  001368  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9380  00136A  0E01               	movlw	1
  9381  00136C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9382  00136E  0E29               	movlw	41
  9383  001370  EC3D  F030         	call	_I2C_Write1ByteRegister
  9384  001374                     
  9385                           ;vl53l0x.c: 136:     I2C_Write1ByteRegister(0x29, 0x94, 0x02);
  9386  001374  0E94               	movlw	148
  9387  001376  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9388  001378  0E02               	movlw	2
  9389  00137A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9390  00137C  0E29               	movlw	41
  9391  00137E  EC3D  F030         	call	_I2C_Write1ByteRegister
  9392  001382                     
  9393                           ;vl53l0x.c: 137:     I2C_Write1ByteRegister(0x29, 0x83, 0x00);
  9394  001382  0E83               	movlw	131
  9395  001384  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9396  001386  0E00               	movlw	0
  9397  001388  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9398  00138A  0E29               	movlw	41
  9399  00138C  EC3D  F030         	call	_I2C_Write1ByteRegister
  9400  001390  0E83               	movlw	131
  9401  001392  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9402  001394  0E29               	movlw	41
  9403  001396  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9404  00139A                     
  9405                           ;vl53l0x.c: 139:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9406  00139A  0E83               	movlw	131
  9407  00139C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9408  00139E  0E01               	movlw	1
  9409  0013A0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9410  0013A2  0E29               	movlw	41
  9411  0013A4  EC3D  F030         	call	_I2C_Write1ByteRegister
  9412  0013A8  0E90               	movlw	144
  9413  0013AA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9414  0013AC  0E29               	movlw	41
  9415  0013AE  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9416  0013B2                     
  9417                           ;vl53l0x.c: 141:     I2C_Write1ByteRegister(0x29, 0x94, 0x7B);
  9418  0013B2  0E94               	movlw	148
  9419  0013B4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9420  0013B6  0E7B               	movlw	123
  9421  0013B8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9422  0013BA  0E29               	movlw	41
  9423  0013BC  EC3D  F030         	call	_I2C_Write1ByteRegister
  9424  0013C0                     
  9425                           ;vl53l0x.c: 142:     I2C_Write1ByteRegister(0x29, 0x83, 0x00);
  9426  0013C0  0E83               	movlw	131
  9427  0013C2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9428  0013C4  0E00               	movlw	0
  9429  0013C6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9430  0013C8  0E29               	movlw	41
  9431  0013CA  EC3D  F030         	call	_I2C_Write1ByteRegister
  9432  0013CE  0E83               	movlw	131
  9433  0013D0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9434  0013D2  0E29               	movlw	41
  9435  0013D4  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9436  0013D8                     
  9437                           ;vl53l0x.c: 144:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9438  0013D8  0E83               	movlw	131
  9439  0013DA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9440  0013DC  0E01               	movlw	1
  9441  0013DE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9442  0013E0  0E29               	movlw	41
  9443  0013E2  EC3D  F030         	call	_I2C_Write1ByteRegister
  9444  0013E6  0E90               	movlw	144
  9445  0013E8  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9446  0013EA  0E29               	movlw	41
  9447  0013EC  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9448  0013F0                     
  9449                           ;vl53l0x.c: 146:     I2C_Write1ByteRegister(0x29, 0x94, 0x77);
  9450  0013F0  0E94               	movlw	148
  9451  0013F2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9452  0013F4  0E77               	movlw	119
  9453  0013F6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9454  0013F8  0E29               	movlw	41
  9455  0013FA  EC3D  F030         	call	_I2C_Write1ByteRegister
  9456  0013FE                     
  9457                           ;vl53l0x.c: 147:     I2C_Write1ByteRegister(0x29, 0x83, 0x00);
  9458  0013FE  0E83               	movlw	131
  9459  001400  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9460  001402  0E00               	movlw	0
  9461  001404  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9462  001406  0E29               	movlw	41
  9463  001408  EC3D  F030         	call	_I2C_Write1ByteRegister
  9464  00140C  0E83               	movlw	131
  9465  00140E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9466  001410  0E29               	movlw	41
  9467  001412  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9468  001416                     
  9469                           ;vl53l0x.c: 149:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9470  001416  0E83               	movlw	131
  9471  001418  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9472  00141A  0E01               	movlw	1
  9473  00141C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9474  00141E  0E29               	movlw	41
  9475  001420  EC3D  F030         	call	_I2C_Write1ByteRegister
  9476  001424                     
  9477                           ;vl53l0x.c: 150:         writeBuffer[0] = 0x90;
  9478  001424  0E90               	movlw	144
  9479  001426  0100               	movlb	0	; () banked
  9480  001428  6FA5               	movwf	_writeBuffer& (0+255),b
  9481                           
  9482                           ;vl53l0x.c: 151:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
  9483  00142A  0EA5               	movlw	low _writeBuffer
  9484  00142C  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9485  00142E  0E00               	movlw	high _writeBuffer
  9486  001430  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9487  001432  0E00               	movlw	0
  9488  001434  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9489  001436  0E01               	movlw	1
  9490  001438  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9491  00143A  0E29               	movlw	41
  9492  00143C  EC38  F031         	call	_I2C_WriteNBytes
  9493                           
  9494                           ;vl53l0x.c: 152:     I2C_ReadNBytes(0x29, &readBuffer[0], 4);
  9495  001440  0E60               	movlw	low _readBuffer
  9496  001442  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9497  001444  0E01               	movlw	high _readBuffer
  9498  001446  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9499  001448  0E00               	movlw	0
  9500  00144A  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9501  00144C  0E04               	movlw	4
  9502  00144E  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9503  001450  0E29               	movlw	41
  9504  001452  ECDD  F031         	call	_I2C_ReadNBytes
  9505                           
  9506                           ;vl53l0x.c: 153:     I2C_Write1ByteRegister(0x29, 0x94, 0x78);
  9507  001456  0E94               	movlw	148
  9508  001458  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9509  00145A  0E78               	movlw	120
  9510  00145C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9511  00145E  0E29               	movlw	41
  9512  001460  EC3D  F030         	call	_I2C_Write1ByteRegister
  9513                           
  9514                           ;vl53l0x.c: 154:     I2C_Write1ByteRegister(0x29, 0x83, 0x00);
  9515  001464  0E83               	movlw	131
  9516  001466  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9517  001468  0E00               	movlw	0
  9518  00146A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9519  00146C  0E29               	movlw	41
  9520  00146E  EC3D  F030         	call	_I2C_Write1ByteRegister
  9521  001472  0E83               	movlw	131
  9522  001474  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9523  001476  0E29               	movlw	41
  9524  001478  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9525                           
  9526                           ;vl53l0x.c: 156:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9527  00147C  0E83               	movlw	131
  9528  00147E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9529  001480  0E01               	movlw	1
  9530  001482  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9531  001484  0E29               	movlw	41
  9532  001486  EC3D  F030         	call	_I2C_Write1ByteRegister
  9533  00148A                     
  9534                           ;vl53l0x.c: 157:         writeBuffer[0] = 0x90;
  9535  00148A  0E90               	movlw	144
  9536  00148C  0100               	movlb	0	; () banked
  9537  00148E  6FA5               	movwf	_writeBuffer& (0+255),b
  9538  001490                     
  9539                           ; BSR set to: 0
  9540                           ;vl53l0x.c: 158:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
  9541  001490  0EA5               	movlw	low _writeBuffer
  9542  001492  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9543  001494  0E00               	movlw	high _writeBuffer
  9544  001496  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9545  001498  0E00               	movlw	0
  9546  00149A  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9547  00149C  0E01               	movlw	1
  9548  00149E  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9549  0014A0  0E29               	movlw	41
  9550  0014A2  EC38  F031         	call	_I2C_WriteNBytes
  9551  0014A6                     
  9552                           ;vl53l0x.c: 159:     I2C_ReadNBytes(0x29, &readBuffer[0], 4);
  9553  0014A6  0E60               	movlw	low _readBuffer
  9554  0014A8  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9555  0014AA  0E01               	movlw	high _readBuffer
  9556  0014AC  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9557  0014AE  0E00               	movlw	0
  9558  0014B0  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9559  0014B2  0E04               	movlw	4
  9560  0014B4  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9561  0014B6  0E29               	movlw	41
  9562  0014B8  ECDD  F031         	call	_I2C_ReadNBytes
  9563  0014BC                     
  9564                           ;vl53l0x.c: 160:     I2C_Write1ByteRegister(0x29, 0x94, 0x79);
  9565  0014BC  0E94               	movlw	148
  9566  0014BE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9567  0014C0  0E79               	movlw	121
  9568  0014C2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9569  0014C4  0E29               	movlw	41
  9570  0014C6  EC3D  F030         	call	_I2C_Write1ByteRegister
  9571  0014CA                     
  9572                           ;vl53l0x.c: 161:     I2C_Write1ByteRegister(0x29, 0x83, 0x00);
  9573  0014CA  0E83               	movlw	131
  9574  0014CC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9575  0014CE  0E00               	movlw	0
  9576  0014D0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9577  0014D2  0E29               	movlw	41
  9578  0014D4  EC3D  F030         	call	_I2C_Write1ByteRegister
  9579  0014D8  0E83               	movlw	131
  9580  0014DA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9581  0014DC  0E29               	movlw	41
  9582  0014DE  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9583  0014E2                     
  9584                           ;vl53l0x.c: 163:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9585  0014E2  0E83               	movlw	131
  9586  0014E4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9587  0014E6  0E01               	movlw	1
  9588  0014E8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9589  0014EA  0E29               	movlw	41
  9590  0014EC  EC3D  F030         	call	_I2C_Write1ByteRegister
  9591  0014F0                     
  9592                           ;vl53l0x.c: 164:         writeBuffer[0] = 0x90;
  9593  0014F0  0E90               	movlw	144
  9594  0014F2  0100               	movlb	0	; () banked
  9595  0014F4  6FA5               	movwf	_writeBuffer& (0+255),b
  9596                           
  9597                           ;vl53l0x.c: 165:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
  9598  0014F6  0EA5               	movlw	low _writeBuffer
  9599  0014F8  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9600  0014FA  0E00               	movlw	high _writeBuffer
  9601  0014FC  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9602  0014FE  0E00               	movlw	0
  9603  001500  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9604  001502  0E01               	movlw	1
  9605  001504  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9606  001506  0E29               	movlw	41
  9607  001508  EC38  F031         	call	_I2C_WriteNBytes
  9608                           
  9609                           ;vl53l0x.c: 166:     I2C_ReadNBytes(0x29, &readBuffer[0], 4);
  9610  00150C  0E60               	movlw	low _readBuffer
  9611  00150E  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9612  001510  0E01               	movlw	high _readBuffer
  9613  001512  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9614  001514  0E00               	movlw	0
  9615  001516  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9616  001518  0E04               	movlw	4
  9617  00151A  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9618  00151C  0E29               	movlw	41
  9619  00151E  ECDD  F031         	call	_I2C_ReadNBytes
  9620                           
  9621                           ;vl53l0x.c: 167:     I2C_Write1ByteRegister(0x29, 0x94, 0x7A);
  9622  001522  0E94               	movlw	148
  9623  001524  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9624  001526  0E7A               	movlw	122
  9625  001528  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9626  00152A  0E29               	movlw	41
  9627  00152C  EC3D  F030         	call	_I2C_Write1ByteRegister
  9628                           
  9629                           ;vl53l0x.c: 168:     I2C_Write1ByteRegister(0x29, 0x83, 0x00);
  9630  001530  0E83               	movlw	131
  9631  001532  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9632  001534  0E00               	movlw	0
  9633  001536  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9634  001538  0E29               	movlw	41
  9635  00153A  EC3D  F030         	call	_I2C_Write1ByteRegister
  9636  00153E  0E83               	movlw	131
  9637  001540  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9638  001542  0E29               	movlw	41
  9639  001544  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9640                           
  9641                           ;vl53l0x.c: 170:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9642  001548  0E83               	movlw	131
  9643  00154A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9644  00154C  0E01               	movlw	1
  9645  00154E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9646  001550  0E29               	movlw	41
  9647  001552  EC3D  F030         	call	_I2C_Write1ByteRegister
  9648  001556                     
  9649                           ;vl53l0x.c: 171:         writeBuffer[0] = 0x90;
  9650  001556  0E90               	movlw	144
  9651  001558  0100               	movlb	0	; () banked
  9652  00155A  6FA5               	movwf	_writeBuffer& (0+255),b
  9653  00155C                     
  9654                           ; BSR set to: 0
  9655                           ;vl53l0x.c: 172:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
  9656  00155C  0EA5               	movlw	low _writeBuffer
  9657  00155E  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9658  001560  0E00               	movlw	high _writeBuffer
  9659  001562  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9660  001564  0E00               	movlw	0
  9661  001566  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9662  001568  0E01               	movlw	1
  9663  00156A  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9664  00156C  0E29               	movlw	41
  9665  00156E  EC38  F031         	call	_I2C_WriteNBytes
  9666  001572                     
  9667                           ;vl53l0x.c: 173:     I2C_ReadNBytes(0x29, &readBuffer[0], 4);
  9668  001572  0E60               	movlw	low _readBuffer
  9669  001574  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9670  001576  0E01               	movlw	high _readBuffer
  9671  001578  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9672  00157A  0E00               	movlw	0
  9673  00157C  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9674  00157E  0E04               	movlw	4
  9675  001580  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9676  001582  0E29               	movlw	41
  9677  001584  ECDD  F031         	call	_I2C_ReadNBytes
  9678  001588                     
  9679                           ;vl53l0x.c: 174:     I2C_Write1ByteRegister(0x29, 0x81, 0x00);
  9680  001588  0E81               	movlw	129
  9681  00158A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9682  00158C  0E00               	movlw	0
  9683  00158E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9684  001590  0E29               	movlw	41
  9685  001592  EC3D  F030         	call	_I2C_Write1ByteRegister
  9686  001596                     
  9687                           ;vl53l0x.c: 175:     I2C_Write1ByteRegister(0x29, 0xFF, 0x06);
  9688  001596  0EFF               	movlw	255
  9689  001598  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9690  00159A  0E06               	movlw	6
  9691  00159C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9692  00159E  0E29               	movlw	41
  9693  0015A0  EC3D  F030         	call	_I2C_Write1ByteRegister
  9694  0015A4  0E83               	movlw	131
  9695  0015A6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9696  0015A8  0E29               	movlw	41
  9697  0015AA  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9698  0015AE                     
  9699                           ;vl53l0x.c: 177:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9700  0015AE  0E83               	movlw	131
  9701  0015B0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9702  0015B2  0E01               	movlw	1
  9703  0015B4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9704  0015B6  0E29               	movlw	41
  9705  0015B8  EC3D  F030         	call	_I2C_Write1ByteRegister
  9706  0015BC                     
  9707                           ;vl53l0x.c: 178:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
  9708  0015BC  0EFF               	movlw	255
  9709  0015BE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9710  0015C0  0E01               	movlw	1
  9711  0015C2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9712  0015C4  0E29               	movlw	41
  9713  0015C6  EC3D  F030         	call	_I2C_Write1ByteRegister
  9714  0015CA                     
  9715                           ;vl53l0x.c: 179:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
  9716  0015CA  0E00               	movlw	0
  9717  0015CC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9718  0015CE  0E01               	movlw	1
  9719  0015D0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9720  0015D2  0E29               	movlw	41
  9721  0015D4  EC3D  F030         	call	_I2C_Write1ByteRegister
  9722  0015D8                     
  9723                           ;vl53l0x.c: 180:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
  9724  0015D8  0EFF               	movlw	255
  9725  0015DA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9726  0015DC  0E00               	movlw	0
  9727  0015DE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9728  0015E0  0E29               	movlw	41
  9729  0015E2  EC3D  F030         	call	_I2C_Write1ByteRegister
  9730  0015E6                     
  9731                           ;vl53l0x.c: 181:     I2C_Write1ByteRegister(0x29, 0x80, 0x00);
  9732  0015E6  0E80               	movlw	128
  9733  0015E8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9734  0015EA  0E00               	movlw	0
  9735  0015EC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9736  0015EE  0E29               	movlw	41
  9737  0015F0  EC3D  F030         	call	_I2C_Write1ByteRegister
  9738  0015F4  0EC0               	movlw	192
  9739  0015F6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9740  0015F8  0E29               	movlw	41
  9741  0015FA  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9742  0015FE  0EC2               	movlw	194
  9743  001600  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9744  001602  0E29               	movlw	41
  9745  001604  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9746  001608                     
  9747                           ;vl53l0x.c: 184:     I2C_Write1ByteRegister(0x29, 0x80, 0x01);
  9748  001608  0E80               	movlw	128
  9749  00160A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9750  00160C  0E01               	movlw	1
  9751  00160E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9752  001610  0E29               	movlw	41
  9753  001612  EC3D  F030         	call	_I2C_Write1ByteRegister
  9754  001616                     
  9755                           ;vl53l0x.c: 185:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
  9756  001616  0EFF               	movlw	255
  9757  001618  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9758  00161A  0E01               	movlw	1
  9759  00161C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9760  00161E  0E29               	movlw	41
  9761  001620  EC3D  F030         	call	_I2C_Write1ByteRegister
  9762  001624                     
  9763                           ;vl53l0x.c: 186:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
  9764  001624  0E00               	movlw	0
  9765  001626  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9766  001628  0E00               	movlw	0
  9767  00162A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9768  00162C  0E29               	movlw	41
  9769  00162E  EC3D  F030         	call	_I2C_Write1ByteRegister
  9770  001632                     
  9771                           ;vl53l0x.c: 187:     I2C_Write1ByteRegister(0x29, 0xFF, 0x06);
  9772  001632  0EFF               	movlw	255
  9773  001634  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9774  001636  0E06               	movlw	6
  9775  001638  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9776  00163A  0E29               	movlw	41
  9777  00163C  EC3D  F030         	call	_I2C_Write1ByteRegister
  9778  001640  0E83               	movlw	131
  9779  001642  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9780  001644  0E29               	movlw	41
  9781  001646  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9782  00164A                     
  9783                           ;vl53l0x.c: 189:     I2C_Write1ByteRegister(0x29, 0x83, 0x05);
  9784  00164A  0E83               	movlw	131
  9785  00164C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9786  00164E  0E05               	movlw	5
  9787  001650  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9788  001652  0E29               	movlw	41
  9789  001654  EC3D  F030         	call	_I2C_Write1ByteRegister
  9790  001658                     
  9791                           ;vl53l0x.c: 190:     I2C_Write1ByteRegister(0x29, 0xFF, 0x07);
  9792  001658  0EFF               	movlw	255
  9793  00165A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9794  00165C  0E07               	movlw	7
  9795  00165E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9796  001660  0E29               	movlw	41
  9797  001662  EC3D  F030         	call	_I2C_Write1ByteRegister
  9798  001666                     
  9799                           ;vl53l0x.c: 191:     I2C_Write1ByteRegister(0x29, 0x81, 0x01);
  9800  001666  0E81               	movlw	129
  9801  001668  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9802  00166A  0E01               	movlw	1
  9803  00166C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9804  00166E  0E29               	movlw	41
  9805  001670  EC3D  F030         	call	_I2C_Write1ByteRegister
  9806  001674                     
  9807                           ;vl53l0x.c: 192:     I2C_Write1ByteRegister(0x29, 0x80, 0x01);
  9808  001674  0E80               	movlw	128
  9809  001676  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9810  001678  0E01               	movlw	1
  9811  00167A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9812  00167C  0E29               	movlw	41
  9813  00167E  EC3D  F030         	call	_I2C_Write1ByteRegister
  9814  001682                     
  9815                           ;vl53l0x.c: 193:     I2C_Write1ByteRegister(0x29, 0x94, 0x6B);
  9816  001682  0E94               	movlw	148
  9817  001684  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9818  001686  0E6B               	movlw	107
  9819  001688  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9820  00168A  0E29               	movlw	41
  9821  00168C  EC3D  F030         	call	_I2C_Write1ByteRegister
  9822  001690                     
  9823                           ;vl53l0x.c: 194:     I2C_Write1ByteRegister(0x29, 0x83, 0x00);
  9824  001690  0E83               	movlw	131
  9825  001692  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9826  001694  0E00               	movlw	0
  9827  001696  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9828  001698  0E29               	movlw	41
  9829  00169A  EC3D  F030         	call	_I2C_Write1ByteRegister
  9830  00169E  0E83               	movlw	131
  9831  0016A0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9832  0016A2  0E29               	movlw	41
  9833  0016A4  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9834  0016A8                     
  9835                           ;vl53l0x.c: 196:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9836  0016A8  0E83               	movlw	131
  9837  0016AA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9838  0016AC  0E01               	movlw	1
  9839  0016AE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9840  0016B0  0E29               	movlw	41
  9841  0016B2  EC3D  F030         	call	_I2C_Write1ByteRegister
  9842                           
  9843                           ;vl53l0x.c: 197:         writeBuffer[0] = 0x90;
  9844  0016B6  0E90               	movlw	144
  9845  0016B8  0100               	movlb	0	; () banked
  9846  0016BA  6FA5               	movwf	_writeBuffer& (0+255),b
  9847  0016BC                     
  9848                           ; BSR set to: 0
  9849                           ;vl53l0x.c: 198:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
  9850  0016BC  0EA5               	movlw	low _writeBuffer
  9851  0016BE  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9852  0016C0  0E00               	movlw	high _writeBuffer
  9853  0016C2  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9854  0016C4  0E00               	movlw	0
  9855  0016C6  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9856  0016C8  0E01               	movlw	1
  9857  0016CA  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9858  0016CC  0E29               	movlw	41
  9859  0016CE  EC38  F031         	call	_I2C_WriteNBytes
  9860  0016D2                     
  9861                           ;vl53l0x.c: 199:     I2C_ReadNBytes(0x29, &readBuffer[0], 4);
  9862  0016D2  0E60               	movlw	low _readBuffer
  9863  0016D4  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9864  0016D6  0E01               	movlw	high _readBuffer
  9865  0016D8  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9866  0016DA  0E00               	movlw	0
  9867  0016DC  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9868  0016DE  0E04               	movlw	4
  9869  0016E0  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9870  0016E2  0E29               	movlw	41
  9871  0016E4  ECDD  F031         	call	_I2C_ReadNBytes
  9872  0016E8                     
  9873                           ;vl53l0x.c: 200:     I2C_Write1ByteRegister(0x29, 0x94, 0x24);
  9874  0016E8  0E94               	movlw	148
  9875  0016EA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9876  0016EC  0E24               	movlw	36
  9877  0016EE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9878  0016F0  0E29               	movlw	41
  9879  0016F2  EC3D  F030         	call	_I2C_Write1ByteRegister
  9880  0016F6                     
  9881                           ;vl53l0x.c: 201:     I2C_Write1ByteRegister(0x29, 0x83, 0x00);
  9882  0016F6  0E83               	movlw	131
  9883  0016F8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9884  0016FA  0E00               	movlw	0
  9885  0016FC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9886  0016FE  0E29               	movlw	41
  9887  001700  EC3D  F030         	call	_I2C_Write1ByteRegister
  9888  001704  0E83               	movlw	131
  9889  001706  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9890  001708  0E29               	movlw	41
  9891  00170A  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9892  00170E                     
  9893                           ;vl53l0x.c: 203:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9894  00170E  0E83               	movlw	131
  9895  001710  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9896  001712  0E01               	movlw	1
  9897  001714  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9898  001716  0E29               	movlw	41
  9899  001718  EC3D  F030         	call	_I2C_Write1ByteRegister
  9900                           
  9901                           ;vl53l0x.c: 204:         writeBuffer[0] = 0x90;
  9902  00171C  0E90               	movlw	144
  9903  00171E  0100               	movlb	0	; () banked
  9904  001720  6FA5               	movwf	_writeBuffer& (0+255),b
  9905  001722                     
  9906                           ; BSR set to: 0
  9907                           ;vl53l0x.c: 205:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
  9908  001722  0EA5               	movlw	low _writeBuffer
  9909  001724  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9910  001726  0E00               	movlw	high _writeBuffer
  9911  001728  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9912  00172A  0E00               	movlw	0
  9913  00172C  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9914  00172E  0E01               	movlw	1
  9915  001730  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9916  001732  0E29               	movlw	41
  9917  001734  EC38  F031         	call	_I2C_WriteNBytes
  9918  001738                     
  9919                           ;vl53l0x.c: 206:     I2C_ReadNBytes(0x29, &readBuffer[0], 4);
  9920  001738  0E60               	movlw	low _readBuffer
  9921  00173A  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9922  00173C  0E01               	movlw	high _readBuffer
  9923  00173E  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9924  001740  0E00               	movlw	0
  9925  001742  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9926  001744  0E04               	movlw	4
  9927  001746  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9928  001748  0E29               	movlw	41
  9929  00174A  ECDD  F031         	call	_I2C_ReadNBytes
  9930  00174E                     
  9931                           ;vl53l0x.c: 207:     I2C_Write1ByteRegister(0x29, 0x94, 0x25);
  9932  00174E  0E94               	movlw	148
  9933  001750  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9934  001752  0E25               	movlw	37
  9935  001754  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9936  001756  0E29               	movlw	41
  9937  001758  EC3D  F030         	call	_I2C_Write1ByteRegister
  9938  00175C                     
  9939                           ;vl53l0x.c: 208:     I2C_Write1ByteRegister(0x29, 0x83, 0x00);
  9940  00175C  0E83               	movlw	131
  9941  00175E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9942  001760  0E00               	movlw	0
  9943  001762  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9944  001764  0E29               	movlw	41
  9945  001766  EC3D  F030         	call	_I2C_Write1ByteRegister
  9946  00176A  0E83               	movlw	131
  9947  00176C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  9948  00176E  0E29               	movlw	41
  9949  001770  ECCB  F02F         	call	_I2C_Read1ByteRegister
  9950  001774                     
  9951                           ;vl53l0x.c: 210:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
  9952  001774  0E83               	movlw	131
  9953  001776  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9954  001778  0E01               	movlw	1
  9955  00177A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9956  00177C  0E29               	movlw	41
  9957  00177E  EC3D  F030         	call	_I2C_Write1ByteRegister
  9958                           
  9959                           ;vl53l0x.c: 211:         writeBuffer[0] = 0x90;
  9960  001782  0E90               	movlw	144
  9961  001784  0100               	movlb	0	; () banked
  9962  001786  6FA5               	movwf	_writeBuffer& (0+255),b
  9963  001788                     
  9964                           ; BSR set to: 0
  9965                           ;vl53l0x.c: 212:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
  9966  001788  0EA5               	movlw	low _writeBuffer
  9967  00178A  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9968  00178C  0E00               	movlw	high _writeBuffer
  9969  00178E  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9970  001790  0E00               	movlw	0
  9971  001792  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9972  001794  0E01               	movlw	1
  9973  001796  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9974  001798  0E29               	movlw	41
  9975  00179A  EC38  F031         	call	_I2C_WriteNBytes
  9976  00179E                     
  9977                           ;vl53l0x.c: 213:     I2C_ReadNBytes(0x29, &readBuffer[0], 4);
  9978  00179E  0E60               	movlw	low _readBuffer
  9979  0017A0  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9980  0017A2  0E01               	movlw	high _readBuffer
  9981  0017A4  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9982  0017A6  0E00               	movlw	0
  9983  0017A8  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9984  0017AA  0E04               	movlw	4
  9985  0017AC  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9986  0017AE  0E29               	movlw	41
  9987  0017B0  ECDD  F031         	call	_I2C_ReadNBytes
  9988  0017B4                     
  9989                           ;vl53l0x.c: 214:     I2C_Write1ByteRegister(0x29, 0x81, 0x00);
  9990  0017B4  0E81               	movlw	129
  9991  0017B6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9992  0017B8  0E00               	movlw	0
  9993  0017BA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9994  0017BC  0E29               	movlw	41
  9995  0017BE  EC3D  F030         	call	_I2C_Write1ByteRegister
  9996  0017C2                     
  9997                           ;vl53l0x.c: 215:     I2C_Write1ByteRegister(0x29, 0xFF, 0x06);
  9998  0017C2  0EFF               	movlw	255
  9999  0017C4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10000  0017C6  0E06               	movlw	6
 10001  0017C8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10002  0017CA  0E29               	movlw	41
 10003  0017CC  EC3D  F030         	call	_I2C_Write1ByteRegister
 10004  0017D0  0E83               	movlw	131
 10005  0017D2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 10006  0017D4  0E29               	movlw	41
 10007  0017D6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 10008  0017DA                     
 10009                           ;vl53l0x.c: 217:     I2C_Write1ByteRegister(0x29, 0x83, 0x01);
 10010  0017DA  0E83               	movlw	131
 10011  0017DC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10012  0017DE  0E01               	movlw	1
 10013  0017E0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10014  0017E2  0E29               	movlw	41
 10015  0017E4  EC3D  F030         	call	_I2C_Write1ByteRegister
 10016  0017E8                     
 10017                           ;vl53l0x.c: 218:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10018  0017E8  0EFF               	movlw	255
 10019  0017EA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10020  0017EC  0E01               	movlw	1
 10021  0017EE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10022  0017F0  0E29               	movlw	41
 10023  0017F2  EC3D  F030         	call	_I2C_Write1ByteRegister
 10024  0017F6                     
 10025                           ;vl53l0x.c: 219:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 10026  0017F6  0E00               	movlw	0
 10027  0017F8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10028  0017FA  0E01               	movlw	1
 10029  0017FC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10030  0017FE  0E29               	movlw	41
 10031  001800  EC3D  F030         	call	_I2C_Write1ByteRegister
 10032  001804                     
 10033                           ;vl53l0x.c: 220:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10034  001804  0EFF               	movlw	255
 10035  001806  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10036  001808  0E00               	movlw	0
 10037  00180A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10038  00180C  0E29               	movlw	41
 10039  00180E  EC3D  F030         	call	_I2C_Write1ByteRegister
 10040  001812                     
 10041                           ;vl53l0x.c: 221:     I2C_Write1ByteRegister(0x29, 0x80, 0x00);
 10042  001812  0E80               	movlw	128
 10043  001814  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10044  001816  0E00               	movlw	0
 10045  001818  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10046  00181A  0E29               	movlw	41
 10047  00181C  EC3D  F030         	call	_I2C_Write1ByteRegister
 10048  001820                     
 10049                           ;vl53l0x.c: 222:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10050  001820  0EFF               	movlw	255
 10051  001822  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10052  001824  0E01               	movlw	1
 10053  001826  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10054  001828  0E29               	movlw	41
 10055  00182A  EC3D  F030         	call	_I2C_Write1ByteRegister
 10056  00182E                     
 10057                           ;vl53l0x.c: 223:     I2C_Write1ByteRegister(0x29, 0x4F, 0x00);
 10058  00182E  0E4F               	movlw	79
 10059  001830  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10060  001832  0E00               	movlw	0
 10061  001834  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10062  001836  0E29               	movlw	41
 10063  001838  EC3D  F030         	call	_I2C_Write1ByteRegister
 10064  00183C                     
 10065                           ;vl53l0x.c: 224:     I2C_Write1ByteRegister(0x29, 0x4E, 0x2C);
 10066  00183C  0E4E               	movlw	78
 10067  00183E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10068  001840  0E2C               	movlw	44
 10069  001842  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10070  001844  0E29               	movlw	41
 10071  001846  EC3D  F030         	call	_I2C_Write1ByteRegister
 10072  00184A                     
 10073                           ;vl53l0x.c: 225:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10074  00184A  0EFF               	movlw	255
 10075  00184C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10076  00184E  0E00               	movlw	0
 10077  001850  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10078  001852  0E29               	movlw	41
 10079  001854  EC3D  F030         	call	_I2C_Write1ByteRegister
 10080  001858                     
 10081                           ;vl53l0x.c: 226:     I2C_Write1ByteRegister(0x29, 0xB6, 0xB4);
 10082  001858  0EB6               	movlw	182
 10083  00185A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10084  00185C  0EB4               	movlw	180
 10085  00185E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10086  001860  0E29               	movlw	41
 10087  001862  EC3D  F030         	call	_I2C_Write1ByteRegister
 10088  001866                     
 10089                           ;vl53l0x.c: 227:         writeBuffer[0] = 0xB0;
 10090  001866  0EB0               	movlw	176
 10091  001868  0100               	movlb	0	; () banked
 10092  00186A  6FA5               	movwf	_writeBuffer& (0+255),b
 10093  00186C                     
 10094                           ; BSR set to: 0
 10095                           ;vl53l0x.c: 228:         writeBuffer[1] = 0x00;
 10096  00186C  0E00               	movlw	0
 10097  00186E  6FA6               	movwf	(_writeBuffer+1)& (0+255),b
 10098  001870                     
 10099                           ; BSR set to: 0
 10100                           ;vl53l0x.c: 229:         writeBuffer[2] = 0xF0;
 10101  001870  0EF0               	movlw	240
 10102  001872  6FA7               	movwf	(_writeBuffer+2)& (0+255),b
 10103  001874                     
 10104                           ; BSR set to: 0
 10105                           ;vl53l0x.c: 230:         writeBuffer[3] = 0xE7;
 10106  001874  0EE7               	movlw	231
 10107  001876  6FA8               	movwf	(_writeBuffer+3)& (0+255),b
 10108  001878                     
 10109                           ; BSR set to: 0
 10110                           ;vl53l0x.c: 231:         writeBuffer[4] = 0x3F;
 10111  001878  0E3F               	movlw	63
 10112  00187A  6FA9               	movwf	(_writeBuffer+4)& (0+255),b
 10113  00187C                     
 10114                           ; BSR set to: 0
 10115                           ;vl53l0x.c: 232:         writeBuffer[5] = 0x00;
 10116  00187C  0E00               	movlw	0
 10117  00187E  6FAA               	movwf	(_writeBuffer+5)& (0+255),b
 10118  001880                     
 10119                           ; BSR set to: 0
 10120                           ;vl53l0x.c: 233:         writeBuffer[6] = 0x00;
 10121  001880  0E00               	movlw	0
 10122  001882  6FAB               	movwf	(_writeBuffer+6)& (0+255),b
 10123                           
 10124                           ;vl53l0x.c: 234:     I2C_WriteNBytes(0x29, &writeBuffer[0], 7);
 10125  001884  0EA5               	movlw	low _writeBuffer
 10126  001886  6E16               	movwf	I2C_WriteNBytes@data^0,c
 10127  001888  0E00               	movlw	high _writeBuffer
 10128  00188A  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 10129  00188C  0E00               	movlw	0
 10130  00188E  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 10131  001890  0E07               	movlw	7
 10132  001892  6E18               	movwf	I2C_WriteNBytes@len^0,c
 10133  001894  0E29               	movlw	41
 10134  001896  EC38  F031         	call	_I2C_WriteNBytes
 10135  00189A                     
 10136                           ;vl53l0x.c: 235:         writeBuffer[0] = 0xB0;
 10137  00189A  0EB0               	movlw	176
 10138  00189C  0100               	movlb	0	; () banked
 10139  00189E  6FA5               	movwf	_writeBuffer& (0+255),b
 10140  0018A0                     
 10141                           ; BSR set to: 0
 10142                           ;vl53l0x.c: 236:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
 10143  0018A0  0EA5               	movlw	low _writeBuffer
 10144  0018A2  6E16               	movwf	I2C_WriteNBytes@data^0,c
 10145  0018A4  0E00               	movlw	high _writeBuffer
 10146  0018A6  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 10147  0018A8  0E00               	movlw	0
 10148  0018AA  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 10149  0018AC  0E01               	movlw	1
 10150  0018AE  6E18               	movwf	I2C_WriteNBytes@len^0,c
 10151  0018B0  0E29               	movlw	41
 10152  0018B2  EC38  F031         	call	_I2C_WriteNBytes
 10153  0018B6                     
 10154                           ;vl53l0x.c: 237:     I2C_ReadNBytes(0x29, &readBuffer[0], 6);
 10155  0018B6  0E60               	movlw	low _readBuffer
 10156  0018B8  6E16               	movwf	I2C_ReadNBytes@data^0,c
 10157  0018BA  0E01               	movlw	high _readBuffer
 10158  0018BC  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
 10159  0018BE  0E00               	movlw	0
 10160  0018C0  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
 10161  0018C2  0E06               	movlw	6
 10162  0018C4  6E18               	movwf	I2C_ReadNBytes@len^0,c
 10163  0018C6  0E29               	movlw	41
 10164  0018C8  ECDD  F031         	call	_I2C_ReadNBytes
 10165  0018CC                     
 10166                           ;vl53l0x.c: 238:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10167  0018CC  0EFF               	movlw	255
 10168  0018CE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10169  0018D0  0E01               	movlw	1
 10170  0018D2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10171  0018D4  0E29               	movlw	41
 10172  0018D6  EC3D  F030         	call	_I2C_Write1ByteRegister
 10173  0018DA                     
 10174                           ;vl53l0x.c: 239:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 10175  0018DA  0E00               	movlw	0
 10176  0018DC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10177  0018DE  0E00               	movlw	0
 10178  0018E0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10179  0018E2  0E29               	movlw	41
 10180  0018E4  EC3D  F030         	call	_I2C_Write1ByteRegister
 10181  0018E8                     
 10182                           ;vl53l0x.c: 240:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10183  0018E8  0EFF               	movlw	255
 10184  0018EA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10185  0018EC  0E00               	movlw	0
 10186  0018EE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10187  0018F0  0E29               	movlw	41
 10188  0018F2  EC3D  F030         	call	_I2C_Write1ByteRegister
 10189  0018F6                     
 10190                           ;vl53l0x.c: 241:     I2C_Write1ByteRegister(0x29, 0x09, 0x00);
 10191  0018F6  0E09               	movlw	9
 10192  0018F8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10193  0018FA  0E00               	movlw	0
 10194  0018FC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10195  0018FE  0E29               	movlw	41
 10196  001900  EC3D  F030         	call	_I2C_Write1ByteRegister
 10197  001904                     
 10198                           ;vl53l0x.c: 242:     I2C_Write1ByteRegister(0x29, 0x10, 0x00);
 10199  001904  0E10               	movlw	16
 10200  001906  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10201  001908  0E00               	movlw	0
 10202  00190A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10203  00190C  0E29               	movlw	41
 10204  00190E  EC3D  F030         	call	_I2C_Write1ByteRegister
 10205  001912                     
 10206                           ;vl53l0x.c: 243:     I2C_Write1ByteRegister(0x29, 0x11, 0x00);
 10207  001912  0E11               	movlw	17
 10208  001914  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10209  001916  0E00               	movlw	0
 10210  001918  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10211  00191A  0E29               	movlw	41
 10212  00191C  EC3D  F030         	call	_I2C_Write1ByteRegister
 10213  001920                     
 10214                           ;vl53l0x.c: 244:     I2C_Write1ByteRegister(0x29, 0x24, 0x01);
 10215  001920  0E24               	movlw	36
 10216  001922  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10217  001924  0E01               	movlw	1
 10218  001926  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10219  001928  0E29               	movlw	41
 10220  00192A  EC3D  F030         	call	_I2C_Write1ByteRegister
 10221  00192E                     
 10222                           ;vl53l0x.c: 245:     I2C_Write1ByteRegister(0x29, 0x25, 0xFF);
 10223  00192E  0E25               	movlw	37
 10224  001930  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10225  001932  0EFF               	movlw	255
 10226  001934  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10227  001936  0E29               	movlw	41
 10228  001938  EC3D  F030         	call	_I2C_Write1ByteRegister
 10229  00193C                     
 10230                           ;vl53l0x.c: 246:     I2C_Write1ByteRegister(0x29, 0x75, 0x00);
 10231  00193C  0E75               	movlw	117
 10232  00193E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10233  001940  0E00               	movlw	0
 10234  001942  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10235  001944  0E29               	movlw	41
 10236  001946  EC3D  F030         	call	_I2C_Write1ByteRegister
 10237  00194A                     
 10238                           ;vl53l0x.c: 247:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10239  00194A  0EFF               	movlw	255
 10240  00194C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10241  00194E  0E01               	movlw	1
 10242  001950  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10243  001952  0E29               	movlw	41
 10244  001954  EC3D  F030         	call	_I2C_Write1ByteRegister
 10245  001958                     
 10246                           ;vl53l0x.c: 248:     I2C_Write1ByteRegister(0x29, 0x4E, 0x2C);
 10247  001958  0E4E               	movlw	78
 10248  00195A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10249  00195C  0E2C               	movlw	44
 10250  00195E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10251  001960  0E29               	movlw	41
 10252  001962  EC3D  F030         	call	_I2C_Write1ByteRegister
 10253  001966                     
 10254                           ;vl53l0x.c: 249:     I2C_Write1ByteRegister(0x29, 0x48, 0x00);
 10255  001966  0E48               	movlw	72
 10256  001968  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10257  00196A  0E00               	movlw	0
 10258  00196C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10259  00196E  0E29               	movlw	41
 10260  001970  EC3D  F030         	call	_I2C_Write1ByteRegister
 10261  001974                     
 10262                           ;vl53l0x.c: 250:     I2C_Write1ByteRegister(0x29, 0x30, 0x20);
 10263  001974  0E30               	movlw	48
 10264  001976  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10265  001978  0E20               	movlw	32
 10266  00197A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10267  00197C  0E29               	movlw	41
 10268  00197E  EC3D  F030         	call	_I2C_Write1ByteRegister
 10269  001982                     
 10270                           ;vl53l0x.c: 251:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10271  001982  0EFF               	movlw	255
 10272  001984  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10273  001986  0E00               	movlw	0
 10274  001988  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10275  00198A  0E29               	movlw	41
 10276  00198C  EC3D  F030         	call	_I2C_Write1ByteRegister
 10277  001990                     
 10278                           ;vl53l0x.c: 252:     I2C_Write1ByteRegister(0x29, 0x30, 0x09);
 10279  001990  0E30               	movlw	48
 10280  001992  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10281  001994  0E09               	movlw	9
 10282  001996  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10283  001998  0E29               	movlw	41
 10284  00199A  EC3D  F030         	call	_I2C_Write1ByteRegister
 10285  00199E                     
 10286                           ;vl53l0x.c: 253:     I2C_Write1ByteRegister(0x29, 0x54, 0x00);
 10287  00199E  0E54               	movlw	84
 10288  0019A0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10289  0019A2  0E00               	movlw	0
 10290  0019A4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10291  0019A6  0E29               	movlw	41
 10292  0019A8  EC3D  F030         	call	_I2C_Write1ByteRegister
 10293  0019AC                     
 10294                           ;vl53l0x.c: 254:     I2C_Write1ByteRegister(0x29, 0x31, 0x04);
 10295  0019AC  0E31               	movlw	49
 10296  0019AE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10297  0019B0  0E04               	movlw	4
 10298  0019B2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10299  0019B4  0E29               	movlw	41
 10300  0019B6  EC3D  F030         	call	_I2C_Write1ByteRegister
 10301  0019BA                     
 10302                           ;vl53l0x.c: 255:     I2C_Write1ByteRegister(0x29, 0x32, 0x03);
 10303  0019BA  0E32               	movlw	50
 10304  0019BC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10305  0019BE  0E03               	movlw	3
 10306  0019C0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10307  0019C2  0E29               	movlw	41
 10308  0019C4  EC3D  F030         	call	_I2C_Write1ByteRegister
 10309  0019C8                     
 10310                           ;vl53l0x.c: 256:     I2C_Write1ByteRegister(0x29, 0x40, 0x83);
 10311  0019C8  0E40               	movlw	64
 10312  0019CA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10313  0019CC  0E83               	movlw	131
 10314  0019CE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10315  0019D0  0E29               	movlw	41
 10316  0019D2  EC3D  F030         	call	_I2C_Write1ByteRegister
 10317  0019D6                     
 10318                           ;vl53l0x.c: 257:     I2C_Write1ByteRegister(0x29, 0x46, 0x25);
 10319  0019D6  0E46               	movlw	70
 10320  0019D8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10321  0019DA  0E25               	movlw	37
 10322  0019DC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10323  0019DE  0E29               	movlw	41
 10324  0019E0  EC3D  F030         	call	_I2C_Write1ByteRegister
 10325  0019E4                     
 10326                           ;vl53l0x.c: 258:     I2C_Write1ByteRegister(0x29, 0x60, 0x00);
 10327  0019E4  0E60               	movlw	96
 10328  0019E6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10329  0019E8  0E00               	movlw	0
 10330  0019EA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10331  0019EC  0E29               	movlw	41
 10332  0019EE  EC3D  F030         	call	_I2C_Write1ByteRegister
 10333  0019F2                     
 10334                           ;vl53l0x.c: 259:     I2C_Write1ByteRegister(0x29, 0x27, 0x00);
 10335  0019F2  0E27               	movlw	39
 10336  0019F4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10337  0019F6  0E00               	movlw	0
 10338  0019F8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10339  0019FA  0E29               	movlw	41
 10340  0019FC  EC3D  F030         	call	_I2C_Write1ByteRegister
 10341  001A00                     
 10342                           ;vl53l0x.c: 260:     I2C_Write1ByteRegister(0x29, 0x50, 0x06);
 10343  001A00  0E50               	movlw	80
 10344  001A02  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10345  001A04  0E06               	movlw	6
 10346  001A06  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10347  001A08  0E29               	movlw	41
 10348  001A0A  EC3D  F030         	call	_I2C_Write1ByteRegister
 10349  001A0E                     
 10350                           ;vl53l0x.c: 261:     I2C_Write1ByteRegister(0x29, 0x51, 0x00);
 10351  001A0E  0E51               	movlw	81
 10352  001A10  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10353  001A12  0E00               	movlw	0
 10354  001A14  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10355  001A16  0E29               	movlw	41
 10356  001A18  EC3D  F030         	call	_I2C_Write1ByteRegister
 10357  001A1C                     
 10358                           ;vl53l0x.c: 262:     I2C_Write1ByteRegister(0x29, 0x52, 0x96);
 10359  001A1C  0E52               	movlw	82
 10360  001A1E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10361  001A20  0E96               	movlw	150
 10362  001A22  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10363  001A24  0E29               	movlw	41
 10364  001A26  EC3D  F030         	call	_I2C_Write1ByteRegister
 10365  001A2A                     
 10366                           ;vl53l0x.c: 263:     I2C_Write1ByteRegister(0x29, 0x56, 0x08);
 10367  001A2A  0E56               	movlw	86
 10368  001A2C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10369  001A2E  0E08               	movlw	8
 10370  001A30  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10371  001A32  0E29               	movlw	41
 10372  001A34  EC3D  F030         	call	_I2C_Write1ByteRegister
 10373  001A38                     
 10374                           ;vl53l0x.c: 264:     I2C_Write1ByteRegister(0x29, 0x57, 0x30);
 10375  001A38  0E57               	movlw	87
 10376  001A3A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10377  001A3C  0E30               	movlw	48
 10378  001A3E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10379  001A40  0E29               	movlw	41
 10380  001A42  EC3D  F030         	call	_I2C_Write1ByteRegister
 10381  001A46                     
 10382                           ;vl53l0x.c: 265:     I2C_Write1ByteRegister(0x29, 0x61, 0x00);
 10383  001A46  0E61               	movlw	97
 10384  001A48  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10385  001A4A  0E00               	movlw	0
 10386  001A4C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10387  001A4E  0E29               	movlw	41
 10388  001A50  EC3D  F030         	call	_I2C_Write1ByteRegister
 10389  001A54                     
 10390                           ;vl53l0x.c: 266:     I2C_Write1ByteRegister(0x29, 0x62, 0x00);
 10391  001A54  0E62               	movlw	98
 10392  001A56  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10393  001A58  0E00               	movlw	0
 10394  001A5A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10395  001A5C  0E29               	movlw	41
 10396  001A5E  EC3D  F030         	call	_I2C_Write1ByteRegister
 10397  001A62                     
 10398                           ;vl53l0x.c: 267:     I2C_Write1ByteRegister(0x29, 0x64, 0x00);
 10399  001A62  0E64               	movlw	100
 10400  001A64  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10401  001A66  0E00               	movlw	0
 10402  001A68  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10403  001A6A  0E29               	movlw	41
 10404  001A6C  EC3D  F030         	call	_I2C_Write1ByteRegister
 10405  001A70                     
 10406                           ;vl53l0x.c: 268:     I2C_Write1ByteRegister(0x29, 0x65, 0x00);
 10407  001A70  0E65               	movlw	101
 10408  001A72  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10409  001A74  0E00               	movlw	0
 10410  001A76  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10411  001A78  0E29               	movlw	41
 10412  001A7A  EC3D  F030         	call	_I2C_Write1ByteRegister
 10413  001A7E                     
 10414                           ;vl53l0x.c: 269:     I2C_Write1ByteRegister(0x29, 0x66, 0xA0);
 10415  001A7E  0E66               	movlw	102
 10416  001A80  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10417  001A82  0EA0               	movlw	160
 10418  001A84  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10419  001A86  0E29               	movlw	41
 10420  001A88  EC3D  F030         	call	_I2C_Write1ByteRegister
 10421  001A8C                     
 10422                           ;vl53l0x.c: 270:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10423  001A8C  0EFF               	movlw	255
 10424  001A8E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10425  001A90  0E01               	movlw	1
 10426  001A92  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10427  001A94  0E29               	movlw	41
 10428  001A96  EC3D  F030         	call	_I2C_Write1ByteRegister
 10429  001A9A                     
 10430                           ;vl53l0x.c: 271:     I2C_Write1ByteRegister(0x29, 0x22, 0x32);
 10431  001A9A  0E22               	movlw	34
 10432  001A9C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10433  001A9E  0E32               	movlw	50
 10434  001AA0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10435  001AA2  0E29               	movlw	41
 10436  001AA4  EC3D  F030         	call	_I2C_Write1ByteRegister
 10437  001AA8                     
 10438                           ;vl53l0x.c: 272:     I2C_Write1ByteRegister(0x29, 0x47, 0x14);
 10439  001AA8  0E47               	movlw	71
 10440  001AAA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10441  001AAC  0E14               	movlw	20
 10442  001AAE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10443  001AB0  0E29               	movlw	41
 10444  001AB2  EC3D  F030         	call	_I2C_Write1ByteRegister
 10445  001AB6                     
 10446                           ;vl53l0x.c: 273:     I2C_Write1ByteRegister(0x29, 0x49, 0xFF);
 10447  001AB6  0E49               	movlw	73
 10448  001AB8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10449  001ABA  0EFF               	movlw	255
 10450  001ABC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10451  001ABE  0E29               	movlw	41
 10452  001AC0  EC3D  F030         	call	_I2C_Write1ByteRegister
 10453  001AC4                     
 10454                           ;vl53l0x.c: 274:     I2C_Write1ByteRegister(0x29, 0x4A, 0x00);
 10455  001AC4  0E4A               	movlw	74
 10456  001AC6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10457  001AC8  0E00               	movlw	0
 10458  001ACA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10459  001ACC  0E29               	movlw	41
 10460  001ACE  EC3D  F030         	call	_I2C_Write1ByteRegister
 10461  001AD2                     
 10462                           ;vl53l0x.c: 275:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10463  001AD2  0EFF               	movlw	255
 10464  001AD4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10465  001AD6  0E00               	movlw	0
 10466  001AD8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10467  001ADA  0E29               	movlw	41
 10468  001ADC  EC3D  F030         	call	_I2C_Write1ByteRegister
 10469  001AE0                     
 10470                           ;vl53l0x.c: 276:     I2C_Write1ByteRegister(0x29, 0x7A, 0x0A);
 10471  001AE0  0E7A               	movlw	122
 10472  001AE2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10473  001AE4  0E0A               	movlw	10
 10474  001AE6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10475  001AE8  0E29               	movlw	41
 10476  001AEA  EC3D  F030         	call	_I2C_Write1ByteRegister
 10477  001AEE                     
 10478                           ;vl53l0x.c: 277:     I2C_Write1ByteRegister(0x29, 0x7B, 0x00);
 10479  001AEE  0E7B               	movlw	123
 10480  001AF0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10481  001AF2  0E00               	movlw	0
 10482  001AF4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10483  001AF6  0E29               	movlw	41
 10484  001AF8  EC3D  F030         	call	_I2C_Write1ByteRegister
 10485  001AFC                     
 10486                           ;vl53l0x.c: 278:     I2C_Write1ByteRegister(0x29, 0x78, 0x21);
 10487  001AFC  0E78               	movlw	120
 10488  001AFE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10489  001B00  0E21               	movlw	33
 10490  001B02  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10491  001B04  0E29               	movlw	41
 10492  001B06  EC3D  F030         	call	_I2C_Write1ByteRegister
 10493  001B0A                     
 10494                           ;vl53l0x.c: 279:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10495  001B0A  0EFF               	movlw	255
 10496  001B0C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10497  001B0E  0E01               	movlw	1
 10498  001B10  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10499  001B12  0E29               	movlw	41
 10500  001B14  EC3D  F030         	call	_I2C_Write1ByteRegister
 10501  001B18                     
 10502                           ;vl53l0x.c: 280:     I2C_Write1ByteRegister(0x29, 0x23, 0x34);
 10503  001B18  0E23               	movlw	35
 10504  001B1A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10505  001B1C  0E34               	movlw	52
 10506  001B1E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10507  001B20  0E29               	movlw	41
 10508  001B22  EC3D  F030         	call	_I2C_Write1ByteRegister
 10509  001B26                     
 10510                           ;vl53l0x.c: 281:     I2C_Write1ByteRegister(0x29, 0x42, 0x00);
 10511  001B26  0E42               	movlw	66
 10512  001B28  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10513  001B2A  0E00               	movlw	0
 10514  001B2C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10515  001B2E  0E29               	movlw	41
 10516  001B30  EC3D  F030         	call	_I2C_Write1ByteRegister
 10517  001B34                     
 10518                           ;vl53l0x.c: 282:     I2C_Write1ByteRegister(0x29, 0x44, 0xFF);
 10519  001B34  0E44               	movlw	68
 10520  001B36  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10521  001B38  0EFF               	movlw	255
 10522  001B3A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10523  001B3C  0E29               	movlw	41
 10524  001B3E  EC3D  F030         	call	_I2C_Write1ByteRegister
 10525  001B42                     
 10526                           ;vl53l0x.c: 283:     I2C_Write1ByteRegister(0x29, 0x45, 0x26);
 10527  001B42  0E45               	movlw	69
 10528  001B44  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10529  001B46  0E26               	movlw	38
 10530  001B48  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10531  001B4A  0E29               	movlw	41
 10532  001B4C  EC3D  F030         	call	_I2C_Write1ByteRegister
 10533  001B50                     
 10534                           ;vl53l0x.c: 284:     I2C_Write1ByteRegister(0x29, 0x46, 0x05);
 10535  001B50  0E46               	movlw	70
 10536  001B52  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10537  001B54  0E05               	movlw	5
 10538  001B56  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10539  001B58  0E29               	movlw	41
 10540  001B5A  EC3D  F030         	call	_I2C_Write1ByteRegister
 10541  001B5E                     
 10542                           ;vl53l0x.c: 285:     I2C_Write1ByteRegister(0x29, 0x40, 0x40);
 10543  001B5E  0E40               	movlw	64
 10544  001B60  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10545  001B62  0E40               	movlw	64
 10546  001B64  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10547  001B66  0E29               	movlw	41
 10548  001B68  EC3D  F030         	call	_I2C_Write1ByteRegister
 10549  001B6C                     
 10550                           ;vl53l0x.c: 286:     I2C_Write1ByteRegister(0x29, 0x0E, 0x06);
 10551  001B6C  0E0E               	movlw	14
 10552  001B6E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10553  001B70  0E06               	movlw	6
 10554  001B72  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10555  001B74  0E29               	movlw	41
 10556  001B76  EC3D  F030         	call	_I2C_Write1ByteRegister
 10557  001B7A                     
 10558                           ;vl53l0x.c: 287:     I2C_Write1ByteRegister(0x29, 0x20, 0x1A);
 10559  001B7A  0E20               	movlw	32
 10560  001B7C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10561  001B7E  0E1A               	movlw	26
 10562  001B80  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10563  001B82  0E29               	movlw	41
 10564  001B84  EC3D  F030         	call	_I2C_Write1ByteRegister
 10565  001B88                     
 10566                           ;vl53l0x.c: 288:     I2C_Write1ByteRegister(0x29, 0x43, 0x40);
 10567  001B88  0E43               	movlw	67
 10568  001B8A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10569  001B8C  0E40               	movlw	64
 10570  001B8E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10571  001B90  0E29               	movlw	41
 10572  001B92  EC3D  F030         	call	_I2C_Write1ByteRegister
 10573  001B96                     
 10574                           ;vl53l0x.c: 289:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10575  001B96  0EFF               	movlw	255
 10576  001B98  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10577  001B9A  0E00               	movlw	0
 10578  001B9C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10579  001B9E  0E29               	movlw	41
 10580  001BA0  EC3D  F030         	call	_I2C_Write1ByteRegister
 10581  001BA4                     
 10582                           ;vl53l0x.c: 290:     I2C_Write1ByteRegister(0x29, 0x34, 0x03);
 10583  001BA4  0E34               	movlw	52
 10584  001BA6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10585  001BA8  0E03               	movlw	3
 10586  001BAA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10587  001BAC  0E29               	movlw	41
 10588  001BAE  EC3D  F030         	call	_I2C_Write1ByteRegister
 10589  001BB2                     
 10590                           ;vl53l0x.c: 291:     I2C_Write1ByteRegister(0x29, 0x35, 0x44);
 10591  001BB2  0E35               	movlw	53
 10592  001BB4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10593  001BB6  0E44               	movlw	68
 10594  001BB8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10595  001BBA  0E29               	movlw	41
 10596  001BBC  EC3D  F030         	call	_I2C_Write1ByteRegister
 10597  001BC0                     
 10598                           ;vl53l0x.c: 292:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10599  001BC0  0EFF               	movlw	255
 10600  001BC2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10601  001BC4  0E01               	movlw	1
 10602  001BC6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10603  001BC8  0E29               	movlw	41
 10604  001BCA  EC3D  F030         	call	_I2C_Write1ByteRegister
 10605  001BCE                     
 10606                           ;vl53l0x.c: 293:     I2C_Write1ByteRegister(0x29, 0x31, 0x04);
 10607  001BCE  0E31               	movlw	49
 10608  001BD0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10609  001BD2  0E04               	movlw	4
 10610  001BD4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10611  001BD6  0E29               	movlw	41
 10612  001BD8  EC3D  F030         	call	_I2C_Write1ByteRegister
 10613  001BDC                     
 10614                           ;vl53l0x.c: 294:     I2C_Write1ByteRegister(0x29, 0x4B, 0x09);
 10615  001BDC  0E4B               	movlw	75
 10616  001BDE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10617  001BE0  0E09               	movlw	9
 10618  001BE2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10619  001BE4  0E29               	movlw	41
 10620  001BE6  EC3D  F030         	call	_I2C_Write1ByteRegister
 10621  001BEA                     
 10622                           ;vl53l0x.c: 295:     I2C_Write1ByteRegister(0x29, 0x4C, 0x05);
 10623  001BEA  0E4C               	movlw	76
 10624  001BEC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10625  001BEE  0E05               	movlw	5
 10626  001BF0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10627  001BF2  0E29               	movlw	41
 10628  001BF4  EC3D  F030         	call	_I2C_Write1ByteRegister
 10629  001BF8                     
 10630                           ;vl53l0x.c: 296:     I2C_Write1ByteRegister(0x29, 0x4D, 0x04);
 10631  001BF8  0E4D               	movlw	77
 10632  001BFA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10633  001BFC  0E04               	movlw	4
 10634  001BFE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10635  001C00  0E29               	movlw	41
 10636  001C02  EC3D  F030         	call	_I2C_Write1ByteRegister
 10637  001C06                     
 10638                           ;vl53l0x.c: 297:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10639  001C06  0EFF               	movlw	255
 10640  001C08  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10641  001C0A  0E00               	movlw	0
 10642  001C0C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10643  001C0E  0E29               	movlw	41
 10644  001C10  EC3D  F030         	call	_I2C_Write1ByteRegister
 10645  001C14                     
 10646                           ;vl53l0x.c: 298:     I2C_Write1ByteRegister(0x29, 0x44, 0x00);
 10647  001C14  0E44               	movlw	68
 10648  001C16  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10649  001C18  0E00               	movlw	0
 10650  001C1A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10651  001C1C  0E29               	movlw	41
 10652  001C1E  EC3D  F030         	call	_I2C_Write1ByteRegister
 10653  001C22                     
 10654                           ;vl53l0x.c: 299:     I2C_Write1ByteRegister(0x29, 0x45, 0x20);
 10655  001C22  0E45               	movlw	69
 10656  001C24  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10657  001C26  0E20               	movlw	32
 10658  001C28  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10659  001C2A  0E29               	movlw	41
 10660  001C2C  EC3D  F030         	call	_I2C_Write1ByteRegister
 10661  001C30                     
 10662                           ;vl53l0x.c: 300:     I2C_Write1ByteRegister(0x29, 0x47, 0x08);
 10663  001C30  0E47               	movlw	71
 10664  001C32  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10665  001C34  0E08               	movlw	8
 10666  001C36  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10667  001C38  0E29               	movlw	41
 10668  001C3A  EC3D  F030         	call	_I2C_Write1ByteRegister
 10669  001C3E                     
 10670                           ;vl53l0x.c: 301:     I2C_Write1ByteRegister(0x29, 0x48, 0x28);
 10671  001C3E  0E48               	movlw	72
 10672  001C40  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10673  001C42  0E28               	movlw	40
 10674  001C44  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10675  001C46  0E29               	movlw	41
 10676  001C48  EC3D  F030         	call	_I2C_Write1ByteRegister
 10677  001C4C                     
 10678                           ;vl53l0x.c: 302:     I2C_Write1ByteRegister(0x29, 0x67, 0x00);
 10679  001C4C  0E67               	movlw	103
 10680  001C4E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10681  001C50  0E00               	movlw	0
 10682  001C52  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10683  001C54  0E29               	movlw	41
 10684  001C56  EC3D  F030         	call	_I2C_Write1ByteRegister
 10685  001C5A                     
 10686                           ;vl53l0x.c: 303:     I2C_Write1ByteRegister(0x29, 0x70, 0x04);
 10687  001C5A  0E70               	movlw	112
 10688  001C5C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10689  001C5E  0E04               	movlw	4
 10690  001C60  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10691  001C62  0E29               	movlw	41
 10692  001C64  EC3D  F030         	call	_I2C_Write1ByteRegister
 10693  001C68                     
 10694                           ;vl53l0x.c: 304:     I2C_Write1ByteRegister(0x29, 0x71, 0x01);
 10695  001C68  0E71               	movlw	113
 10696  001C6A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10697  001C6C  0E01               	movlw	1
 10698  001C6E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10699  001C70  0E29               	movlw	41
 10700  001C72  EC3D  F030         	call	_I2C_Write1ByteRegister
 10701  001C76                     
 10702                           ;vl53l0x.c: 305:     I2C_Write1ByteRegister(0x29, 0x72, 0xFE);
 10703  001C76  0E72               	movlw	114
 10704  001C78  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10705  001C7A  0EFE               	movlw	254
 10706  001C7C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10707  001C7E  0E29               	movlw	41
 10708  001C80  EC3D  F030         	call	_I2C_Write1ByteRegister
 10709  001C84                     
 10710                           ;vl53l0x.c: 306:     I2C_Write1ByteRegister(0x29, 0x76, 0x00);
 10711  001C84  0E76               	movlw	118
 10712  001C86  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10713  001C88  0E00               	movlw	0
 10714  001C8A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10715  001C8C  0E29               	movlw	41
 10716  001C8E  EC3D  F030         	call	_I2C_Write1ByteRegister
 10717  001C92                     
 10718                           ;vl53l0x.c: 307:     I2C_Write1ByteRegister(0x29, 0x77, 0x00);
 10719  001C92  0E77               	movlw	119
 10720  001C94  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10721  001C96  0E00               	movlw	0
 10722  001C98  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10723  001C9A  0E29               	movlw	41
 10724  001C9C  EC3D  F030         	call	_I2C_Write1ByteRegister
 10725  001CA0                     
 10726                           ;vl53l0x.c: 308:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10727  001CA0  0EFF               	movlw	255
 10728  001CA2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10729  001CA4  0E01               	movlw	1
 10730  001CA6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10731  001CA8  0E29               	movlw	41
 10732  001CAA  EC3D  F030         	call	_I2C_Write1ByteRegister
 10733  001CAE                     
 10734                           ;vl53l0x.c: 309:     I2C_Write1ByteRegister(0x29, 0x0D, 0x01);
 10735  001CAE  0E0D               	movlw	13
 10736  001CB0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10737  001CB2  0E01               	movlw	1
 10738  001CB4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10739  001CB6  0E29               	movlw	41
 10740  001CB8  EC3D  F030         	call	_I2C_Write1ByteRegister
 10741  001CBC                     
 10742                           ;vl53l0x.c: 310:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10743  001CBC  0EFF               	movlw	255
 10744  001CBE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10745  001CC0  0E00               	movlw	0
 10746  001CC2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10747  001CC4  0E29               	movlw	41
 10748  001CC6  EC3D  F030         	call	_I2C_Write1ByteRegister
 10749  001CCA                     
 10750                           ;vl53l0x.c: 311:     I2C_Write1ByteRegister(0x29, 0x80, 0x01);
 10751  001CCA  0E80               	movlw	128
 10752  001CCC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10753  001CCE  0E01               	movlw	1
 10754  001CD0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10755  001CD2  0E29               	movlw	41
 10756  001CD4  EC3D  F030         	call	_I2C_Write1ByteRegister
 10757  001CD8                     
 10758                           ;vl53l0x.c: 312:     I2C_Write1ByteRegister(0x29, 0x01, 0xF8);
 10759  001CD8  0E01               	movlw	1
 10760  001CDA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10761  001CDC  0EF8               	movlw	248
 10762  001CDE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10763  001CE0  0E29               	movlw	41
 10764  001CE2  EC3D  F030         	call	_I2C_Write1ByteRegister
 10765  001CE6                     
 10766                           ;vl53l0x.c: 313:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10767  001CE6  0EFF               	movlw	255
 10768  001CE8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10769  001CEA  0E01               	movlw	1
 10770  001CEC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10771  001CEE  0E29               	movlw	41
 10772  001CF0  EC3D  F030         	call	_I2C_Write1ByteRegister
 10773  001CF4                     
 10774                           ;vl53l0x.c: 314:     I2C_Write1ByteRegister(0x29, 0x8E, 0x01);
 10775  001CF4  0E8E               	movlw	142
 10776  001CF6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10777  001CF8  0E01               	movlw	1
 10778  001CFA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10779  001CFC  0E29               	movlw	41
 10780  001CFE  EC3D  F030         	call	_I2C_Write1ByteRegister
 10781  001D02                     
 10782                           ;vl53l0x.c: 315:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 10783  001D02  0E00               	movlw	0
 10784  001D04  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10785  001D06  0E01               	movlw	1
 10786  001D08  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10787  001D0A  0E29               	movlw	41
 10788  001D0C  EC3D  F030         	call	_I2C_Write1ByteRegister
 10789  001D10                     
 10790                           ;vl53l0x.c: 316:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10791  001D10  0EFF               	movlw	255
 10792  001D12  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10793  001D14  0E00               	movlw	0
 10794  001D16  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10795  001D18  0E29               	movlw	41
 10796  001D1A  EC3D  F030         	call	_I2C_Write1ByteRegister
 10797  001D1E                     
 10798                           ;vl53l0x.c: 317:     I2C_Write1ByteRegister(0x29, 0x80, 0x00);
 10799  001D1E  0E80               	movlw	128
 10800  001D20  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10801  001D22  0E00               	movlw	0
 10802  001D24  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10803  001D26  0E29               	movlw	41
 10804  001D28  EC3D  F030         	call	_I2C_Write1ByteRegister
 10805  001D2C                     
 10806                           ;vl53l0x.c: 318:     I2C_Write1ByteRegister(0x29, 0x0A, 0x04);
 10807  001D2C  0E0A               	movlw	10
 10808  001D2E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10809  001D30  0E04               	movlw	4
 10810  001D32  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10811  001D34  0E29               	movlw	41
 10812  001D36  EC3D  F030         	call	_I2C_Write1ByteRegister
 10813  001D3A  0E84               	movlw	132
 10814  001D3C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 10815  001D3E  0E29               	movlw	41
 10816  001D40  ECCB  F02F         	call	_I2C_Read1ByteRegister
 10817  001D44                     
 10818                           ;vl53l0x.c: 320:     I2C_Write1ByteRegister(0x29, 0x84, 0x01);
 10819  001D44  0E84               	movlw	132
 10820  001D46  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10821  001D48  0E01               	movlw	1
 10822  001D4A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10823  001D4C  0E29               	movlw	41
 10824  001D4E  EC3D  F030         	call	_I2C_Write1ByteRegister
 10825  001D52                     
 10826                           ;vl53l0x.c: 321:     I2C_Write1ByteRegister(0x29, 0x0B, 0x01);
 10827  001D52  0E0B               	movlw	11
 10828  001D54  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10829  001D56  0E01               	movlw	1
 10830  001D58  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10831  001D5A  0E29               	movlw	41
 10832  001D5C  EC3D  F030         	call	_I2C_Write1ByteRegister
 10833  001D60                     
 10834                           ;vl53l0x.c: 322:     I2C_Write1ByteRegister(0x29, 0x0B, 0x00);
 10835  001D60  0E0B               	movlw	11
 10836  001D62  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10837  001D64  0E00               	movlw	0
 10838  001D66  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10839  001D68  0E29               	movlw	41
 10840  001D6A  EC3D  F030         	call	_I2C_Write1ByteRegister
 10841  001D6E  0E13               	movlw	19
 10842  001D70  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 10843  001D72  0E29               	movlw	41
 10844  001D74  ECCB  F02F         	call	_I2C_Read1ByteRegister
 10845  001D78                     
 10846                           ;vl53l0x.c: 324:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 10847  001D78  0EFF               	movlw	255
 10848  001D7A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10849  001D7C  0E01               	movlw	1
 10850  001D7E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10851  001D80  0E29               	movlw	41
 10852  001D82  EC3D  F030         	call	_I2C_Write1ByteRegister
 10853  001D86                     
 10854                           ;vl53l0x.c: 325:     data16 = I2C_Read2ByteRegister(0x29, 0x84);
 10855  001D86  0E84               	movlw	132
 10856  001D88  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 10857  001D8A  0E29               	movlw	41
 10858  001D8C  ECD2  F02E         	call	_I2C_Read2ByteRegister
 10859  001D90  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 10860  001D94  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 10861  001D98                     
 10862                           ;vl53l0x.c: 326:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 10863  001D98  0EFF               	movlw	255
 10864  001D9A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 10865  001D9C  0E00               	movlw	0
 10866  001D9E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 10867  001DA0  0E29               	movlw	41
 10868  001DA2  EC3D  F030         	call	_I2C_Write1ByteRegister
 10869  001DA6                     
 10870                           ;vl53l0x.c: 327:     data16 = I2C_Read2ByteRegister(0x29, 0xF8);
 10871  001DA6  0EF8               	movlw	248
 10872  001DA8  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 10873  001DAA  0E29               	movlw	41
 10874  001DAC  ECD2  F02E         	call	_I2C_Read2ByteRegister
 10875  001DB0  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 10876  001DB4  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 10877  001DB8                     
 10878                           ;vl53l0x.c: 328:         writeBuffer[0] = 0x04;
 10879  001DB8  0E04               	movlw	4
 10880  001DBA  0100               	movlb	0	; () banked
 10881  001DBC  6FA5               	movwf	_writeBuffer& (0+255),b
 10882                           
 10883                           ;vl53l0x.c: 329:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
 10884  001DBE  0EA5               	movlw	low _writeBuffer
 10885  001DC0  6E16               	movwf	I2C_WriteNBytes@data^0,c
 10886  001DC2  0E00               	movlw	high _writeBuffer
 10887  001DC4  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 10888  001DC6  0E00               	movlw	0
 10889  001DC8  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 10890  001DCA  0E01               	movlw	1
 10891  001DCC  6E18               	movwf	I2C_WriteNBytes@len^0,c
 10892  001DCE  0E29               	movlw	41
 10893  001DD0  EC38  F031         	call	_I2C_WriteNBytes
 10894                           
 10895                           ;vl53l0x.c: 330:     I2C_ReadNBytes(0x29, &readBuffer[0], 4);
 10896  001DD4  0E60               	movlw	low _readBuffer
 10897  001DD6  6E16               	movwf	I2C_ReadNBytes@data^0,c
 10898  001DD8  0E01               	movlw	high _readBuffer
 10899  001DDA  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
 10900  001DDC  0E00               	movlw	0
 10901  001DDE  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
 10902  001DE0  0E04               	movlw	4
 10903  001DE2  6E18               	movwf	I2C_ReadNBytes@len^0,c
 10904  001DE4  0E29               	movlw	41
 10905  001DE6  ECDD  F031         	call	_I2C_ReadNBytes
 10906                           
 10907                           ;vl53l0x.c: 331:     data16 = I2C_Read2ByteRegister(0x29, 0x20);
 10908  001DEA  0E20               	movlw	32
 10909  001DEC  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 10910  001DEE  0E29               	movlw	41
 10911  001DF0  ECD2  F02E         	call	_I2C_Read2ByteRegister
 10912  001DF4  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 10913  001DF8  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 10914                           
 10915                           ;vl53l0x.c: 332:     data16 = I2C_Read2ByteRegister(0x29, 0x28);
 10916  001DFC  0E28               	movlw	40
 10917  001DFE  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 10918  001E00  0E29               	movlw	41
 10919  001E02  ECD2  F02E         	call	_I2C_Read2ByteRegister
 10920  001E06  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 10921  001E0A  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 10922                           
 10923                           ;vl53l0x.c: 333:     data16 = I2C_Read2ByteRegister(0x29, 0x44);
 10924  001E0E  0E44               	movlw	68
 10925  001E10  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 10926  001E12  0E29               	movlw	41
 10927  001E14  ECD2  F02E         	call	_I2C_Read2ByteRegister
 10928  001E18  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 10929  001E1C  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 10930                           
 10931                           ;vl53l0x.c: 334:     data16 = I2C_Read2ByteRegister(0x29, 0x64);
 10932  001E20  0E64               	movlw	100
 10933  001E22  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 10934  001E24  0E29               	movlw	41
 10935  001E26  ECD2  F02E         	call	_I2C_Read2ByteRegister
 10936  001E2A  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 10937  001E2E  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 10938                           
 10939                           ;vl53l0x.c: 335:     data16 = I2C_Read2ByteRegister(0x29, 0x64);
 10940  001E32  0E64               	movlw	100
 10941  001E34  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 10942  001E36  0E29               	movlw	41
 10943  001E38  ECD2  F02E         	call	_I2C_Read2ByteRegister
 10944  001E3C  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 10945  001E40  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 10946                           
 10947                           ;vl53l0x.c: 336:     data8 = I2C_Read1ByteRegister(0x29, 0x01);
 10948  001E44  0E01               	movlw	1
 10949  001E46  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 10950  001E48  0E29               	movlw	41
 10951  001E4A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 10952  001E4E  6E21               	movwf	VL53L0X_Init@data8^0,c
 10953                           
 10954                           ;vl53l0x.c: 337:     data8 = I2C_Read1ByteRegister(0x29, 0x01);
 10955  001E50  0E01               	movlw	1
 10956  001E52  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 10957  001E54  0E29               	movlw	41
 10958  001E56  ECCB  F02F         	call	_I2C_Read1ByteRegister
 10959  001E5A  6E21               	movwf	VL53L0X_Init@data8^0,c
 10960                           
 10961                           ;vl53l0x.c: 338:     data8 = I2C_Read1ByteRegister(0x29, 0x50);
 10962  001E5C  0E50               	movlw	80
 10963  001E5E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 10964  001E60  0E29               	movlw	41
 10965  001E62  ECCB  F02F         	call	_I2C_Read1ByteRegister
 10966  001E66  6E21               	movwf	VL53L0X_Init@data8^0,c
 10967                           
 10968                           ;vl53l0x.c: 339:     data8 = I2C_Read1ByteRegister(0x29, 0x46);
 10969  001E68  0E46               	movlw	70
 10970  001E6A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 10971  001E6C  0E29               	movlw	41
 10972  001E6E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 10973  001E72  6E21               	movwf	VL53L0X_Init@data8^0,c
 10974                           
 10975                           ;vl53l0x.c: 340:     data8 = I2C_Read1ByteRegister(0x29, 0x50);
 10976  001E74  0E50               	movlw	80
 10977  001E76  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 10978  001E78  0E29               	movlw	41
 10979  001E7A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 10980  001E7E  6E21               	movwf	VL53L0X_Init@data8^0,c
 10981                           
 10982                           ;vl53l0x.c: 341:     data8 = I2C_Read1ByteRegister(0x29, 0x50);
 10983  001E80  0E50               	movlw	80
 10984  001E82  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 10985  001E84  0E29               	movlw	41
 10986  001E86  ECCB  F02F         	call	_I2C_Read1ByteRegister
 10987  001E8A  6E21               	movwf	VL53L0X_Init@data8^0,c
 10988                           
 10989                           ;vl53l0x.c: 342:     data16 = I2C_Read2ByteRegister(0x29, 0x51);
 10990  001E8C  0E51               	movlw	81
 10991  001E8E  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 10992  001E90  0E29               	movlw	41
 10993  001E92  ECD2  F02E         	call	_I2C_Read2ByteRegister
 10994  001E96  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 10995  001E9A  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 10996                           
 10997                           ;vl53l0x.c: 343:     data8 = I2C_Read1ByteRegister(0x29, 0x01);
 10998  001E9E  0E01               	movlw	1
 10999  001EA0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11000  001EA2  0E29               	movlw	41
 11001  001EA4  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11002  001EA8  6E21               	movwf	VL53L0X_Init@data8^0,c
 11003                           
 11004                           ;vl53l0x.c: 344:     data8 = I2C_Read1ByteRegister(0x29, 0x50);
 11005  001EAA  0E50               	movlw	80
 11006  001EAC  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11007  001EAE  0E29               	movlw	41
 11008  001EB0  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11009  001EB4  6E21               	movwf	VL53L0X_Init@data8^0,c
 11010                           
 11011                           ;vl53l0x.c: 345:     data16 = I2C_Read2ByteRegister(0x29, 0x51);
 11012  001EB6  0E51               	movlw	81
 11013  001EB8  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 11014  001EBA  0E29               	movlw	41
 11015  001EBC  ECD2  F02E         	call	_I2C_Read2ByteRegister
 11016  001EC0  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 11017  001EC4  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 11018                           
 11019                           ;vl53l0x.c: 346:     data8 = I2C_Read1ByteRegister(0x29, 0x70);
 11020  001EC8  0E70               	movlw	112
 11021  001ECA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11022  001ECC  0E29               	movlw	41
 11023  001ECE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11024  001ED2  6E21               	movwf	VL53L0X_Init@data8^0,c
 11025                           
 11026                           ;vl53l0x.c: 347:     data16 = I2C_Read2ByteRegister(0x29, 0x71);
 11027  001ED4  0E71               	movlw	113
 11028  001ED6  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 11029  001ED8  0E29               	movlw	41
 11030  001EDA  ECD2  F02E         	call	_I2C_Read2ByteRegister
 11031  001EDE  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 11032  001EE2  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 11033                           
 11034                           ;vl53l0x.c: 348:     data8 = I2C_Read1ByteRegister(0x29, 0x09);
 11035  001EE6  0E09               	movlw	9
 11036  001EE8  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11037  001EEA  0E29               	movlw	41
 11038  001EEC  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11039  001EF0  6E21               	movwf	VL53L0X_Init@data8^0,c
 11040                           
 11041                           ;vl53l0x.c: 349:     data8 = I2C_Read1ByteRegister(0x29, 0x01);
 11042  001EF2  0E01               	movlw	1
 11043  001EF4  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11044  001EF6  0E29               	movlw	41
 11045  001EF8  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11046  001EFC  6E21               	movwf	VL53L0X_Init@data8^0,c
 11047                           
 11048                           ;vl53l0x.c: 350:     data8 = I2C_Read1ByteRegister(0x29, 0x01);
 11049  001EFE  0E01               	movlw	1
 11050  001F00  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11051  001F02  0E29               	movlw	41
 11052  001F04  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11053  001F08  6E21               	movwf	VL53L0X_Init@data8^0,c
 11054                           
 11055                           ;vl53l0x.c: 351:     I2C_Write1ByteRegister(0x29, 0x01, 0xE8);
 11056  001F0A  0E01               	movlw	1
 11057  001F0C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11058  001F0E  0EE8               	movlw	232
 11059  001F10  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11060  001F12  0E29               	movlw	41
 11061  001F14  EC3D  F030         	call	_I2C_Write1ByteRegister
 11062                           
 11063                           ;vl53l0x.c: 352:     data8 = I2C_Read1ByteRegister(0x29, 0x01);
 11064  001F18  0E01               	movlw	1
 11065  001F1A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11066  001F1C  0E29               	movlw	41
 11067  001F1E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11068  001F22  6E21               	movwf	VL53L0X_Init@data8^0,c
 11069                           
 11070                           ;vl53l0x.c: 353:     data8 = I2C_Read1ByteRegister(0x29, 0x50);
 11071  001F24  0E50               	movlw	80
 11072  001F26  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11073  001F28  0E29               	movlw	41
 11074  001F2A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11075  001F2E  6E21               	movwf	VL53L0X_Init@data8^0,c
 11076                           
 11077                           ;vl53l0x.c: 354:     data8 = I2C_Read1ByteRegister(0x29, 0x46);
 11078  001F30  0E46               	movlw	70
 11079  001F32  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11080  001F34  0E29               	movlw	41
 11081  001F36  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11082  001F3A  6E21               	movwf	VL53L0X_Init@data8^0,c
 11083                           
 11084                           ;vl53l0x.c: 355:     data8 = I2C_Read1ByteRegister(0x29, 0x50);
 11085  001F3C  0E50               	movlw	80
 11086  001F3E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11087  001F40  0E29               	movlw	41
 11088  001F42  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11089  001F46  6E21               	movwf	VL53L0X_Init@data8^0,c
 11090                           
 11091                           ;vl53l0x.c: 356:     data8 = I2C_Read1ByteRegister(0x29, 0x50);
 11092  001F48  0E50               	movlw	80
 11093  001F4A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11094  001F4C  0E29               	movlw	41
 11095  001F4E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11096  001F52  6E21               	movwf	VL53L0X_Init@data8^0,c
 11097                           
 11098                           ;vl53l0x.c: 357:     data16 = I2C_Read2ByteRegister(0x29, 0x51);
 11099  001F54  0E51               	movlw	81
 11100  001F56  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 11101  001F58  0E29               	movlw	41
 11102  001F5A  ECD2  F02E         	call	_I2C_Read2ByteRegister
 11103  001F5E  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 11104  001F62  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 11105                           
 11106                           ;vl53l0x.c: 358:     data8 = I2C_Read1ByteRegister(0x29, 0x01);
 11107  001F66  0E01               	movlw	1
 11108  001F68  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11109  001F6A  0E29               	movlw	41
 11110  001F6C  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11111  001F70  6E21               	movwf	VL53L0X_Init@data8^0,c
 11112                           
 11113                           ;vl53l0x.c: 359:     data8 = I2C_Read1ByteRegister(0x29, 0x50);
 11114  001F72  0E50               	movlw	80
 11115  001F74  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11116  001F76  0E29               	movlw	41
 11117  001F78  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11118  001F7C  6E21               	movwf	VL53L0X_Init@data8^0,c
 11119                           
 11120                           ;vl53l0x.c: 360:     data16 = I2C_Read2ByteRegister(0x29, 0x51);
 11121  001F7E  0E51               	movlw	81
 11122  001F80  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 11123  001F82  0E29               	movlw	41
 11124  001F84  ECD2  F02E         	call	_I2C_Read2ByteRegister
 11125  001F88  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 11126  001F8C  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 11127                           
 11128                           ;vl53l0x.c: 361:     data8 = I2C_Read1ByteRegister(0x29, 0x70);
 11129  001F90  0E70               	movlw	112
 11130  001F92  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11131  001F94  0E29               	movlw	41
 11132  001F96  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11133  001F9A  6E21               	movwf	VL53L0X_Init@data8^0,c
 11134  001F9C                     
 11135                           ;vl53l0x.c: 362:         writeBuffer[0] = 0x71;
 11136  001F9C  0E71               	movlw	113
 11137  001F9E  0100               	movlb	0	; () banked
 11138  001FA0  6FA5               	movwf	_writeBuffer& (0+255),b
 11139  001FA2                     
 11140                           ; BSR set to: 0
 11141                           ;vl53l0x.c: 363:         writeBuffer[1] = 0x02;
 11142  001FA2  0E02               	movlw	2
 11143  001FA4  6FA6               	movwf	(_writeBuffer+1)& (0+255),b
 11144  001FA6                     
 11145                           ; BSR set to: 0
 11146                           ;vl53l0x.c: 364:         writeBuffer[2] = 0x94;
 11147  001FA6  0E94               	movlw	148
 11148  001FA8  6FA7               	movwf	(_writeBuffer+2)& (0+255),b
 11149  001FAA                     
 11150                           ; BSR set to: 0
 11151                           ;vl53l0x.c: 365:     I2C_WriteNBytes(0x29, &writeBuffer[0], 3);
 11152  001FAA  0EA5               	movlw	low _writeBuffer
 11153  001FAC  6E16               	movwf	I2C_WriteNBytes@data^0,c
 11154  001FAE  0E00               	movlw	high _writeBuffer
 11155  001FB0  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 11156  001FB2  0E00               	movlw	0
 11157  001FB4  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 11158  001FB6  0E03               	movlw	3
 11159  001FB8  6E18               	movwf	I2C_WriteNBytes@len^0,c
 11160  001FBA  0E29               	movlw	41
 11161  001FBC  EC38  F031         	call	_I2C_WriteNBytes
 11162  001FC0  0E01               	movlw	1
 11163  001FC2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11164  001FC4  0E29               	movlw	41
 11165  001FC6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11166  001FCA  0E50               	movlw	80
 11167  001FCC  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11168  001FCE  0E29               	movlw	41
 11169  001FD0  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11170  001FD4  0E70               	movlw	112
 11171  001FD6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11172  001FD8  0E29               	movlw	41
 11173  001FDA  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11174  001FDE  0E50               	movlw	80
 11175  001FE0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11176  001FE2  0E29               	movlw	41
 11177  001FE4  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11178  001FE8  0E50               	movlw	80
 11179  001FEA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11180  001FEC  0E29               	movlw	41
 11181  001FEE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11182  001FF2                     
 11183                           ;vl53l0x.c: 371:     data16 = I2C_Read2ByteRegister(0x29, 0x51);
 11184  001FF2  0E51               	movlw	81
 11185  001FF4  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 11186  001FF6  0E29               	movlw	41
 11187  001FF8  ECD2  F02E         	call	_I2C_Read2ByteRegister
 11188  001FFC  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 11189  002000  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 11190  002004  0E01               	movlw	1
 11191  002006  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11192  002008  0E29               	movlw	41
 11193  00200A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11194  00200E  0E50               	movlw	80
 11195  002010  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11196  002012  0E29               	movlw	41
 11197  002014  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11198  002018                     
 11199                           ;vl53l0x.c: 374:     data16 = I2C_Read2ByteRegister(0x29, 0x51);
 11200  002018  0E51               	movlw	81
 11201  00201A  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 11202  00201C  0E29               	movlw	41
 11203  00201E  ECD2  F02E         	call	_I2C_Read2ByteRegister
 11204  002022  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 11205  002026  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 11206  00202A  0E70               	movlw	112
 11207  00202C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11208  00202E  0E29               	movlw	41
 11209  002030  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11210  002034                     
 11211                           ;vl53l0x.c: 376:     data16 = I2C_Read2ByteRegister(0x29, 0x71);
 11212  002034  0E71               	movlw	113
 11213  002036  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 11214  002038  0E29               	movlw	41
 11215  00203A  ECD2  F02E         	call	_I2C_Read2ByteRegister
 11216  00203E  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 11217  002042  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 11218  002046                     
 11219                           ;vl53l0x.c: 377:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 11220  002046  0EFF               	movlw	255
 11221  002048  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11222  00204A  0E01               	movlw	1
 11223  00204C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11224  00204E  0E29               	movlw	41
 11225  002050  EC3D  F030         	call	_I2C_Write1ByteRegister
 11226  002054                     
 11227                           ;vl53l0x.c: 378:     I2C_Write1ByteRegister(0x29, 0x4F, 0x00);
 11228  002054  0E4F               	movlw	79
 11229  002056  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11230  002058  0E00               	movlw	0
 11231  00205A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11232  00205C  0E29               	movlw	41
 11233  00205E  EC3D  F030         	call	_I2C_Write1ByteRegister
 11234  002062                     
 11235                           ;vl53l0x.c: 379:     I2C_Write1ByteRegister(0x29, 0x4E, 0x2C);
 11236  002062  0E4E               	movlw	78
 11237  002064  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11238  002066  0E2C               	movlw	44
 11239  002068  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11240  00206A  0E29               	movlw	41
 11241  00206C  EC3D  F030         	call	_I2C_Write1ByteRegister
 11242  002070                     
 11243                           ;vl53l0x.c: 380:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 11244  002070  0EFF               	movlw	255
 11245  002072  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11246  002074  0E00               	movlw	0
 11247  002076  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11248  002078  0E29               	movlw	41
 11249  00207A  EC3D  F030         	call	_I2C_Write1ByteRegister
 11250  00207E                     
 11251                           ;vl53l0x.c: 381:     I2C_Write1ByteRegister(0x29, 0xB6, 0xB4);
 11252  00207E  0EB6               	movlw	182
 11253  002080  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11254  002082  0EB4               	movlw	180
 11255  002084  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11256  002086  0E29               	movlw	41
 11257  002088  EC3D  F030         	call	_I2C_Write1ByteRegister
 11258  00208C                     
 11259                           ;vl53l0x.c: 382:     I2C_Write1ByteRegister(0x29, 0x80, 0x00);
 11260  00208C  0E80               	movlw	128
 11261  00208E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11262  002090  0E00               	movlw	0
 11263  002092  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11264  002094  0E29               	movlw	41
 11265  002096  EC3D  F030         	call	_I2C_Write1ByteRegister
 11266  00209A                     
 11267                           ;vl53l0x.c: 383:     I2C_Write1ByteRegister(0x29, 0x01, 0x01);
 11268  00209A  0E01               	movlw	1
 11269  00209C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11270  00209E  0E01               	movlw	1
 11271  0020A0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11272  0020A2  0E29               	movlw	41
 11273  0020A4  EC3D  F030         	call	_I2C_Write1ByteRegister
 11274  0020A8                     
 11275                           ;vl53l0x.c: 384:     I2C_Write1ByteRegister(0x29, 0x00, 0x41);
 11276  0020A8  0E00               	movlw	0
 11277  0020AA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11278  0020AC  0E41               	movlw	65
 11279  0020AE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11280  0020B0  0E29               	movlw	41
 11281  0020B2  EC3D  F030         	call	_I2C_Write1ByteRegister
 11282  0020B6  0E13               	movlw	19
 11283  0020B8  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11284  0020BA  0E29               	movlw	41
 11285  0020BC  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11286  0020C0  0E13               	movlw	19
 11287  0020C2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11288  0020C4  0E29               	movlw	41
 11289  0020C6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11290  0020CA  0E13               	movlw	19
 11291  0020CC  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11292  0020CE  0E29               	movlw	41
 11293  0020D0  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11294  0020D4  0E13               	movlw	19
 11295  0020D6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11296  0020D8  0E29               	movlw	41
 11297  0020DA  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11298  0020DE  0E13               	movlw	19
 11299  0020E0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11300  0020E2  0E29               	movlw	41
 11301  0020E4  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11302  0020E8  0E13               	movlw	19
 11303  0020EA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11304  0020EC  0E29               	movlw	41
 11305  0020EE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11306  0020F2  0E13               	movlw	19
 11307  0020F4  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11308  0020F6  0E29               	movlw	41
 11309  0020F8  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11310  0020FC  0E13               	movlw	19
 11311  0020FE  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11312  002100  0E29               	movlw	41
 11313  002102  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11314  002106  0E13               	movlw	19
 11315  002108  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11316  00210A  0E29               	movlw	41
 11317  00210C  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11318  002110  0E13               	movlw	19
 11319  002112  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11320  002114  0E29               	movlw	41
 11321  002116  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11322  00211A  0E13               	movlw	19
 11323  00211C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11324  00211E  0E29               	movlw	41
 11325  002120  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11326  002124  0E13               	movlw	19
 11327  002126  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11328  002128  0E29               	movlw	41
 11329  00212A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11330  00212E  0E13               	movlw	19
 11331  002130  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11332  002132  0E29               	movlw	41
 11333  002134  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11334  002138  0E13               	movlw	19
 11335  00213A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11336  00213C  0E29               	movlw	41
 11337  00213E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11338  002142                     
 11339                           ;vl53l0x.c: 399:     I2C_Write1ByteRegister(0x29, 0x0B, 0x01);
 11340  002142  0E0B               	movlw	11
 11341  002144  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11342  002146  0E01               	movlw	1
 11343  002148  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11344  00214A  0E29               	movlw	41
 11345  00214C  EC3D  F030         	call	_I2C_Write1ByteRegister
 11346  002150                     
 11347                           ;vl53l0x.c: 400:     I2C_Write1ByteRegister(0x29, 0x0B, 0x00);
 11348  002150  0E0B               	movlw	11
 11349  002152  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11350  002154  0E00               	movlw	0
 11351  002156  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11352  002158  0E29               	movlw	41
 11353  00215A  EC3D  F030         	call	_I2C_Write1ByteRegister
 11354  00215E  0E13               	movlw	19
 11355  002160  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11356  002162  0E29               	movlw	41
 11357  002164  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11358  002168                     
 11359                           ;vl53l0x.c: 402:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 11360  002168  0E00               	movlw	0
 11361  00216A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11362  00216C  0E00               	movlw	0
 11363  00216E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11364  002170  0E29               	movlw	41
 11365  002172  EC3D  F030         	call	_I2C_Write1ByteRegister
 11366  002176                     
 11367                           ;vl53l0x.c: 403:     I2C_Write1ByteRegister(0x29, 0x01, 0x02);
 11368  002176  0E01               	movlw	1
 11369  002178  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11370  00217A  0E02               	movlw	2
 11371  00217C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11372  00217E  0E29               	movlw	41
 11373  002180  EC3D  F030         	call	_I2C_Write1ByteRegister
 11374  002184                     
 11375                           ;vl53l0x.c: 404:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 11376  002184  0E00               	movlw	0
 11377  002186  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11378  002188  0E01               	movlw	1
 11379  00218A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11380  00218C  0E29               	movlw	41
 11381  00218E  EC3D  F030         	call	_I2C_Write1ByteRegister
 11382  002192  0E13               	movlw	19
 11383  002194  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11384  002196  0E29               	movlw	41
 11385  002198  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11386  00219C  0E13               	movlw	19
 11387  00219E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11388  0021A0  0E29               	movlw	41
 11389  0021A2  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11390  0021A6  0E13               	movlw	19
 11391  0021A8  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11392  0021AA  0E29               	movlw	41
 11393  0021AC  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11394  0021B0  0E13               	movlw	19
 11395  0021B2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11396  0021B4  0E29               	movlw	41
 11397  0021B6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11398  0021BA                     
 11399                           ;vl53l0x.c: 409:     I2C_Write1ByteRegister(0x29, 0x0B, 0x01);
 11400  0021BA  0E0B               	movlw	11
 11401  0021BC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11402  0021BE  0E01               	movlw	1
 11403  0021C0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11404  0021C2  0E29               	movlw	41
 11405  0021C4  EC3D  F030         	call	_I2C_Write1ByteRegister
 11406  0021C8                     
 11407                           ;vl53l0x.c: 410:     I2C_Write1ByteRegister(0x29, 0x0B, 0x00);
 11408  0021C8  0E0B               	movlw	11
 11409  0021CA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11410  0021CC  0E00               	movlw	0
 11411  0021CE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11412  0021D0  0E29               	movlw	41
 11413  0021D2  EC3D  F030         	call	_I2C_Write1ByteRegister
 11414  0021D6  0E13               	movlw	19
 11415  0021D8  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11416  0021DA  0E29               	movlw	41
 11417  0021DC  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11418  0021E0                     
 11419                           ;vl53l0x.c: 412:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 11420  0021E0  0E00               	movlw	0
 11421  0021E2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11422  0021E4  0E00               	movlw	0
 11423  0021E6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11424  0021E8  0E29               	movlw	41
 11425  0021EA  EC3D  F030         	call	_I2C_Write1ByteRegister
 11426  0021EE                     
 11427                           ;vl53l0x.c: 413:     I2C_Write1ByteRegister(0x29, 0x01, 0xE8);
 11428  0021EE  0E01               	movlw	1
 11429  0021F0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11430  0021F2  0EE8               	movlw	232
 11431  0021F4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11432  0021F6  0E29               	movlw	41
 11433  0021F8  EC3D  F030         	call	_I2C_Write1ByteRegister
 11434                           
 11435                           ;vl53l0x.c: 414:         writeBuffer[0] = 0xB0;
 11436  0021FC  0EB0               	movlw	176
 11437  0021FE  0100               	movlb	0	; () banked
 11438  002200  6FA5               	movwf	_writeBuffer& (0+255),b
 11439                           
 11440                           ;vl53l0x.c: 415:         writeBuffer[1] = 0x07;
 11441  002202  0E07               	movlw	7
 11442  002204  6FA6               	movwf	(_writeBuffer+1)& (0+255),b
 11443                           
 11444                           ;vl53l0x.c: 416:         writeBuffer[2] = 0x00;
 11445  002206  0E00               	movlw	0
 11446  002208  6FA7               	movwf	(_writeBuffer+2)& (0+255),b
 11447                           
 11448                           ;vl53l0x.c: 417:         writeBuffer[3] = 0x00;
 11449  00220A  0E00               	movlw	0
 11450  00220C  6FA8               	movwf	(_writeBuffer+3)& (0+255),b
 11451                           
 11452                           ;vl53l0x.c: 418:         writeBuffer[4] = 0x00;
 11453  00220E  0E00               	movlw	0
 11454  002210  6FA9               	movwf	(_writeBuffer+4)& (0+255),b
 11455                           
 11456                           ;vl53l0x.c: 419:         writeBuffer[5] = 0x00;
 11457  002212  0E00               	movlw	0
 11458  002214  6FAA               	movwf	(_writeBuffer+5)& (0+255),b
 11459                           
 11460                           ;vl53l0x.c: 420:         writeBuffer[6] = 0x00;
 11461  002216  0E00               	movlw	0
 11462  002218  6FAB               	movwf	(_writeBuffer+6)& (0+255),b
 11463  00221A                     
 11464                           ; BSR set to: 0
 11465                           ;vl53l0x.c: 421:     I2C_WriteNBytes(0x29, &writeBuffer[0], 7);
 11466  00221A  0EA5               	movlw	low _writeBuffer
 11467  00221C  6E16               	movwf	I2C_WriteNBytes@data^0,c
 11468  00221E  0E00               	movlw	high _writeBuffer
 11469  002220  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 11470  002222  0E00               	movlw	0
 11471  002224  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 11472  002226  0E07               	movlw	7
 11473  002228  6E18               	movwf	I2C_WriteNBytes@len^0,c
 11474  00222A  0E29               	movlw	41
 11475  00222C  EC38  F031         	call	_I2C_WriteNBytes
 11476  002230                     
 11477                           ;vl53l0x.c: 422:         writeBuffer[0] = 0xB0;
 11478  002230  0EB0               	movlw	176
 11479  002232  0100               	movlb	0	; () banked
 11480  002234  6FA5               	movwf	_writeBuffer& (0+255),b
 11481                           
 11482                           ;vl53l0x.c: 423:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
 11483  002236  0EA5               	movlw	low _writeBuffer
 11484  002238  6E16               	movwf	I2C_WriteNBytes@data^0,c
 11485  00223A  0E00               	movlw	high _writeBuffer
 11486  00223C  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 11487  00223E  0E00               	movlw	0
 11488  002240  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 11489  002242  0E01               	movlw	1
 11490  002244  6E18               	movwf	I2C_WriteNBytes@len^0,c
 11491  002246  0E29               	movlw	41
 11492  002248  EC38  F031         	call	_I2C_WriteNBytes
 11493                           
 11494                           ;vl53l0x.c: 424:     I2C_ReadNBytes(0x29, &readBuffer[0], 6);
 11495  00224C  0E60               	movlw	low _readBuffer
 11496  00224E  6E16               	movwf	I2C_ReadNBytes@data^0,c
 11497  002250  0E01               	movlw	high _readBuffer
 11498  002252  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
 11499  002254  0E00               	movlw	0
 11500  002256  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
 11501  002258  0E06               	movlw	6
 11502  00225A  6E18               	movwf	I2C_ReadNBytes@len^0,c
 11503  00225C  0E29               	movlw	41
 11504  00225E  ECDD  F031         	call	_I2C_ReadNBytes
 11505                           
 11506                           ;vl53l0x.c: 425:     I2C_Write1ByteRegister(0x29, 0x01, 0xC0);
 11507  002262  0E01               	movlw	1
 11508  002264  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11509  002266  0EC0               	movlw	192
 11510  002268  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11511  00226A  0E29               	movlw	41
 11512  00226C  EC3D  F030         	call	_I2C_Write1ByteRegister
 11513                           
 11514                           ;vl53l0x.c: 426:     I2C_Write1ByteRegister(0x29, 0x80, 0x01);
 11515  002270  0E80               	movlw	128
 11516  002272  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11517  002274  0E01               	movlw	1
 11518  002276  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11519  002278  0E29               	movlw	41
 11520  00227A  EC3D  F030         	call	_I2C_Write1ByteRegister
 11521                           
 11522                           ;vl53l0x.c: 427:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 11523  00227E  0EFF               	movlw	255
 11524  002280  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11525  002282  0E01               	movlw	1
 11526  002284  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11527  002286  0E29               	movlw	41
 11528  002288  EC3D  F030         	call	_I2C_Write1ByteRegister
 11529                           
 11530                           ;vl53l0x.c: 428:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 11531  00228C  0E00               	movlw	0
 11532  00228E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11533  002290  0E00               	movlw	0
 11534  002292  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11535  002294  0E29               	movlw	41
 11536  002296  EC3D  F030         	call	_I2C_Write1ByteRegister
 11537                           
 11538                           ;vl53l0x.c: 429:     I2C_Write1ByteRegister(0x29, 0x91, 0x3C);
 11539  00229A  0E91               	movlw	145
 11540  00229C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11541  00229E  0E3C               	movlw	60
 11542  0022A0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11543  0022A2  0E29               	movlw	41
 11544  0022A4  EC3D  F030         	call	_I2C_Write1ByteRegister
 11545                           
 11546                           ;vl53l0x.c: 430:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 11547  0022A8  0E00               	movlw	0
 11548  0022AA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11549  0022AC  0E01               	movlw	1
 11550  0022AE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11551  0022B0  0E29               	movlw	41
 11552  0022B2  EC3D  F030         	call	_I2C_Write1ByteRegister
 11553                           
 11554                           ;vl53l0x.c: 431:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 11555  0022B6  0EFF               	movlw	255
 11556  0022B8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11557  0022BA  0E00               	movlw	0
 11558  0022BC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11559  0022BE  0E29               	movlw	41
 11560  0022C0  EC3D  F030         	call	_I2C_Write1ByteRegister
 11561                           
 11562                           ;vl53l0x.c: 432:     I2C_Write1ByteRegister(0x29, 0x80, 0x00);
 11563  0022C4  0E80               	movlw	128
 11564  0022C6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11565  0022C8  0E00               	movlw	0
 11566  0022CA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11567  0022CC  0E29               	movlw	41
 11568  0022CE  EC3D  F030         	call	_I2C_Write1ByteRegister
 11569                           
 11570                           ;vl53l0x.c: 433:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 11571  0022D2  0E00               	movlw	0
 11572  0022D4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11573  0022D6  0E01               	movlw	1
 11574  0022D8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11575  0022DA  0E29               	movlw	41
 11576  0022DC  EC3D  F030         	call	_I2C_Write1ByteRegister
 11577                           
 11578                           ;vl53l0x.c: 434:     data8 = I2C_Read1ByteRegister(0x29, 0x00);
 11579  0022E0  0E00               	movlw	0
 11580  0022E2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11581  0022E4  0E29               	movlw	41
 11582  0022E6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11583  0022EA  6E21               	movwf	VL53L0X_Init@data8^0,c
 11584                           
 11585                           ;vl53l0x.c: 435:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11586  0022EC  0E13               	movlw	19
 11587  0022EE  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11588  0022F0  0E29               	movlw	41
 11589  0022F2  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11590  0022F6  6E21               	movwf	VL53L0X_Init@data8^0,c
 11591                           
 11592                           ;vl53l0x.c: 436:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11593  0022F8  0E13               	movlw	19
 11594  0022FA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11595  0022FC  0E29               	movlw	41
 11596  0022FE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11597  002302  6E21               	movwf	VL53L0X_Init@data8^0,c
 11598                           
 11599                           ;vl53l0x.c: 437:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11600  002304  0E13               	movlw	19
 11601  002306  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11602  002308  0E29               	movlw	41
 11603  00230A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11604  00230E  6E21               	movwf	VL53L0X_Init@data8^0,c
 11605                           
 11606                           ;vl53l0x.c: 438:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11607  002310  0E13               	movlw	19
 11608  002312  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11609  002314  0E29               	movlw	41
 11610  002316  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11611  00231A  6E21               	movwf	VL53L0X_Init@data8^0,c
 11612                           
 11613                           ;vl53l0x.c: 439:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11614  00231C  0E13               	movlw	19
 11615  00231E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11616  002320  0E29               	movlw	41
 11617  002322  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11618  002326  6E21               	movwf	VL53L0X_Init@data8^0,c
 11619                           
 11620                           ;vl53l0x.c: 440:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11621  002328  0E13               	movlw	19
 11622  00232A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11623  00232C  0E29               	movlw	41
 11624  00232E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11625  002332  6E21               	movwf	VL53L0X_Init@data8^0,c
 11626                           
 11627                           ;vl53l0x.c: 441:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11628  002334  0E13               	movlw	19
 11629  002336  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11630  002338  0E29               	movlw	41
 11631  00233A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11632  00233E  6E21               	movwf	VL53L0X_Init@data8^0,c
 11633                           
 11634                           ;vl53l0x.c: 442:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11635  002340  0E13               	movlw	19
 11636  002342  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11637  002344  0E29               	movlw	41
 11638  002346  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11639  00234A  6E21               	movwf	VL53L0X_Init@data8^0,c
 11640                           
 11641                           ;vl53l0x.c: 443:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11642  00234C  0E13               	movlw	19
 11643  00234E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11644  002350  0E29               	movlw	41
 11645  002352  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11646  002356  6E21               	movwf	VL53L0X_Init@data8^0,c
 11647                           
 11648                           ;vl53l0x.c: 444:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11649  002358  0E13               	movlw	19
 11650  00235A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11651  00235C  0E29               	movlw	41
 11652  00235E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11653  002362  6E21               	movwf	VL53L0X_Init@data8^0,c
 11654                           
 11655                           ;vl53l0x.c: 445:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11656  002364  0E13               	movlw	19
 11657  002366  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11658  002368  0E29               	movlw	41
 11659  00236A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11660  00236E  6E21               	movwf	VL53L0X_Init@data8^0,c
 11661                           
 11662                           ;vl53l0x.c: 446:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11663  002370  0E13               	movlw	19
 11664  002372  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11665  002374  0E29               	movlw	41
 11666  002376  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11667  00237A  6E21               	movwf	VL53L0X_Init@data8^0,c
 11668                           
 11669                           ;vl53l0x.c: 447:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11670  00237C  0E13               	movlw	19
 11671  00237E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11672  002380  0E29               	movlw	41
 11673  002382  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11674  002386  6E21               	movwf	VL53L0X_Init@data8^0,c
 11675                           
 11676                           ;vl53l0x.c: 448:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11677  002388  0E13               	movlw	19
 11678  00238A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11679  00238C  0E29               	movlw	41
 11680  00238E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11681  002392  6E21               	movwf	VL53L0X_Init@data8^0,c
 11682                           
 11683                           ;vl53l0x.c: 449:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11684  002394  0E13               	movlw	19
 11685  002396  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11686  002398  0E29               	movlw	41
 11687  00239A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11688  00239E  6E21               	movwf	VL53L0X_Init@data8^0,c
 11689                           
 11690                           ;vl53l0x.c: 450:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11691  0023A0  0E13               	movlw	19
 11692  0023A2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11693  0023A4  0E29               	movlw	41
 11694  0023A6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11695  0023AA  6E21               	movwf	VL53L0X_Init@data8^0,c
 11696                           
 11697                           ;vl53l0x.c: 451:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11698  0023AC  0E13               	movlw	19
 11699  0023AE  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11700  0023B0  0E29               	movlw	41
 11701  0023B2  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11702  0023B6  6E21               	movwf	VL53L0X_Init@data8^0,c
 11703                           
 11704                           ;vl53l0x.c: 452:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11705  0023B8  0E13               	movlw	19
 11706  0023BA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11707  0023BC  0E29               	movlw	41
 11708  0023BE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11709  0023C2  6E21               	movwf	VL53L0X_Init@data8^0,c
 11710                           
 11711                           ;vl53l0x.c: 453:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11712  0023C4  0E13               	movlw	19
 11713  0023C6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11714  0023C8  0E29               	movlw	41
 11715  0023CA  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11716  0023CE  6E21               	movwf	VL53L0X_Init@data8^0,c
 11717                           
 11718                           ;vl53l0x.c: 454:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11719  0023D0  0E13               	movlw	19
 11720  0023D2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11721  0023D4  0E29               	movlw	41
 11722  0023D6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11723  0023DA  6E21               	movwf	VL53L0X_Init@data8^0,c
 11724                           
 11725                           ;vl53l0x.c: 455:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11726  0023DC  0E13               	movlw	19
 11727  0023DE  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11728  0023E0  0E29               	movlw	41
 11729  0023E2  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11730  0023E6  6E21               	movwf	VL53L0X_Init@data8^0,c
 11731                           
 11732                           ;vl53l0x.c: 456:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11733  0023E8  0E13               	movlw	19
 11734  0023EA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11735  0023EC  0E29               	movlw	41
 11736  0023EE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11737  0023F2  6E21               	movwf	VL53L0X_Init@data8^0,c
 11738                           
 11739                           ;vl53l0x.c: 457:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11740  0023F4  0E13               	movlw	19
 11741  0023F6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11742  0023F8  0E29               	movlw	41
 11743  0023FA  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11744  0023FE  6E21               	movwf	VL53L0X_Init@data8^0,c
 11745                           
 11746                           ;vl53l0x.c: 458:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11747  002400  0E13               	movlw	19
 11748  002402  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11749  002404  0E29               	movlw	41
 11750  002406  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11751  00240A  6E21               	movwf	VL53L0X_Init@data8^0,c
 11752  00240C                     
 11753                           ;vl53l0x.c: 459:         writeBuffer[0] = 0x14;
 11754  00240C  0E14               	movlw	20
 11755  00240E  0100               	movlb	0	; () banked
 11756  002410  6FA5               	movwf	_writeBuffer& (0+255),b
 11757  002412                     
 11758                           ; BSR set to: 0
 11759                           ;vl53l0x.c: 460:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
 11760  002412  0EA5               	movlw	low _writeBuffer
 11761  002414  6E16               	movwf	I2C_WriteNBytes@data^0,c
 11762  002416  0E00               	movlw	high _writeBuffer
 11763  002418  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 11764  00241A  0E00               	movlw	0
 11765  00241C  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 11766  00241E  0E01               	movlw	1
 11767  002420  6E18               	movwf	I2C_WriteNBytes@len^0,c
 11768  002422  0E29               	movlw	41
 11769  002424  EC38  F031         	call	_I2C_WriteNBytes
 11770  002428                     
 11771                           ;vl53l0x.c: 461:     I2C_ReadNBytes(0x29, &readBuffer[0], 12);
 11772  002428  0E60               	movlw	low _readBuffer
 11773  00242A  6E16               	movwf	I2C_ReadNBytes@data^0,c
 11774  00242C  0E01               	movlw	high _readBuffer
 11775  00242E  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
 11776  002430  0E00               	movlw	0
 11777  002432  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
 11778  002434  0E0C               	movlw	12
 11779  002436  6E18               	movwf	I2C_ReadNBytes@len^0,c
 11780  002438  0E29               	movlw	41
 11781  00243A  ECDD  F031         	call	_I2C_ReadNBytes
 11782  00243E                     
 11783                           ;vl53l0x.c: 462:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 11784  00243E  0EFF               	movlw	255
 11785  002440  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11786  002442  0E01               	movlw	1
 11787  002444  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11788  002446  0E29               	movlw	41
 11789  002448  EC3D  F030         	call	_I2C_Write1ByteRegister
 11790  00244C                     
 11791                           ;vl53l0x.c: 463:     data16 = I2C_Read2ByteRegister(0x29, 0xB6);
 11792  00244C  0EB6               	movlw	182
 11793  00244E  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 11794  002450  0E29               	movlw	41
 11795  002452  ECD2  F02E         	call	_I2C_Read2ByteRegister
 11796  002456  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 11797  00245A  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 11798  00245E                     
 11799                           ;vl53l0x.c: 464:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 11800  00245E  0EFF               	movlw	255
 11801  002460  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11802  002462  0E00               	movlw	0
 11803  002464  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11804  002466  0E29               	movlw	41
 11805  002468  EC3D  F030         	call	_I2C_Write1ByteRegister
 11806  00246C                     
 11807                           ;vl53l0x.c: 465:     I2C_Write1ByteRegister(0x29, 0x0B, 0x01);
 11808  00246C  0E0B               	movlw	11
 11809  00246E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11810  002470  0E01               	movlw	1
 11811  002472  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11812  002474  0E29               	movlw	41
 11813  002476  EC3D  F030         	call	_I2C_Write1ByteRegister
 11814  00247A                     
 11815                           ;vl53l0x.c: 466:     I2C_Write1ByteRegister(0x29, 0x0B, 0x00);
 11816  00247A  0E0B               	movlw	11
 11817  00247C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11818  00247E  0E00               	movlw	0
 11819  002480  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11820  002482  0E29               	movlw	41
 11821  002484  EC3D  F030         	call	_I2C_Write1ByteRegister
 11822  002488  0E13               	movlw	19
 11823  00248A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11824  00248C  0E29               	movlw	41
 11825  00248E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11826  002492                     
 11827                           ;vl53l0x.c: 468:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 11828  002492  0EFF               	movlw	255
 11829  002494  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11830  002496  0E01               	movlw	1
 11831  002498  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11832  00249A  0E29               	movlw	41
 11833  00249C  EC3D  F030         	call	_I2C_Write1ByteRegister
 11834  0024A0                     
 11835                           ;vl53l0x.c: 469:     data16 = I2C_Read2ByteRegister(0x29, 0xB6);
 11836  0024A0  0EB6               	movlw	182
 11837  0024A2  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 11838  0024A4  0E29               	movlw	41
 11839  0024A6  ECD2  F02E         	call	_I2C_Read2ByteRegister
 11840  0024AA  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 11841  0024AE  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 11842  0024B2                     
 11843                           ;vl53l0x.c: 470:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 11844  0024B2  0EFF               	movlw	255
 11845  0024B4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11846  0024B6  0E00               	movlw	0
 11847  0024B8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11848  0024BA  0E29               	movlw	41
 11849  0024BC  EC3D  F030         	call	_I2C_Write1ByteRegister
 11850  0024C0                     
 11851                           ;vl53l0x.c: 471:     I2C_Write1ByteRegister(0x29, 0x01, 0xE8);
 11852  0024C0  0E01               	movlw	1
 11853  0024C2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11854  0024C4  0EE8               	movlw	232
 11855  0024C6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11856  0024C8  0E29               	movlw	41
 11857  0024CA  EC3D  F030         	call	_I2C_Write1ByteRegister
 11858  0024CE                     
 11859                           ;vl53l0x.c: 472:         writeBuffer[0] = 0xB0;
 11860  0024CE  0EB0               	movlw	176
 11861  0024D0  0100               	movlb	0	; () banked
 11862  0024D2  6FA5               	movwf	_writeBuffer& (0+255),b
 11863  0024D4                     
 11864                           ; BSR set to: 0
 11865                           ;vl53l0x.c: 473:         writeBuffer[1] = 0x0F;
 11866  0024D4  0E0F               	movlw	15
 11867  0024D6  6FA6               	movwf	(_writeBuffer+1)& (0+255),b
 11868  0024D8                     
 11869                           ; BSR set to: 0
 11870                           ;vl53l0x.c: 474:         writeBuffer[2] = 0x00;
 11871  0024D8  0E00               	movlw	0
 11872  0024DA  6FA7               	movwf	(_writeBuffer+2)& (0+255),b
 11873  0024DC                     
 11874                           ; BSR set to: 0
 11875                           ;vl53l0x.c: 475:         writeBuffer[3] = 0x00;
 11876  0024DC  0E00               	movlw	0
 11877  0024DE  6FA8               	movwf	(_writeBuffer+3)& (0+255),b
 11878  0024E0                     
 11879                           ; BSR set to: 0
 11880                           ;vl53l0x.c: 476:         writeBuffer[4] = 0x00;
 11881  0024E0  0E00               	movlw	0
 11882  0024E2  6FA9               	movwf	(_writeBuffer+4)& (0+255),b
 11883  0024E4                     
 11884                           ; BSR set to: 0
 11885                           ;vl53l0x.c: 477:         writeBuffer[5] = 0x00;
 11886  0024E4  0E00               	movlw	0
 11887  0024E6  6FAA               	movwf	(_writeBuffer+5)& (0+255),b
 11888  0024E8                     
 11889                           ; BSR set to: 0
 11890                           ;vl53l0x.c: 478:         writeBuffer[6] = 0x00;
 11891  0024E8  0E00               	movlw	0
 11892  0024EA  6FAB               	movwf	(_writeBuffer+6)& (0+255),b
 11893                           
 11894                           ;vl53l0x.c: 479:     I2C_WriteNBytes(0x29, &writeBuffer[0], 7);
 11895  0024EC  0EA5               	movlw	low _writeBuffer
 11896  0024EE  6E16               	movwf	I2C_WriteNBytes@data^0,c
 11897  0024F0  0E00               	movlw	high _writeBuffer
 11898  0024F2  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 11899  0024F4  0E00               	movlw	0
 11900  0024F6  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 11901  0024F8  0E07               	movlw	7
 11902  0024FA  6E18               	movwf	I2C_WriteNBytes@len^0,c
 11903  0024FC  0E29               	movlw	41
 11904  0024FE  EC38  F031         	call	_I2C_WriteNBytes
 11905                           
 11906                           ;vl53l0x.c: 480:     I2C_Write1ByteRegister(0x29, 0x01, 0xC0);
 11907  002502  0E01               	movlw	1
 11908  002504  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11909  002506  0EC0               	movlw	192
 11910  002508  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11911  00250A  0E29               	movlw	41
 11912  00250C  EC3D  F030         	call	_I2C_Write1ByteRegister
 11913                           
 11914                           ;vl53l0x.c: 481:     I2C_Write1ByteRegister(0x29, 0x80, 0x01);
 11915  002510  0E80               	movlw	128
 11916  002512  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11917  002514  0E01               	movlw	1
 11918  002516  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11919  002518  0E29               	movlw	41
 11920  00251A  EC3D  F030         	call	_I2C_Write1ByteRegister
 11921                           
 11922                           ;vl53l0x.c: 482:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 11923  00251E  0EFF               	movlw	255
 11924  002520  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11925  002522  0E01               	movlw	1
 11926  002524  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11927  002526  0E29               	movlw	41
 11928  002528  EC3D  F030         	call	_I2C_Write1ByteRegister
 11929                           
 11930                           ;vl53l0x.c: 483:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 11931  00252C  0E00               	movlw	0
 11932  00252E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11933  002530  0E00               	movlw	0
 11934  002532  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11935  002534  0E29               	movlw	41
 11936  002536  EC3D  F030         	call	_I2C_Write1ByteRegister
 11937                           
 11938                           ;vl53l0x.c: 484:     I2C_Write1ByteRegister(0x29, 0x91, 0x3C);
 11939  00253A  0E91               	movlw	145
 11940  00253C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11941  00253E  0E3C               	movlw	60
 11942  002540  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11943  002542  0E29               	movlw	41
 11944  002544  EC3D  F030         	call	_I2C_Write1ByteRegister
 11945                           
 11946                           ;vl53l0x.c: 485:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 11947  002548  0E00               	movlw	0
 11948  00254A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11949  00254C  0E01               	movlw	1
 11950  00254E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11951  002550  0E29               	movlw	41
 11952  002552  EC3D  F030         	call	_I2C_Write1ByteRegister
 11953                           
 11954                           ;vl53l0x.c: 486:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 11955  002556  0EFF               	movlw	255
 11956  002558  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11957  00255A  0E00               	movlw	0
 11958  00255C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11959  00255E  0E29               	movlw	41
 11960  002560  EC3D  F030         	call	_I2C_Write1ByteRegister
 11961                           
 11962                           ;vl53l0x.c: 487:     I2C_Write1ByteRegister(0x29, 0x80, 0x00);
 11963  002564  0E80               	movlw	128
 11964  002566  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11965  002568  0E00               	movlw	0
 11966  00256A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11967  00256C  0E29               	movlw	41
 11968  00256E  EC3D  F030         	call	_I2C_Write1ByteRegister
 11969                           
 11970                           ;vl53l0x.c: 488:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 11971  002572  0E00               	movlw	0
 11972  002574  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 11973  002576  0E01               	movlw	1
 11974  002578  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 11975  00257A  0E29               	movlw	41
 11976  00257C  EC3D  F030         	call	_I2C_Write1ByteRegister
 11977                           
 11978                           ;vl53l0x.c: 489:     data8 = I2C_Read1ByteRegister(0x29, 0x00);
 11979  002580  0E00               	movlw	0
 11980  002582  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11981  002584  0E29               	movlw	41
 11982  002586  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11983  00258A  6E21               	movwf	VL53L0X_Init@data8^0,c
 11984                           
 11985                           ;vl53l0x.c: 490:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11986  00258C  0E13               	movlw	19
 11987  00258E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11988  002590  0E29               	movlw	41
 11989  002592  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11990  002596  6E21               	movwf	VL53L0X_Init@data8^0,c
 11991                           
 11992                           ;vl53l0x.c: 491:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 11993  002598  0E13               	movlw	19
 11994  00259A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 11995  00259C  0E29               	movlw	41
 11996  00259E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 11997  0025A2  6E21               	movwf	VL53L0X_Init@data8^0,c
 11998                           
 11999                           ;vl53l0x.c: 492:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12000  0025A4  0E13               	movlw	19
 12001  0025A6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12002  0025A8  0E29               	movlw	41
 12003  0025AA  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12004  0025AE  6E21               	movwf	VL53L0X_Init@data8^0,c
 12005                           
 12006                           ;vl53l0x.c: 493:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12007  0025B0  0E13               	movlw	19
 12008  0025B2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12009  0025B4  0E29               	movlw	41
 12010  0025B6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12011  0025BA  6E21               	movwf	VL53L0X_Init@data8^0,c
 12012                           
 12013                           ;vl53l0x.c: 494:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12014  0025BC  0E13               	movlw	19
 12015  0025BE  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12016  0025C0  0E29               	movlw	41
 12017  0025C2  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12018  0025C6  6E21               	movwf	VL53L0X_Init@data8^0,c
 12019                           
 12020                           ;vl53l0x.c: 495:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12021  0025C8  0E13               	movlw	19
 12022  0025CA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12023  0025CC  0E29               	movlw	41
 12024  0025CE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12025  0025D2  6E21               	movwf	VL53L0X_Init@data8^0,c
 12026                           
 12027                           ;vl53l0x.c: 496:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12028  0025D4  0E13               	movlw	19
 12029  0025D6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12030  0025D8  0E29               	movlw	41
 12031  0025DA  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12032  0025DE  6E21               	movwf	VL53L0X_Init@data8^0,c
 12033                           
 12034                           ;vl53l0x.c: 497:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12035  0025E0  0E13               	movlw	19
 12036  0025E2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12037  0025E4  0E29               	movlw	41
 12038  0025E6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12039  0025EA  6E21               	movwf	VL53L0X_Init@data8^0,c
 12040                           
 12041                           ;vl53l0x.c: 498:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12042  0025EC  0E13               	movlw	19
 12043  0025EE  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12044  0025F0  0E29               	movlw	41
 12045  0025F2  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12046  0025F6  6E21               	movwf	VL53L0X_Init@data8^0,c
 12047                           
 12048                           ;vl53l0x.c: 499:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12049  0025F8  0E13               	movlw	19
 12050  0025FA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12051  0025FC  0E29               	movlw	41
 12052  0025FE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12053  002602  6E21               	movwf	VL53L0X_Init@data8^0,c
 12054                           
 12055                           ;vl53l0x.c: 500:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12056  002604  0E13               	movlw	19
 12057  002606  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12058  002608  0E29               	movlw	41
 12059  00260A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12060  00260E  6E21               	movwf	VL53L0X_Init@data8^0,c
 12061                           
 12062                           ;vl53l0x.c: 501:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12063  002610  0E13               	movlw	19
 12064  002612  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12065  002614  0E29               	movlw	41
 12066  002616  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12067  00261A  6E21               	movwf	VL53L0X_Init@data8^0,c
 12068                           
 12069                           ;vl53l0x.c: 502:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12070  00261C  0E13               	movlw	19
 12071  00261E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12072  002620  0E29               	movlw	41
 12073  002622  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12074  002626  6E21               	movwf	VL53L0X_Init@data8^0,c
 12075                           
 12076                           ;vl53l0x.c: 503:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12077  002628  0E13               	movlw	19
 12078  00262A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12079  00262C  0E29               	movlw	41
 12080  00262E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12081  002632  6E21               	movwf	VL53L0X_Init@data8^0,c
 12082                           
 12083                           ;vl53l0x.c: 504:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12084  002634  0E13               	movlw	19
 12085  002636  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12086  002638  0E29               	movlw	41
 12087  00263A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12088  00263E  6E21               	movwf	VL53L0X_Init@data8^0,c
 12089                           
 12090                           ;vl53l0x.c: 505:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12091  002640  0E13               	movlw	19
 12092  002642  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12093  002644  0E29               	movlw	41
 12094  002646  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12095  00264A  6E21               	movwf	VL53L0X_Init@data8^0,c
 12096                           
 12097                           ;vl53l0x.c: 506:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12098  00264C  0E13               	movlw	19
 12099  00264E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12100  002650  0E29               	movlw	41
 12101  002652  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12102  002656  6E21               	movwf	VL53L0X_Init@data8^0,c
 12103                           
 12104                           ;vl53l0x.c: 507:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12105  002658  0E13               	movlw	19
 12106  00265A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12107  00265C  0E29               	movlw	41
 12108  00265E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12109  002662  6E21               	movwf	VL53L0X_Init@data8^0,c
 12110                           
 12111                           ;vl53l0x.c: 508:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12112  002664  0E13               	movlw	19
 12113  002666  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12114  002668  0E29               	movlw	41
 12115  00266A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12116  00266E  6E21               	movwf	VL53L0X_Init@data8^0,c
 12117                           
 12118                           ;vl53l0x.c: 509:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12119  002670  0E13               	movlw	19
 12120  002672  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12121  002674  0E29               	movlw	41
 12122  002676  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12123  00267A  6E21               	movwf	VL53L0X_Init@data8^0,c
 12124                           
 12125                           ;vl53l0x.c: 510:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12126  00267C  0E13               	movlw	19
 12127  00267E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12128  002680  0E29               	movlw	41
 12129  002682  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12130  002686  6E21               	movwf	VL53L0X_Init@data8^0,c
 12131                           
 12132                           ;vl53l0x.c: 511:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12133  002688  0E13               	movlw	19
 12134  00268A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12135  00268C  0E29               	movlw	41
 12136  00268E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12137  002692  6E21               	movwf	VL53L0X_Init@data8^0,c
 12138                           
 12139                           ;vl53l0x.c: 512:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12140  002694  0E13               	movlw	19
 12141  002696  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12142  002698  0E29               	movlw	41
 12143  00269A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12144  00269E  6E21               	movwf	VL53L0X_Init@data8^0,c
 12145                           
 12146                           ;vl53l0x.c: 513:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12147  0026A0  0E13               	movlw	19
 12148  0026A2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12149  0026A4  0E29               	movlw	41
 12150  0026A6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12151  0026AA  6E21               	movwf	VL53L0X_Init@data8^0,c
 12152  0026AC                     
 12153                           ;vl53l0x.c: 514:         writeBuffer[0] = 0x14;
 12154  0026AC  0E14               	movlw	20
 12155  0026AE  0100               	movlb	0	; () banked
 12156  0026B0  6FA5               	movwf	_writeBuffer& (0+255),b
 12157  0026B2                     
 12158                           ; BSR set to: 0
 12159                           ;vl53l0x.c: 515:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
 12160  0026B2  0EA5               	movlw	low _writeBuffer
 12161  0026B4  6E16               	movwf	I2C_WriteNBytes@data^0,c
 12162  0026B6  0E00               	movlw	high _writeBuffer
 12163  0026B8  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 12164  0026BA  0E00               	movlw	0
 12165  0026BC  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 12166  0026BE  0E01               	movlw	1
 12167  0026C0  6E18               	movwf	I2C_WriteNBytes@len^0,c
 12168  0026C2  0E29               	movlw	41
 12169  0026C4  EC38  F031         	call	_I2C_WriteNBytes
 12170  0026C8                     
 12171                           ;vl53l0x.c: 516:     I2C_ReadNBytes(0x29, &readBuffer[0], 12);
 12172  0026C8  0E60               	movlw	low _readBuffer
 12173  0026CA  6E16               	movwf	I2C_ReadNBytes@data^0,c
 12174  0026CC  0E01               	movlw	high _readBuffer
 12175  0026CE  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
 12176  0026D0  0E00               	movlw	0
 12177  0026D2  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
 12178  0026D4  0E0C               	movlw	12
 12179  0026D6  6E18               	movwf	I2C_ReadNBytes@len^0,c
 12180  0026D8  0E29               	movlw	41
 12181  0026DA  ECDD  F031         	call	_I2C_ReadNBytes
 12182  0026DE                     
 12183                           ;vl53l0x.c: 517:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 12184  0026DE  0EFF               	movlw	255
 12185  0026E0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12186  0026E2  0E01               	movlw	1
 12187  0026E4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12188  0026E6  0E29               	movlw	41
 12189  0026E8  EC3D  F030         	call	_I2C_Write1ByteRegister
 12190  0026EC                     
 12191                           ;vl53l0x.c: 518:     data16 = I2C_Read2ByteRegister(0x29, 0xB6);
 12192  0026EC  0EB6               	movlw	182
 12193  0026EE  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 12194  0026F0  0E29               	movlw	41
 12195  0026F2  ECD2  F02E         	call	_I2C_Read2ByteRegister
 12196  0026F6  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 12197  0026FA  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 12198  0026FE                     
 12199                           ;vl53l0x.c: 519:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 12200  0026FE  0EFF               	movlw	255
 12201  002700  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12202  002702  0E00               	movlw	0
 12203  002704  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12204  002706  0E29               	movlw	41
 12205  002708  EC3D  F030         	call	_I2C_Write1ByteRegister
 12206  00270C                     
 12207                           ;vl53l0x.c: 520:     I2C_Write1ByteRegister(0x29, 0x0B, 0x01);
 12208  00270C  0E0B               	movlw	11
 12209  00270E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12210  002710  0E01               	movlw	1
 12211  002712  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12212  002714  0E29               	movlw	41
 12213  002716  EC3D  F030         	call	_I2C_Write1ByteRegister
 12214  00271A                     
 12215                           ;vl53l0x.c: 521:     I2C_Write1ByteRegister(0x29, 0x0B, 0x00);
 12216  00271A  0E0B               	movlw	11
 12217  00271C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12218  00271E  0E00               	movlw	0
 12219  002720  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12220  002722  0E29               	movlw	41
 12221  002724  EC3D  F030         	call	_I2C_Write1ByteRegister
 12222  002728  0E13               	movlw	19
 12223  00272A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12224  00272C  0E29               	movlw	41
 12225  00272E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12226  002732                     
 12227                           ;vl53l0x.c: 523:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 12228  002732  0EFF               	movlw	255
 12229  002734  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12230  002736  0E01               	movlw	1
 12231  002738  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12232  00273A  0E29               	movlw	41
 12233  00273C  EC3D  F030         	call	_I2C_Write1ByteRegister
 12234  002740                     
 12235                           ;vl53l0x.c: 524:     data16 = I2C_Read2ByteRegister(0x29, 0xB6);
 12236  002740  0EB6               	movlw	182
 12237  002742  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 12238  002744  0E29               	movlw	41
 12239  002746  ECD2  F02E         	call	_I2C_Read2ByteRegister
 12240  00274A  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 12241  00274E  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 12242  002752                     
 12243                           ;vl53l0x.c: 525:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 12244  002752  0EFF               	movlw	255
 12245  002754  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12246  002756  0E00               	movlw	0
 12247  002758  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12248  00275A  0E29               	movlw	41
 12249  00275C  EC3D  F030         	call	_I2C_Write1ByteRegister
 12250  002760                     
 12251                           ;vl53l0x.c: 526:     I2C_Write1ByteRegister(0x29, 0x01, 0xE8);
 12252  002760  0E01               	movlw	1
 12253  002762  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12254  002764  0EE8               	movlw	232
 12255  002766  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12256  002768  0E29               	movlw	41
 12257  00276A  EC3D  F030         	call	_I2C_Write1ByteRegister
 12258  00276E                     
 12259                           ;vl53l0x.c: 527:         writeBuffer[0] = 0xB0;
 12260  00276E  0EB0               	movlw	176
 12261  002770  0100               	movlb	0	; () banked
 12262  002772  6FA5               	movwf	_writeBuffer& (0+255),b
 12263  002774                     
 12264                           ; BSR set to: 0
 12265                           ;vl53l0x.c: 528:         writeBuffer[1] = 0x1F;
 12266  002774  0E1F               	movlw	31
 12267  002776  6FA6               	movwf	(_writeBuffer+1)& (0+255),b
 12268  002778                     
 12269                           ; BSR set to: 0
 12270                           ;vl53l0x.c: 529:         writeBuffer[2] = 0x00;
 12271  002778  0E00               	movlw	0
 12272  00277A  6FA7               	movwf	(_writeBuffer+2)& (0+255),b
 12273  00277C                     
 12274                           ; BSR set to: 0
 12275                           ;vl53l0x.c: 530:         writeBuffer[3] = 0x00;
 12276  00277C  0E00               	movlw	0
 12277  00277E  6FA8               	movwf	(_writeBuffer+3)& (0+255),b
 12278  002780                     
 12279                           ; BSR set to: 0
 12280                           ;vl53l0x.c: 531:         writeBuffer[4] = 0x00;
 12281  002780  0E00               	movlw	0
 12282  002782  6FA9               	movwf	(_writeBuffer+4)& (0+255),b
 12283  002784                     
 12284                           ; BSR set to: 0
 12285                           ;vl53l0x.c: 532:         writeBuffer[5] = 0x00;
 12286  002784  0E00               	movlw	0
 12287  002786  6FAA               	movwf	(_writeBuffer+5)& (0+255),b
 12288  002788                     
 12289                           ; BSR set to: 0
 12290                           ;vl53l0x.c: 533:         writeBuffer[6] = 0x00;
 12291  002788  0E00               	movlw	0
 12292  00278A  6FAB               	movwf	(_writeBuffer+6)& (0+255),b
 12293                           
 12294                           ;vl53l0x.c: 534:     I2C_WriteNBytes(0x29, &writeBuffer[0], 7);
 12295  00278C  0EA5               	movlw	low _writeBuffer
 12296  00278E  6E16               	movwf	I2C_WriteNBytes@data^0,c
 12297  002790  0E00               	movlw	high _writeBuffer
 12298  002792  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 12299  002794  0E00               	movlw	0
 12300  002796  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 12301  002798  0E07               	movlw	7
 12302  00279A  6E18               	movwf	I2C_WriteNBytes@len^0,c
 12303  00279C  0E29               	movlw	41
 12304  00279E  EC38  F031         	call	_I2C_WriteNBytes
 12305                           
 12306                           ;vl53l0x.c: 535:     I2C_Write1ByteRegister(0x29, 0x01, 0xC0);
 12307  0027A2  0E01               	movlw	1
 12308  0027A4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12309  0027A6  0EC0               	movlw	192
 12310  0027A8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12311  0027AA  0E29               	movlw	41
 12312  0027AC  EC3D  F030         	call	_I2C_Write1ByteRegister
 12313                           
 12314                           ;vl53l0x.c: 536:     I2C_Write1ByteRegister(0x29, 0x80, 0x01);
 12315  0027B0  0E80               	movlw	128
 12316  0027B2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12317  0027B4  0E01               	movlw	1
 12318  0027B6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12319  0027B8  0E29               	movlw	41
 12320  0027BA  EC3D  F030         	call	_I2C_Write1ByteRegister
 12321                           
 12322                           ;vl53l0x.c: 537:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 12323  0027BE  0EFF               	movlw	255
 12324  0027C0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12325  0027C2  0E01               	movlw	1
 12326  0027C4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12327  0027C6  0E29               	movlw	41
 12328  0027C8  EC3D  F030         	call	_I2C_Write1ByteRegister
 12329                           
 12330                           ;vl53l0x.c: 538:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 12331  0027CC  0E00               	movlw	0
 12332  0027CE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12333  0027D0  0E00               	movlw	0
 12334  0027D2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12335  0027D4  0E29               	movlw	41
 12336  0027D6  EC3D  F030         	call	_I2C_Write1ByteRegister
 12337                           
 12338                           ;vl53l0x.c: 539:     I2C_Write1ByteRegister(0x29, 0x91, 0x3C);
 12339  0027DA  0E91               	movlw	145
 12340  0027DC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12341  0027DE  0E3C               	movlw	60
 12342  0027E0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12343  0027E2  0E29               	movlw	41
 12344  0027E4  EC3D  F030         	call	_I2C_Write1ByteRegister
 12345                           
 12346                           ;vl53l0x.c: 540:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 12347  0027E8  0E00               	movlw	0
 12348  0027EA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12349  0027EC  0E01               	movlw	1
 12350  0027EE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12351  0027F0  0E29               	movlw	41
 12352  0027F2  EC3D  F030         	call	_I2C_Write1ByteRegister
 12353                           
 12354                           ;vl53l0x.c: 541:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 12355  0027F6  0EFF               	movlw	255
 12356  0027F8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12357  0027FA  0E00               	movlw	0
 12358  0027FC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12359  0027FE  0E29               	movlw	41
 12360  002800  EC3D  F030         	call	_I2C_Write1ByteRegister
 12361                           
 12362                           ;vl53l0x.c: 542:     I2C_Write1ByteRegister(0x29, 0x80, 0x00);
 12363  002804  0E80               	movlw	128
 12364  002806  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12365  002808  0E00               	movlw	0
 12366  00280A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12367  00280C  0E29               	movlw	41
 12368  00280E  EC3D  F030         	call	_I2C_Write1ByteRegister
 12369                           
 12370                           ;vl53l0x.c: 543:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 12371  002812  0E00               	movlw	0
 12372  002814  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12373  002816  0E01               	movlw	1
 12374  002818  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12375  00281A  0E29               	movlw	41
 12376  00281C  EC3D  F030         	call	_I2C_Write1ByteRegister
 12377                           
 12378                           ;vl53l0x.c: 544:     data8 = I2C_Read1ByteRegister(0x29, 0x00);
 12379  002820  0E00               	movlw	0
 12380  002822  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12381  002824  0E29               	movlw	41
 12382  002826  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12383  00282A  6E21               	movwf	VL53L0X_Init@data8^0,c
 12384                           
 12385                           ;vl53l0x.c: 545:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12386  00282C  0E13               	movlw	19
 12387  00282E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12388  002830  0E29               	movlw	41
 12389  002832  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12390  002836  6E21               	movwf	VL53L0X_Init@data8^0,c
 12391                           
 12392                           ;vl53l0x.c: 546:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12393  002838  0E13               	movlw	19
 12394  00283A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12395  00283C  0E29               	movlw	41
 12396  00283E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12397  002842  6E21               	movwf	VL53L0X_Init@data8^0,c
 12398                           
 12399                           ;vl53l0x.c: 547:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12400  002844  0E13               	movlw	19
 12401  002846  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12402  002848  0E29               	movlw	41
 12403  00284A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12404  00284E  6E21               	movwf	VL53L0X_Init@data8^0,c
 12405                           
 12406                           ;vl53l0x.c: 548:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12407  002850  0E13               	movlw	19
 12408  002852  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12409  002854  0E29               	movlw	41
 12410  002856  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12411  00285A  6E21               	movwf	VL53L0X_Init@data8^0,c
 12412                           
 12413                           ;vl53l0x.c: 549:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12414  00285C  0E13               	movlw	19
 12415  00285E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12416  002860  0E29               	movlw	41
 12417  002862  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12418  002866  6E21               	movwf	VL53L0X_Init@data8^0,c
 12419                           
 12420                           ;vl53l0x.c: 550:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12421  002868  0E13               	movlw	19
 12422  00286A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12423  00286C  0E29               	movlw	41
 12424  00286E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12425  002872  6E21               	movwf	VL53L0X_Init@data8^0,c
 12426                           
 12427                           ;vl53l0x.c: 551:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12428  002874  0E13               	movlw	19
 12429  002876  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12430  002878  0E29               	movlw	41
 12431  00287A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12432  00287E  6E21               	movwf	VL53L0X_Init@data8^0,c
 12433                           
 12434                           ;vl53l0x.c: 552:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12435  002880  0E13               	movlw	19
 12436  002882  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12437  002884  0E29               	movlw	41
 12438  002886  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12439  00288A  6E21               	movwf	VL53L0X_Init@data8^0,c
 12440                           
 12441                           ;vl53l0x.c: 553:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12442  00288C  0E13               	movlw	19
 12443  00288E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12444  002890  0E29               	movlw	41
 12445  002892  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12446  002896  6E21               	movwf	VL53L0X_Init@data8^0,c
 12447                           
 12448                           ;vl53l0x.c: 554:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12449  002898  0E13               	movlw	19
 12450  00289A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12451  00289C  0E29               	movlw	41
 12452  00289E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12453  0028A2  6E21               	movwf	VL53L0X_Init@data8^0,c
 12454                           
 12455                           ;vl53l0x.c: 555:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12456  0028A4  0E13               	movlw	19
 12457  0028A6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12458  0028A8  0E29               	movlw	41
 12459  0028AA  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12460  0028AE  6E21               	movwf	VL53L0X_Init@data8^0,c
 12461                           
 12462                           ;vl53l0x.c: 556:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12463  0028B0  0E13               	movlw	19
 12464  0028B2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12465  0028B4  0E29               	movlw	41
 12466  0028B6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12467  0028BA  6E21               	movwf	VL53L0X_Init@data8^0,c
 12468                           
 12469                           ;vl53l0x.c: 557:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12470  0028BC  0E13               	movlw	19
 12471  0028BE  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12472  0028C0  0E29               	movlw	41
 12473  0028C2  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12474  0028C6  6E21               	movwf	VL53L0X_Init@data8^0,c
 12475                           
 12476                           ;vl53l0x.c: 558:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12477  0028C8  0E13               	movlw	19
 12478  0028CA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12479  0028CC  0E29               	movlw	41
 12480  0028CE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12481  0028D2  6E21               	movwf	VL53L0X_Init@data8^0,c
 12482                           
 12483                           ;vl53l0x.c: 559:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12484  0028D4  0E13               	movlw	19
 12485  0028D6  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12486  0028D8  0E29               	movlw	41
 12487  0028DA  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12488  0028DE  6E21               	movwf	VL53L0X_Init@data8^0,c
 12489                           
 12490                           ;vl53l0x.c: 560:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12491  0028E0  0E13               	movlw	19
 12492  0028E2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12493  0028E4  0E29               	movlw	41
 12494  0028E6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12495  0028EA  6E21               	movwf	VL53L0X_Init@data8^0,c
 12496                           
 12497                           ;vl53l0x.c: 561:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12498  0028EC  0E13               	movlw	19
 12499  0028EE  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12500  0028F0  0E29               	movlw	41
 12501  0028F2  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12502  0028F6  6E21               	movwf	VL53L0X_Init@data8^0,c
 12503                           
 12504                           ;vl53l0x.c: 562:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12505  0028F8  0E13               	movlw	19
 12506  0028FA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12507  0028FC  0E29               	movlw	41
 12508  0028FE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12509  002902  6E21               	movwf	VL53L0X_Init@data8^0,c
 12510                           
 12511                           ;vl53l0x.c: 563:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12512  002904  0E13               	movlw	19
 12513  002906  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12514  002908  0E29               	movlw	41
 12515  00290A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12516  00290E  6E21               	movwf	VL53L0X_Init@data8^0,c
 12517                           
 12518                           ;vl53l0x.c: 564:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12519  002910  0E13               	movlw	19
 12520  002912  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12521  002914  0E29               	movlw	41
 12522  002916  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12523  00291A  6E21               	movwf	VL53L0X_Init@data8^0,c
 12524                           
 12525                           ;vl53l0x.c: 565:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12526  00291C  0E13               	movlw	19
 12527  00291E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12528  002920  0E29               	movlw	41
 12529  002922  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12530  002926  6E21               	movwf	VL53L0X_Init@data8^0,c
 12531                           
 12532                           ;vl53l0x.c: 566:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12533  002928  0E13               	movlw	19
 12534  00292A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12535  00292C  0E29               	movlw	41
 12536  00292E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12537  002932  6E21               	movwf	VL53L0X_Init@data8^0,c
 12538                           
 12539                           ;vl53l0x.c: 567:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12540  002934  0E13               	movlw	19
 12541  002936  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12542  002938  0E29               	movlw	41
 12543  00293A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12544  00293E  6E21               	movwf	VL53L0X_Init@data8^0,c
 12545                           
 12546                           ;vl53l0x.c: 568:     data8 = I2C_Read1ByteRegister(0x29, 0x13);
 12547  002940  0E13               	movlw	19
 12548  002942  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12549  002944  0E29               	movlw	41
 12550  002946  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12551  00294A  6E21               	movwf	VL53L0X_Init@data8^0,c
 12552  00294C                     
 12553                           ;vl53l0x.c: 569:         writeBuffer[0] = 0x14;
 12554  00294C  0E14               	movlw	20
 12555  00294E  0100               	movlb	0	; () banked
 12556  002950  6FA5               	movwf	_writeBuffer& (0+255),b
 12557  002952                     
 12558                           ; BSR set to: 0
 12559                           ;vl53l0x.c: 570:     I2C_WriteNBytes(0x29, &writeBuffer[0], 1);
 12560  002952  0EA5               	movlw	low _writeBuffer
 12561  002954  6E16               	movwf	I2C_WriteNBytes@data^0,c
 12562  002956  0E00               	movlw	high _writeBuffer
 12563  002958  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 12564  00295A  0E00               	movlw	0
 12565  00295C  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 12566  00295E  0E01               	movlw	1
 12567  002960  6E18               	movwf	I2C_WriteNBytes@len^0,c
 12568  002962  0E29               	movlw	41
 12569  002964  EC38  F031         	call	_I2C_WriteNBytes
 12570  002968                     
 12571                           ;vl53l0x.c: 571:     I2C_ReadNBytes(0x29, &readBuffer[0], 12);
 12572  002968  0E60               	movlw	low _readBuffer
 12573  00296A  6E16               	movwf	I2C_ReadNBytes@data^0,c
 12574  00296C  0E01               	movlw	high _readBuffer
 12575  00296E  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
 12576  002970  0E00               	movlw	0
 12577  002972  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
 12578  002974  0E0C               	movlw	12
 12579  002976  6E18               	movwf	I2C_ReadNBytes@len^0,c
 12580  002978  0E29               	movlw	41
 12581  00297A  ECDD  F031         	call	_I2C_ReadNBytes
 12582  00297E                     
 12583                           ;vl53l0x.c: 572:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 12584  00297E  0EFF               	movlw	255
 12585  002980  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12586  002982  0E01               	movlw	1
 12587  002984  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12588  002986  0E29               	movlw	41
 12589  002988  EC3D  F030         	call	_I2C_Write1ByteRegister
 12590  00298C                     
 12591                           ;vl53l0x.c: 573:     data16 = I2C_Read2ByteRegister(0x29, 0xB6);
 12592  00298C  0EB6               	movlw	182
 12593  00298E  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 12594  002990  0E29               	movlw	41
 12595  002992  ECD2  F02E         	call	_I2C_Read2ByteRegister
 12596  002996  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 12597  00299A  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 12598  00299E                     
 12599                           ;vl53l0x.c: 574:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 12600  00299E  0EFF               	movlw	255
 12601  0029A0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12602  0029A2  0E00               	movlw	0
 12603  0029A4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12604  0029A6  0E29               	movlw	41
 12605  0029A8  EC3D  F030         	call	_I2C_Write1ByteRegister
 12606  0029AC                     
 12607                           ;vl53l0x.c: 575:     I2C_Write1ByteRegister(0x29, 0x0B, 0x01);
 12608  0029AC  0E0B               	movlw	11
 12609  0029AE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12610  0029B0  0E01               	movlw	1
 12611  0029B2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12612  0029B4  0E29               	movlw	41
 12613  0029B6  EC3D  F030         	call	_I2C_Write1ByteRegister
 12614  0029BA                     
 12615                           ;vl53l0x.c: 576:     I2C_Write1ByteRegister(0x29, 0x0B, 0x00);
 12616  0029BA  0E0B               	movlw	11
 12617  0029BC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12618  0029BE  0E00               	movlw	0
 12619  0029C0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12620  0029C2  0E29               	movlw	41
 12621  0029C4  EC3D  F030         	call	_I2C_Write1ByteRegister
 12622  0029C8  0E13               	movlw	19
 12623  0029CA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12624  0029CC  0E29               	movlw	41
 12625  0029CE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12626  0029D2                     
 12627                           ;vl53l0x.c: 578:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 12628  0029D2  0EFF               	movlw	255
 12629  0029D4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12630  0029D6  0E01               	movlw	1
 12631  0029D8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12632  0029DA  0E29               	movlw	41
 12633  0029DC  EC3D  F030         	call	_I2C_Write1ByteRegister
 12634  0029E0                     
 12635                           ;vl53l0x.c: 579:     data16 = I2C_Read2ByteRegister(0x29, 0xB6);
 12636  0029E0  0EB6               	movlw	182
 12637  0029E2  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
 12638  0029E4  0E29               	movlw	41
 12639  0029E6  ECD2  F02E         	call	_I2C_Read2ByteRegister
 12640  0029EA  C016  F01F         	movff	?_I2C_Read2ByteRegister,VL53L0X_Init@data16
 12641  0029EE  C017  F020         	movff	?_I2C_Read2ByteRegister+1,VL53L0X_Init@data16+1
 12642  0029F2                     
 12643                           ;vl53l0x.c: 580:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 12644  0029F2  0EFF               	movlw	255
 12645  0029F4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12646  0029F6  0E00               	movlw	0
 12647  0029F8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12648  0029FA  0E29               	movlw	41
 12649  0029FC  EC3D  F030         	call	_I2C_Write1ByteRegister
 12650  002A00                     
 12651                           ;vl53l0x.c: 581:     I2C_Write1ByteRegister(0x29, 0x01, 0xE8);
 12652  002A00  0E01               	movlw	1
 12653  002A02  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12654  002A04  0EE8               	movlw	232
 12655  002A06  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12656  002A08  0E29               	movlw	41
 12657  002A0A  EC3D  F030         	call	_I2C_Write1ByteRegister
 12658  002A0E                     
 12659                           ;vl53l0x.c: 582:     I2C_Write1ByteRegister(0x29, 0x01, 0x01);
 12660  002A0E  0E01               	movlw	1
 12661  002A10  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12662  002A12  0E01               	movlw	1
 12663  002A14  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12664  002A16  0E29               	movlw	41
 12665  002A18  EC3D  F030         	call	_I2C_Write1ByteRegister
 12666  002A1C                     
 12667                           ;vl53l0x.c: 583:     I2C_Write1ByteRegister(0x29, 0x00, 0x41);
 12668  002A1C  0E00               	movlw	0
 12669  002A1E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12670  002A20  0E41               	movlw	65
 12671  002A22  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12672  002A24  0E29               	movlw	41
 12673  002A26  EC3D  F030         	call	_I2C_Write1ByteRegister
 12674  002A2A  0E13               	movlw	19
 12675  002A2C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12676  002A2E  0E29               	movlw	41
 12677  002A30  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12678  002A34  0E13               	movlw	19
 12679  002A36  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12680  002A38  0E29               	movlw	41
 12681  002A3A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12682  002A3E  0E13               	movlw	19
 12683  002A40  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12684  002A42  0E29               	movlw	41
 12685  002A44  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12686  002A48  0E13               	movlw	19
 12687  002A4A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12688  002A4C  0E29               	movlw	41
 12689  002A4E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12690  002A52  0E13               	movlw	19
 12691  002A54  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12692  002A56  0E29               	movlw	41
 12693  002A58  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12694  002A5C  0E13               	movlw	19
 12695  002A5E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12696  002A60  0E29               	movlw	41
 12697  002A62  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12698  002A66  0E13               	movlw	19
 12699  002A68  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12700  002A6A  0E29               	movlw	41
 12701  002A6C  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12702  002A70  0E13               	movlw	19
 12703  002A72  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12704  002A74  0E29               	movlw	41
 12705  002A76  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12706  002A7A  0E13               	movlw	19
 12707  002A7C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12708  002A7E  0E29               	movlw	41
 12709  002A80  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12710  002A84  0E13               	movlw	19
 12711  002A86  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12712  002A88  0E29               	movlw	41
 12713  002A8A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12714  002A8E  0E13               	movlw	19
 12715  002A90  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12716  002A92  0E29               	movlw	41
 12717  002A94  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12718  002A98  0E13               	movlw	19
 12719  002A9A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12720  002A9C  0E29               	movlw	41
 12721  002A9E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12722  002AA2  0E13               	movlw	19
 12723  002AA4  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12724  002AA6  0E29               	movlw	41
 12725  002AA8  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12726  002AAC                     
 12727                           ;vl53l0x.c: 597:     I2C_Write1ByteRegister(0x29, 0x0B, 0x01);
 12728  002AAC  0E0B               	movlw	11
 12729  002AAE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12730  002AB0  0E01               	movlw	1
 12731  002AB2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12732  002AB4  0E29               	movlw	41
 12733  002AB6  EC3D  F030         	call	_I2C_Write1ByteRegister
 12734  002ABA                     
 12735                           ;vl53l0x.c: 598:     I2C_Write1ByteRegister(0x29, 0x0B, 0x00);
 12736  002ABA  0E0B               	movlw	11
 12737  002ABC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12738  002ABE  0E00               	movlw	0
 12739  002AC0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12740  002AC2  0E29               	movlw	41
 12741  002AC4  EC3D  F030         	call	_I2C_Write1ByteRegister
 12742  002AC8  0E13               	movlw	19
 12743  002ACA  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12744  002ACC  0E29               	movlw	41
 12745  002ACE  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12746  002AD2                     
 12747                           ;vl53l0x.c: 600:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 12748  002AD2  0E00               	movlw	0
 12749  002AD4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12750  002AD6  0E00               	movlw	0
 12751  002AD8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12752  002ADA  0E29               	movlw	41
 12753  002ADC  EC3D  F030         	call	_I2C_Write1ByteRegister
 12754  002AE0                     
 12755                           ;vl53l0x.c: 601:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 12756  002AE0  0EFF               	movlw	255
 12757  002AE2  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12758  002AE4  0E01               	movlw	1
 12759  002AE6  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12760  002AE8  0E29               	movlw	41
 12761  002AEA  EC3D  F030         	call	_I2C_Write1ByteRegister
 12762  002AEE                     
 12763                           ;vl53l0x.c: 602:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 12764  002AEE  0E00               	movlw	0
 12765  002AF0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12766  002AF2  0E00               	movlw	0
 12767  002AF4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12768  002AF6  0E29               	movlw	41
 12769  002AF8  EC3D  F030         	call	_I2C_Write1ByteRegister
 12770  002AFC                     
 12771                           ;vl53l0x.c: 603:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 12772  002AFC  0EFF               	movlw	255
 12773  002AFE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12774  002B00  0E00               	movlw	0
 12775  002B02  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12776  002B04  0E29               	movlw	41
 12777  002B06  EC3D  F030         	call	_I2C_Write1ByteRegister
 12778  002B0A  0ECB               	movlw	203
 12779  002B0C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12780  002B0E  0E29               	movlw	41
 12781  002B10  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12782  002B14                     
 12783                           ;vl53l0x.c: 605:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 12784  002B14  0EFF               	movlw	255
 12785  002B16  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12786  002B18  0E01               	movlw	1
 12787  002B1A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12788  002B1C  0E29               	movlw	41
 12789  002B1E  EC3D  F030         	call	_I2C_Write1ByteRegister
 12790  002B22                     
 12791                           ;vl53l0x.c: 606:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 12792  002B22  0E00               	movlw	0
 12793  002B24  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12794  002B26  0E01               	movlw	1
 12795  002B28  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12796  002B2A  0E29               	movlw	41
 12797  002B2C  EC3D  F030         	call	_I2C_Write1ByteRegister
 12798  002B30                     
 12799                           ;vl53l0x.c: 607:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 12800  002B30  0EFF               	movlw	255
 12801  002B32  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12802  002B34  0E00               	movlw	0
 12803  002B36  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12804  002B38  0E29               	movlw	41
 12805  002B3A  EC3D  F030         	call	_I2C_Write1ByteRegister
 12806  002B3E                     
 12807                           ;vl53l0x.c: 608:     I2C_Write1ByteRegister(0x29, 0x01, 0x02);
 12808  002B3E  0E01               	movlw	1
 12809  002B40  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12810  002B42  0E02               	movlw	2
 12811  002B44  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12812  002B46  0E29               	movlw	41
 12813  002B48  EC3D  F030         	call	_I2C_Write1ByteRegister
 12814  002B4C                     
 12815                           ;vl53l0x.c: 609:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 12816  002B4C  0E00               	movlw	0
 12817  002B4E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12818  002B50  0E01               	movlw	1
 12819  002B52  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12820  002B54  0E29               	movlw	41
 12821  002B56  EC3D  F030         	call	_I2C_Write1ByteRegister
 12822  002B5A  0E00               	movlw	0
 12823  002B5C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12824  002B5E  0E29               	movlw	41
 12825  002B60  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12826  002B64  0E13               	movlw	19
 12827  002B66  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12828  002B68  0E29               	movlw	41
 12829  002B6A  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12830  002B6E  0E13               	movlw	19
 12831  002B70  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12832  002B72  0E29               	movlw	41
 12833  002B74  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12834  002B78  0E13               	movlw	19
 12835  002B7A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12836  002B7C  0E29               	movlw	41
 12837  002B7E  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12838  002B82                     
 12839                           ;vl53l0x.c: 614:     I2C_Write1ByteRegister(0x29, 0x0B, 0x01);
 12840  002B82  0E0B               	movlw	11
 12841  002B84  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12842  002B86  0E01               	movlw	1
 12843  002B88  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12844  002B8A  0E29               	movlw	41
 12845  002B8C  EC3D  F030         	call	_I2C_Write1ByteRegister
 12846  002B90                     
 12847                           ;vl53l0x.c: 615:     I2C_Write1ByteRegister(0x29, 0x0B, 0x00);
 12848  002B90  0E0B               	movlw	11
 12849  002B92  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12850  002B94  0E00               	movlw	0
 12851  002B96  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12852  002B98  0E29               	movlw	41
 12853  002B9A  EC3D  F030         	call	_I2C_Write1ByteRegister
 12854  002B9E  0E13               	movlw	19
 12855  002BA0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12856  002BA2  0E29               	movlw	41
 12857  002BA4  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12858  002BA8                     
 12859                           ;vl53l0x.c: 617:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 12860  002BA8  0E00               	movlw	0
 12861  002BAA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12862  002BAC  0E00               	movlw	0
 12863  002BAE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12864  002BB0  0E29               	movlw	41
 12865  002BB2  EC3D  F030         	call	_I2C_Write1ByteRegister
 12866  002BB6                     
 12867                           ;vl53l0x.c: 618:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 12868  002BB6  0EFF               	movlw	255
 12869  002BB8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12870  002BBA  0E01               	movlw	1
 12871  002BBC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12872  002BBE  0E29               	movlw	41
 12873  002BC0  EC3D  F030         	call	_I2C_Write1ByteRegister
 12874  002BC4                     
 12875                           ;vl53l0x.c: 619:     I2C_Write1ByteRegister(0x29, 0x00, 0x00);
 12876  002BC4  0E00               	movlw	0
 12877  002BC6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12878  002BC8  0E00               	movlw	0
 12879  002BCA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12880  002BCC  0E29               	movlw	41
 12881  002BCE  EC3D  F030         	call	_I2C_Write1ByteRegister
 12882  002BD2                     
 12883                           ;vl53l0x.c: 620:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 12884  002BD2  0EFF               	movlw	255
 12885  002BD4  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12886  002BD6  0E00               	movlw	0
 12887  002BD8  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12888  002BDA  0E29               	movlw	41
 12889  002BDC  EC3D  F030         	call	_I2C_Write1ByteRegister
 12890  002BE0  0EEE               	movlw	238
 12891  002BE2  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
 12892  002BE4  0E29               	movlw	41
 12893  002BE6  ECCB  F02F         	call	_I2C_Read1ByteRegister
 12894  002BEA                     
 12895                           ;vl53l0x.c: 622:     I2C_Write1ByteRegister(0x29, 0xFF, 0x01);
 12896  002BEA  0EFF               	movlw	255
 12897  002BEC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12898  002BEE  0E01               	movlw	1
 12899  002BF0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12900  002BF2  0E29               	movlw	41
 12901  002BF4  EC3D  F030         	call	_I2C_Write1ByteRegister
 12902  002BF8                     
 12903                           ;vl53l0x.c: 623:     I2C_Write1ByteRegister(0x29, 0x00, 0x01);
 12904  002BF8  0E00               	movlw	0
 12905  002BFA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12906  002BFC  0E01               	movlw	1
 12907  002BFE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12908  002C00  0E29               	movlw	41
 12909  002C02  EC3D  F030         	call	_I2C_Write1ByteRegister
 12910  002C06                     
 12911                           ;vl53l0x.c: 624:     I2C_Write1ByteRegister(0x29, 0xFF, 0x00);
 12912  002C06  0EFF               	movlw	255
 12913  002C08  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12914  002C0A  0E00               	movlw	0
 12915  002C0C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12916  002C0E  0E29               	movlw	41
 12917  002C10  EC3D  F030         	call	_I2C_Write1ByteRegister
 12918  002C14                     
 12919                           ;vl53l0x.c: 625:     I2C_Write1ByteRegister(0x29, 0x01, 0xE8);
 12920  002C14  0E01               	movlw	1
 12921  002C16  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
 12922  002C18  0EE8               	movlw	232
 12923  002C1A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
 12924  002C1C  0E29               	movlw	41
 12925  002C1E  EC3D  F030         	call	_I2C_Write1ByteRegister
 12926  002C22                     
 12927                           ;vl53l0x.c: 626:         writeBuffer[0] = 0x44;
 12928  002C22  0E44               	movlw	68
 12929  002C24  0100               	movlb	0	; () banked
 12930  002C26  6FA5               	movwf	_writeBuffer& (0+255),b
 12931  002C28                     
 12932                           ; BSR set to: 0
 12933                           ;vl53l0x.c: 627:         writeBuffer[1] = 0x00;
 12934  002C28  0E00               	movlw	0
 12935  002C2A  6FA6               	movwf	(_writeBuffer+1)& (0+255),b
 12936  002C2C                     
 12937                           ; BSR set to: 0
 12938                           ;vl53l0x.c: 628:         writeBuffer[2] = 0x20;
 12939  002C2C  0E20               	movlw	32
 12940  002C2E  6FA7               	movwf	(_writeBuffer+2)& (0+255),b
 12941                           
 12942                           ;vl53l0x.c: 629:     I2C_WriteNBytes(0x29, &writeBuffer[0], 3);
 12943  002C30  0EA5               	movlw	low _writeBuffer
 12944  002C32  6E16               	movwf	I2C_WriteNBytes@data^0,c
 12945  002C34  0E00               	movlw	high _writeBuffer
 12946  002C36  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
 12947  002C38  0E00               	movlw	0
 12948  002C3A  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
 12949  002C3C  0E03               	movlw	3
 12950  002C3E  6E18               	movwf	I2C_WriteNBytes@len^0,c
 12951  002C40  0E29               	movlw	41
 12952  002C42  EC38  F031         	call	_I2C_WriteNBytes
 12953  002C46                     
 12954                           ;vl53l0x.c: 631:     _delay((unsigned long)((10)*(8000000/4000.0)));
 12955  002C46  0E1A               	movlw	26
 12956  002C48  6E1E               	movwf	??_VL53L0X_Init^0,c
 12957  002C4A  0EF8               	movlw	248
 12958  002C4C                     u8307:
 12959  002C4C  2EE8               	decfsz	wreg,f,c
 12960  002C4E  D7FE               	bra	u8307
 12961  002C50  2E1E               	decfsz	??_VL53L0X_Init^0,f,c
 12962  002C52  D7FC               	bra	u8307
 12963  002C54  F000 F000          	nop2	
 12964  002C58  0012               	return		;funcret
 12965  002C5A                     __end_of_VL53L0X_Init:
 12966                           	callstack 0
 12967                           
 12968 ;; *************** function _I2C_WriteNBytes *****************
 12969 ;; Defined at:
 12970 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
 12971 ;; Parameters:    Size  Location     Type
 12972 ;;  address         1    wreg     unsigned char 
 12973 ;;  data            2   21[COMRAM] PTR unsigned char 
 12974 ;;		 -> writeBuffer(16), 
 12975 ;;  len             2   23[COMRAM] unsigned int 
 12976 ;; Auto vars:     Size  Location     Type
 12977 ;;  address         1   25[COMRAM] unsigned char 
 12978 ;; Return value:  Size  Location     Type
 12979 ;;                  1    wreg      void 
 12980 ;; Registers used:
 12981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12982 ;; Tracked objects:
 12983 ;;		On entry : 0/0
 12984 ;;		On exit  : 0/0
 12985 ;;		Unchanged: 0/0
 12986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12990 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12991 ;;Total ram usage:        5 bytes
 12992 ;; Hardware stack levels used: 1
 12993 ;; Hardware stack levels required when called: 12
 12994 ;; This function calls:
 12995 ;;		_I2C_Close
 12996 ;;		_I2C_MasterWrite
 12997 ;;		_I2C_Open
 12998 ;;		_I2C_SetAddressNackCallback
 12999 ;;		_I2C_SetBuffer
 13000 ;; This function is called by:
 13001 ;;		_VL53L0X_Init
 13002 ;;		_VL53L0X_Millimeter_GetValue
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           	psect	text35
 13007  006270                     __ptext35:
 13008                           	callstack 0
 13009  006270                     _I2C_WriteNBytes:
 13010                           	callstack 17
 13011                           
 13012                           ;incstack = 0
 13013                           ;I2C_WriteNBytes@address stored from wreg
 13014  006270  6E1A               	movwf	I2C_WriteNBytes@address^0,c
 13015  006272                     l6432:
 13016  006272  501A               	movf	I2C_WriteNBytes@address^0,w,c
 13017  006274  EC8B  F02E         	call	_I2C_Open
 13018  006278  0900               	iorlw	0
 13019  00627A  B4D8               	btfsc	status,2,c
 13020  00627C  EF42  F031         	goto	u5541
 13021  006280  EF44  F031         	goto	u5540
 13022  006284                     u5541:
 13023  006284  EF39  F031         	goto	l6432
 13024  006288                     u5540:
 13025  006288                     
 13026                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
 13027  006288  C016  F005         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
 13028  00628C  C017  F006         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
 13029  006290  C018  F007         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
 13030  006294  C019  F008         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
 13031  006298  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 13032  00629C                     
 13033                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
 13034  00629C  0E00               	movlw	0
 13035  00629E  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
 13036  0062A0  0E00               	movlw	0
 13037  0062A2  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
 13038  0062A4  0E00               	movlw	0
 13039  0062A6  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
 13040  0062A8  0E00               	movlw	0
 13041  0062AA  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
 13042  0062AC  EC00  F034         	call	_I2C_SetAddressNackCallback	;wreg free
 13043  0062B0                     
 13044                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
 13045  0062B0  EC91  F034         	call	_I2C_MasterWrite	;wreg free
 13046  0062B4                     l6440:
 13047  0062B4  EC7B  F033         	call	_I2C_Close	;wreg free
 13048  0062B8  06E8               	decf	wreg,f,c
 13049  0062BA  B4D8               	btfsc	status,2,c
 13050  0062BC  EF62  F031         	goto	u5551
 13051  0062C0  EF64  F031         	goto	u5550
 13052  0062C4                     u5551:
 13053  0062C4  EF5A  F031         	goto	l6440
 13054  0062C8                     u5550:
 13055  0062C8  0012               	return		;funcret
 13056  0062CA                     __end_of_I2C_WriteNBytes:
 13057                           	callstack 0
 13058                           
 13059 ;; *************** function _I2C_Write1ByteRegister *****************
 13060 ;; Defined at:
 13061 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;  address         1    wreg     unsigned char 
 13064 ;;  reg             1   21[COMRAM] unsigned char 
 13065 ;;  data            1   22[COMRAM] unsigned char 
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;  address         1   23[COMRAM] unsigned char 
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  1    wreg      void 
 13070 ;; Registers used:
 13071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13072 ;; Tracked objects:
 13073 ;;		On entry : 0/0
 13074 ;;		On exit  : 0/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13080 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13081 ;;Total ram usage:        3 bytes
 13082 ;; Hardware stack levels used: 1
 13083 ;; Hardware stack levels required when called: 12
 13084 ;; This function calls:
 13085 ;;		_I2C_Close
 13086 ;;		_I2C_MasterWrite
 13087 ;;		_I2C_Open
 13088 ;;		_I2C_SetAddressNackCallback
 13089 ;;		_I2C_SetBuffer
 13090 ;;		_I2C_SetDataCompleteCallback
 13091 ;; This function is called by:
 13092 ;;		_VL53L0X_Init
 13093 ;;		_VL53L0X_SetAdd
 13094 ;;		_VL53L0X_Millimeter_GetValue
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           	psect	text36
 13099  00607A                     __ptext36:
 13100                           	callstack 0
 13101  00607A                     _I2C_Write1ByteRegister:
 13102                           	callstack 17
 13103                           
 13104                           ;incstack = 0
 13105                           ;I2C_Write1ByteRegister@address stored from wreg
 13106  00607A  6E18               	movwf	I2C_Write1ByteRegister@address^0,c
 13107  00607C                     l6418:
 13108  00607C  5018               	movf	I2C_Write1ByteRegister@address^0,w,c
 13109  00607E  EC8B  F02E         	call	_I2C_Open
 13110  006082  0900               	iorlw	0
 13111  006084  B4D8               	btfsc	status,2,c
 13112  006086  EF47  F030         	goto	u5521
 13113  00608A  EF49  F030         	goto	u5520
 13114  00608E                     u5521:
 13115  00608E  EF3E  F030         	goto	l6418
 13116  006092                     u5520:
 13117  006092                     
 13118                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
 13119  006092  0E46               	movlw	low _wr1RegCompleteHandler
 13120  006094  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 13121  006096  0E66               	movlw	high _wr1RegCompleteHandler
 13122  006098  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 13123  00609A  0E17               	movlw	low I2C_Write1ByteRegister@data
 13124  00609C  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 13125  00609E  0E00               	movlw	high I2C_Write1ByteRegister@data
 13126  0060A0  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 13127  0060A2  EC0C  F034         	call	_I2C_SetDataCompleteCallback	;wreg free
 13128  0060A6                     
 13129                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
 13130  0060A6  0E16               	movlw	low I2C_Write1ByteRegister@reg
 13131  0060A8  6E05               	movwf	I2C_SetBuffer@buffer^0,c
 13132  0060AA  0E00               	movlw	high I2C_Write1ByteRegister@reg
 13133  0060AC  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
 13134  0060AE  0E00               	movlw	0
 13135  0060B0  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 13136  0060B2  0E01               	movlw	1
 13137  0060B4  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 13138  0060B6  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 13139  0060BA                     
 13140                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 13141  0060BA  0E00               	movlw	0
 13142  0060BC  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
 13143  0060BE  0E00               	movlw	0
 13144  0060C0  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
 13145  0060C2  0E00               	movlw	0
 13146  0060C4  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
 13147  0060C6  0E00               	movlw	0
 13148  0060C8  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
 13149  0060CA  EC00  F034         	call	_I2C_SetAddressNackCallback	;wreg free
 13150  0060CE                     
 13151                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
 13152  0060CE  EC91  F034         	call	_I2C_MasterWrite	;wreg free
 13153  0060D2                     l6428:
 13154  0060D2  EC7B  F033         	call	_I2C_Close	;wreg free
 13155  0060D6  06E8               	decf	wreg,f,c
 13156  0060D8  B4D8               	btfsc	status,2,c
 13157  0060DA  EF71  F030         	goto	u5531
 13158  0060DE  EF73  F030         	goto	u5530
 13159  0060E2                     u5531:
 13160  0060E2  EF69  F030         	goto	l6428
 13161  0060E6                     u5530:
 13162  0060E6  0012               	return		;funcret
 13163  0060E8                     __end_of_I2C_Write1ByteRegister:
 13164                           	callstack 0
 13165                           
 13166 ;; *************** function _I2C_ReadNBytes *****************
 13167 ;; Defined at:
 13168 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;  address         1    wreg     unsigned char 
 13171 ;;  data            2   21[COMRAM] PTR unsigned char 
 13172 ;;		 -> readBuffer(16), 
 13173 ;;  len             2   23[COMRAM] unsigned int 
 13174 ;; Auto vars:     Size  Location     Type
 13175 ;;  address         1   25[COMRAM] unsigned char 
 13176 ;; Return value:  Size  Location     Type
 13177 ;;                  1    wreg      void 
 13178 ;; Registers used:
 13179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13180 ;; Tracked objects:
 13181 ;;		On entry : 0/0
 13182 ;;		On exit  : 0/0
 13183 ;;		Unchanged: 0/0
 13184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13188 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;Total ram usage:        5 bytes
 13190 ;; Hardware stack levels used: 1
 13191 ;; Hardware stack levels required when called: 12
 13192 ;; This function calls:
 13193 ;;		_I2C_Close
 13194 ;;		_I2C_MasterRead
 13195 ;;		_I2C_Open
 13196 ;;		_I2C_SetBuffer
 13197 ;; This function is called by:
 13198 ;;		_VL53L0X_Init
 13199 ;;		_VL53L0X_Millimeter_GetValue
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           	psect	text37
 13204  0063BA                     __ptext37:
 13205                           	callstack 0
 13206  0063BA                     _I2C_ReadNBytes:
 13207                           	callstack 17
 13208                           
 13209                           ;incstack = 0
 13210                           ;I2C_ReadNBytes@address stored from wreg
 13211  0063BA  6E1A               	movwf	I2C_ReadNBytes@address^0,c
 13212  0063BC                     l6444:
 13213  0063BC  501A               	movf	I2C_ReadNBytes@address^0,w,c
 13214  0063BE  EC8B  F02E         	call	_I2C_Open
 13215  0063C2  0900               	iorlw	0
 13216  0063C4  B4D8               	btfsc	status,2,c
 13217  0063C6  EFE7  F031         	goto	u5561
 13218  0063CA  EFE9  F031         	goto	u5560
 13219  0063CE                     u5561:
 13220  0063CE  EFDE  F031         	goto	l6444
 13221  0063D2                     u5560:
 13222  0063D2                     
 13223                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
 13224  0063D2  C016  F005         	movff	I2C_ReadNBytes@data,I2C_SetBuffer@buffer
 13225  0063D6  C017  F006         	movff	I2C_ReadNBytes@data+1,I2C_SetBuffer@buffer+1
 13226  0063DA  C018  F007         	movff	I2C_ReadNBytes@len,I2C_SetBuffer@bufferSize
 13227  0063DE  C019  F008         	movff	I2C_ReadNBytes@len+1,I2C_SetBuffer@bufferSize+1
 13228  0063E2  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 13229  0063E6                     
 13230                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
 13231  0063E6  EC8D  F034         	call	_I2C_MasterRead	;wreg free
 13232  0063EA                     l6450:
 13233  0063EA  EC7B  F033         	call	_I2C_Close	;wreg free
 13234  0063EE  06E8               	decf	wreg,f,c
 13235  0063F0  B4D8               	btfsc	status,2,c
 13236  0063F2  EFFD  F031         	goto	u5571
 13237  0063F6  EFFF  F031         	goto	u5570
 13238  0063FA                     u5571:
 13239  0063FA  EFF5  F031         	goto	l6450
 13240  0063FE                     u5570:
 13241  0063FE  0012               	return		;funcret
 13242  006400                     __end_of_I2C_ReadNBytes:
 13243                           	callstack 0
 13244                           
 13245 ;; *************** function _I2C_MasterRead *****************
 13246 ;; Defined at:
 13247 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
 13248 ;; Parameters:    Size  Location     Type
 13249 ;;		None
 13250 ;; Auto vars:     Size  Location     Type
 13251 ;;		None
 13252 ;; Return value:  Size  Location     Type
 13253 ;;                  1    wreg      enum E355
 13254 ;; Registers used:
 13255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13256 ;; Tracked objects:
 13257 ;;		On entry : 0/0
 13258 ;;		On exit  : 0/0
 13259 ;;		Unchanged: 0/0
 13260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13265 ;;Total ram usage:        0 bytes
 13266 ;; Hardware stack levels used: 1
 13267 ;; Hardware stack levels required when called: 11
 13268 ;; This function calls:
 13269 ;;		_I2C_MasterOperation
 13270 ;; This function is called by:
 13271 ;;		_I2C_ReadNBytes
 13272 ;; This function uses a non-reentrant model
 13273 ;;
 13274                           
 13275                           	psect	text38
 13276  00691A                     __ptext38:
 13277                           	callstack 0
 13278  00691A                     _I2C_MasterRead:
 13279                           	callstack 17
 13280  00691A                     
 13281                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
 13282  00691A  0E01               	movlw	1
 13283  00691C  EC22  F032         	call	_I2C_MasterOperation
 13284  006920  0012               	return		;funcret
 13285  006922                     __end_of_I2C_MasterRead:
 13286                           	callstack 0
 13287                           
 13288 ;; *************** function _I2C_Read2ByteRegister *****************
 13289 ;; Defined at:
 13290 ;;		line 77 in file "mcc_generated_files/examples/i2c_master_example.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;  address         1    wreg     unsigned char 
 13293 ;;  reg             1   21[COMRAM] unsigned char 
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;  address         1   26[COMRAM] unsigned char 
 13296 ;;  returnValue     2   27[COMRAM] unsigned short 
 13297 ;; Return value:  Size  Location     Type
 13298 ;;                  2   21[COMRAM] unsigned short 
 13299 ;; Registers used:
 13300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13301 ;; Tracked objects:
 13302 ;;		On entry : 0/0
 13303 ;;		On exit  : 0/0
 13304 ;;		Unchanged: 0/0
 13305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13307 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13308 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13309 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13310 ;;Total ram usage:        8 bytes
 13311 ;; Hardware stack levels used: 1
 13312 ;; Hardware stack levels required when called: 12
 13313 ;; This function calls:
 13314 ;;		_I2C_Close
 13315 ;;		_I2C_MasterWrite
 13316 ;;		_I2C_Open
 13317 ;;		_I2C_SetAddressNackCallback
 13318 ;;		_I2C_SetBuffer
 13319 ;;		_I2C_SetDataCompleteCallback
 13320 ;; This function is called by:
 13321 ;;		_VL53L0X_Init
 13322 ;;		_VL53L0X_Millimeter_GetValue
 13323 ;; This function uses a non-reentrant model
 13324 ;;
 13325                           
 13326                           	psect	text39
 13327  005DA4                     __ptext39:
 13328                           	callstack 0
 13329  005DA4                     _I2C_Read2ByteRegister:
 13330                           	callstack 17
 13331                           
 13332                           ;incstack = 0
 13333                           ;I2C_Read2ByteRegister@address stored from wreg
 13334  005DA4  6E1B               	movwf	I2C_Read2ByteRegister@address^0,c
 13335  005DA6                     
 13336                           ;mcc_generated_files/examples/i2c_master_example.c: 77: uint16_t I2C_Read2ByteRegister(i
      +                          2c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 78
      +                          : {;mcc_generated_files/examples/i2c_master_example.c: 79:     uint16_t returnValue =0x0
      +                          0;
 13337  005DA6  0E00               	movlw	0
 13338  005DA8  6E1D               	movwf	(I2C_Read2ByteRegister@returnValue+1)^0,c
 13339  005DAA  0E00               	movlw	0
 13340  005DAC  6E1C               	movwf	I2C_Read2ByteRegister@returnValue^0,c
 13341  005DAE                     l6400:
 13342  005DAE  501B               	movf	I2C_Read2ByteRegister@address^0,w,c
 13343  005DB0  EC8B  F02E         	call	_I2C_Open
 13344  005DB4  0900               	iorlw	0
 13345  005DB6  B4D8               	btfsc	status,2,c
 13346  005DB8  EFE0  F02E         	goto	u5501
 13347  005DBC  EFE2  F02E         	goto	u5500
 13348  005DC0                     u5501:
 13349  005DC0  EFD7  F02E         	goto	l6400
 13350  005DC4                     u5500:
 13351  005DC4                     
 13352                           ;mcc_generated_files/examples/i2c_master_example.c: 82:     I2C_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&returnValue);
 13353  005DC4  0E72               	movlw	low _rd2RegCompleteHandler
 13354  005DC6  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 13355  005DC8  0E66               	movlw	high _rd2RegCompleteHandler
 13356  005DCA  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 13357  005DCC  0E1C               	movlw	low I2C_Read2ByteRegister@returnValue
 13358  005DCE  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 13359  005DD0  0E00               	movlw	high I2C_Read2ByteRegister@returnValue
 13360  005DD2  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 13361  005DD4  EC0C  F034         	call	_I2C_SetDataCompleteCallback	;wreg free
 13362  005DD8                     
 13363                           ;mcc_generated_files/examples/i2c_master_example.c: 83:     I2C_SetBuffer(&reg,1);
 13364  005DD8  0E16               	movlw	low I2C_Read2ByteRegister@reg
 13365  005DDA  6E05               	movwf	I2C_SetBuffer@buffer^0,c
 13366  005DDC  0E00               	movlw	high I2C_Read2ByteRegister@reg
 13367  005DDE  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
 13368  005DE0  0E00               	movlw	0
 13369  005DE2  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 13370  005DE4  0E01               	movlw	1
 13371  005DE6  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 13372  005DE8  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 13373  005DEC                     
 13374                           ;mcc_generated_files/examples/i2c_master_example.c: 84:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 13375  005DEC  0E00               	movlw	0
 13376  005DEE  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
 13377  005DF0  0E00               	movlw	0
 13378  005DF2  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
 13379  005DF4  0E00               	movlw	0
 13380  005DF6  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
 13381  005DF8  0E00               	movlw	0
 13382  005DFA  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
 13383  005DFC  EC00  F034         	call	_I2C_SetAddressNackCallback	;wreg free
 13384  005E00                     
 13385                           ;mcc_generated_files/examples/i2c_master_example.c: 85:     I2C_MasterWrite();
 13386  005E00  EC91  F034         	call	_I2C_MasterWrite	;wreg free
 13387  005E04                     l6410:
 13388  005E04  EC7B  F033         	call	_I2C_Close	;wreg free
 13389  005E08  06E8               	decf	wreg,f,c
 13390  005E0A  B4D8               	btfsc	status,2,c
 13391  005E0C  EF0A  F02F         	goto	u5511
 13392  005E10  EF0C  F02F         	goto	u5510
 13393  005E14                     u5511:
 13394  005E14  EF02  F02F         	goto	l6410
 13395  005E18                     u5510:
 13396  005E18                     
 13397                           ;mcc_generated_files/examples/i2c_master_example.c: 88:     return (returnValue << 8 | r
      +                          eturnValue >> 8);
 13398  005E18  C01D  F018         	movff	I2C_Read2ByteRegister@returnValue+1,??_I2C_Read2ByteRegister
 13399  005E1C  501C               	movf	I2C_Read2ByteRegister@returnValue^0,w,c
 13400  005E1E  6E19               	movwf	(??_I2C_Read2ByteRegister+1)^0,c
 13401  005E20  5018               	movf	??_I2C_Read2ByteRegister^0,w,c
 13402  005E22  6E16               	movwf	?_I2C_Read2ByteRegister^0,c
 13403  005E24  C019  F017         	movff	??_I2C_Read2ByteRegister+1,?_I2C_Read2ByteRegister+1
 13404  005E28  0012               	return		;funcret
 13405  005E2A                     __end_of_I2C_Read2ByteRegister:
 13406                           	callstack 0
 13407                           
 13408 ;; *************** function _I2C_Read1ByteRegister *****************
 13409 ;; Defined at:
 13410 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
 13411 ;; Parameters:    Size  Location     Type
 13412 ;;  address         1    wreg     unsigned char 
 13413 ;;  reg             1   21[COMRAM] unsigned char 
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;  address         1   22[COMRAM] unsigned char 
 13416 ;;  returnValue     1   23[COMRAM] unsigned char 
 13417 ;; Return value:  Size  Location     Type
 13418 ;;                  1    wreg      unsigned char 
 13419 ;; Registers used:
 13420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13421 ;; Tracked objects:
 13422 ;;		On entry : 0/0
 13423 ;;		On exit  : 0/0
 13424 ;;		Unchanged: 0/0
 13425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13426 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13430 ;;Total ram usage:        3 bytes
 13431 ;; Hardware stack levels used: 1
 13432 ;; Hardware stack levels required when called: 12
 13433 ;; This function calls:
 13434 ;;		_I2C_Close
 13435 ;;		_I2C_MasterWrite
 13436 ;;		_I2C_Open
 13437 ;;		_I2C_SetAddressNackCallback
 13438 ;;		_I2C_SetBuffer
 13439 ;;		_I2C_SetDataCompleteCallback
 13440 ;; This function is called by:
 13441 ;;		_VL53L0X_Init
 13442 ;;		_VL53L0X_Millimeter_GetValue
 13443 ;; This function uses a non-reentrant model
 13444 ;;
 13445                           
 13446                           	psect	text40
 13447  005F96                     __ptext40:
 13448                           	callstack 0
 13449  005F96                     _I2C_Read1ByteRegister:
 13450                           	callstack 17
 13451                           
 13452                           ;incstack = 0
 13453                           ;I2C_Read1ByteRegister@address stored from wreg
 13454  005F96  6E17               	movwf	I2C_Read1ByteRegister@address^0,c
 13455  005F98                     
 13456                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
 13457  005F98  0E00               	movlw	0
 13458  005F9A  6E18               	movwf	I2C_Read1ByteRegister@returnValue^0,c
 13459  005F9C                     l6382:
 13460  005F9C  5017               	movf	I2C_Read1ByteRegister@address^0,w,c
 13461  005F9E  EC8B  F02E         	call	_I2C_Open
 13462  005FA2  0900               	iorlw	0
 13463  005FA4  B4D8               	btfsc	status,2,c
 13464  005FA6  EFD7  F02F         	goto	u5481
 13465  005FAA  EFD9  F02F         	goto	u5480
 13466  005FAE                     u5481:
 13467  005FAE  EFCE  F02F         	goto	l6382
 13468  005FB2                     u5480:
 13469  005FB2                     
 13470                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
 13471  005FB2  0E9E               	movlw	low _rd1RegCompleteHandler
 13472  005FB4  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 13473  005FB6  0E66               	movlw	high _rd1RegCompleteHandler
 13474  005FB8  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 13475  005FBA  0E18               	movlw	low I2C_Read1ByteRegister@returnValue
 13476  005FBC  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 13477  005FBE  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
 13478  005FC0  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 13479  005FC2  EC0C  F034         	call	_I2C_SetDataCompleteCallback	;wreg free
 13480  005FC6                     
 13481                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
 13482  005FC6  0E16               	movlw	low I2C_Read1ByteRegister@reg
 13483  005FC8  6E05               	movwf	I2C_SetBuffer@buffer^0,c
 13484  005FCA  0E00               	movlw	high I2C_Read1ByteRegister@reg
 13485  005FCC  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
 13486  005FCE  0E00               	movlw	0
 13487  005FD0  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 13488  005FD2  0E01               	movlw	1
 13489  005FD4  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 13490  005FD6  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 13491  005FDA                     
 13492                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 13493  005FDA  0E00               	movlw	0
 13494  005FDC  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
 13495  005FDE  0E00               	movlw	0
 13496  005FE0  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
 13497  005FE2  0E00               	movlw	0
 13498  005FE4  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
 13499  005FE6  0E00               	movlw	0
 13500  005FE8  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
 13501  005FEA  EC00  F034         	call	_I2C_SetAddressNackCallback	;wreg free
 13502  005FEE                     
 13503                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
 13504  005FEE  EC91  F034         	call	_I2C_MasterWrite	;wreg free
 13505  005FF2                     l6392:
 13506  005FF2  EC7B  F033         	call	_I2C_Close	;wreg free
 13507  005FF6  06E8               	decf	wreg,f,c
 13508  005FF8  B4D8               	btfsc	status,2,c
 13509  005FFA  EF01  F030         	goto	u5491
 13510  005FFE  EF03  F030         	goto	u5490
 13511  006002                     u5491:
 13512  006002  EFF9  F02F         	goto	l6392
 13513  006006                     u5490:
 13514  006006                     
 13515                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
 13516  006006  5018               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
 13517  006008  0012               	return		;funcret
 13518  00600A                     __end_of_I2C_Read1ByteRegister:
 13519                           	callstack 0
 13520                           
 13521 ;; *************** function _I2C_SetAddressNackCallback *****************
 13522 ;; Defined at:
 13523 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 13526 ;;		 -> Absolute function(1), 
 13527 ;;  ptr             2   11[COMRAM] PTR void 
 13528 ;;		 -> NULL(0), 
 13529 ;; Auto vars:     Size  Location     Type
 13530 ;;		None
 13531 ;; Return value:  Size  Location     Type
 13532 ;;                  1    wreg      void 
 13533 ;; Registers used:
 13534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13535 ;; Tracked objects:
 13536 ;;		On entry : 0/0
 13537 ;;		On exit  : 0/0
 13538 ;;		Unchanged: 0/0
 13539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13544 ;;Total ram usage:        4 bytes
 13545 ;; Hardware stack levels used: 1
 13546 ;; Hardware stack levels required when called: 5
 13547 ;; This function calls:
 13548 ;;		_I2C_SetCallback
 13549 ;; This function is called by:
 13550 ;;		_I2C_Read1ByteRegister
 13551 ;;		_I2C_Read2ByteRegister
 13552 ;;		_I2C_Write1ByteRegister
 13553 ;;		_I2C_WriteNBytes
 13554 ;;		_I2C_Write2ByteRegister
 13555 ;;		_I2C_ReadDataBlock
 13556 ;; This function uses a non-reentrant model
 13557 ;;
 13558                           
 13559                           	psect	text41
 13560  006800                     __ptext41:
 13561                           	callstack 0
 13562  006800                     _I2C_SetAddressNackCallback:
 13563                           	callstack 23
 13564  006800                     
 13565                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 13566  006800  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
 13567  006804  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
 13568  006808  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
 13569  00680C  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
 13570  006810  0E02               	movlw	2
 13571  006812  EC53  F02F         	call	_I2C_SetCallback
 13572  006816  0012               	return		;funcret
 13573  006818                     __end_of_I2C_SetAddressNackCallback:
 13574                           	callstack 0
 13575                           
 13576 ;; *************** function _I2C_Open *****************
 13577 ;; Defined at:
 13578 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;  address         1    wreg     unsigned char 
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;  address         1    4[COMRAM] unsigned char 
 13583 ;;  returnValue     1    5[COMRAM] enum E355
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  1    wreg      enum E355
 13586 ;; Registers used:
 13587 ;;		wreg, status,2, status,0, cstack
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13597 ;;Total ram usage:        2 bytes
 13598 ;; Hardware stack levels used: 1
 13599 ;; Hardware stack levels required when called: 5
 13600 ;; This function calls:
 13601 ;;		_I2C_MasterClearIrq
 13602 ;;		_I2C_MasterOpen
 13603 ;; This function is called by:
 13604 ;;		_I2C_Read1ByteRegister
 13605 ;;		_I2C_Read2ByteRegister
 13606 ;;		_I2C_Write1ByteRegister
 13607 ;;		_I2C_WriteNBytes
 13608 ;;		_I2C_ReadNBytes
 13609 ;;		_I2C_Write2ByteRegister
 13610 ;;		_I2C_ReadDataBlock
 13611 ;; This function uses a non-reentrant model
 13612 ;;
 13613                           
 13614                           	psect	text42
 13615  005D16                     __ptext42:
 13616                           	callstack 0
 13617  005D16                     _I2C_Open:
 13618                           	callstack 23
 13619                           
 13620                           ;incstack = 0
 13621                           ;I2C_Open@address stored from wreg
 13622  005D16  6E05               	movwf	I2C_Open@address^0,c
 13623  005D18                     
 13624                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 13625  005D18  0E01               	movlw	1
 13626  005D1A  6E06               	movwf	I2C_Open@returnValue^0,c
 13627  005D1C                     
 13628                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 13629  005D1C  0100               	movlb	0	; () banked
 13630  005D1E  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
 13631  005D20  EF94  F02E         	goto	u5311
 13632  005D24  EF96  F02E         	goto	u5310
 13633  005D28                     u5311:
 13634  005D28  EFD0  F02E         	goto	l6242
 13635  005D2C                     u5310:
 13636  005D2C                     
 13637                           ; BSR set to: 0
 13638                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 13639  005D2C  C005  F07C         	movff	I2C_Open@address,_I2C_Status+28
 13640  005D30                     
 13641                           ; BSR set to: 0
 13642                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 13643  005D30  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
 13644  005D32                     
 13645                           ; BSR set to: 0
 13646                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 13647  005D32  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
 13648  005D34                     
 13649                           ; BSR set to: 0
 13650                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 13651  005D34  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 13652  005D36                     
 13653                           ; BSR set to: 0
 13654                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 13655  005D36  0E0E               	movlw	14
 13656  005D38  6F81               	movwf	(_I2C_Status+33)& (0+255),b
 13657  005D3A                     
 13658                           ; BSR set to: 0
 13659                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 13660  005D3A  0E01               	movlw	1
 13661  005D3C  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
 13662  005D3E  0EF4               	movlw	244
 13663  005D40  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 13664  005D42                     
 13665                           ; BSR set to: 0
 13666                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 13667  005D42  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
 13668  005D44                     
 13669                           ; BSR set to: 0
 13670                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 13671  005D44  0E92               	movlw	low _I2C_CallbackReturnStop
 13672  005D46  6F60               	movwf	_I2C_Status& (0+255),b
 13673  005D48  0E69               	movlw	high _I2C_CallbackReturnStop
 13674  005D4A  6F61               	movwf	(_I2C_Status+1)& (0+255),b
 13675  005D4C                     
 13676                           ; BSR set to: 0
 13677                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 13678  005D4C  0E00               	movlw	0
 13679  005D4E  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
 13680  005D50  0E00               	movlw	0
 13681  005D52  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
 13682  005D54                     
 13683                           ; BSR set to: 0
 13684                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 13685  005D54  0E92               	movlw	low _I2C_CallbackReturnStop
 13686  005D56  6F62               	movwf	(_I2C_Status+2)& (0+255),b
 13687  005D58  0E69               	movlw	high _I2C_CallbackReturnStop
 13688  005D5A  6F63               	movwf	(_I2C_Status+3)& (0+255),b
 13689  005D5C                     
 13690                           ; BSR set to: 0
 13691                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 13692  005D5C  0E00               	movlw	0
 13693  005D5E  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
 13694  005D60  0E00               	movlw	0
 13695  005D62  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
 13696  005D64                     
 13697                           ; BSR set to: 0
 13698                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 13699  005D64  0E92               	movlw	low _I2C_CallbackReturnStop
 13700  005D66  6F64               	movwf	(_I2C_Status+4)& (0+255),b
 13701  005D68  0E69               	movlw	high _I2C_CallbackReturnStop
 13702  005D6A  6F65               	movwf	(_I2C_Status+5)& (0+255),b
 13703  005D6C                     
 13704                           ; BSR set to: 0
 13705                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 13706  005D6C  0E00               	movlw	0
 13707  005D6E  6F70               	movwf	(_I2C_Status+16)& (0+255),b
 13708  005D70  0E00               	movlw	0
 13709  005D72  6F71               	movwf	(_I2C_Status+17)& (0+255),b
 13710  005D74                     
 13711                           ; BSR set to: 0
 13712                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 13713  005D74  0E92               	movlw	low _I2C_CallbackReturnStop
 13714  005D76  6F66               	movwf	(_I2C_Status+6)& (0+255),b
 13715  005D78  0E69               	movlw	high _I2C_CallbackReturnStop
 13716  005D7A  6F67               	movwf	(_I2C_Status+7)& (0+255),b
 13717  005D7C                     
 13718                           ; BSR set to: 0
 13719                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 13720  005D7C  0E00               	movlw	0
 13721  005D7E  6F72               	movwf	(_I2C_Status+18)& (0+255),b
 13722  005D80  0E00               	movlw	0
 13723  005D82  6F73               	movwf	(_I2C_Status+19)& (0+255),b
 13724  005D84                     
 13725                           ; BSR set to: 0
 13726                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 13727  005D84  0E8E               	movlw	low _I2C_CallbackReturnReset
 13728  005D86  6F68               	movwf	(_I2C_Status+8)& (0+255),b
 13729  005D88  0E69               	movlw	high _I2C_CallbackReturnReset
 13730  005D8A  6F69               	movwf	(_I2C_Status+9)& (0+255),b
 13731  005D8C                     
 13732                           ; BSR set to: 0
 13733                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 13734  005D8C  0E00               	movlw	0
 13735  005D8E  6F74               	movwf	(_I2C_Status+20)& (0+255),b
 13736  005D90  0E00               	movlw	0
 13737  005D92  6F75               	movwf	(_I2C_Status+21)& (0+255),b
 13738  005D94                     
 13739                           ; BSR set to: 0
 13740                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 13741  005D94  ECD5  F034         	call	_I2C_MasterClearIrq	;wreg free
 13742  005D98                     
 13743                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 13744  005D98  ECE0  F033         	call	_I2C_MasterOpen	;wreg free
 13745  005D9C                     
 13746                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 13747  005D9C  0E00               	movlw	0
 13748  005D9E  6E06               	movwf	I2C_Open@returnValue^0,c
 13749  005DA0                     l6242:
 13750                           
 13751                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 13752  005DA0  5006               	movf	I2C_Open@returnValue^0,w,c
 13753  005DA2  0012               	return		;funcret
 13754  005DA4                     __end_of_I2C_Open:
 13755                           	callstack 0
 13756                           
 13757 ;; *************** function _I2C_MasterOpen *****************
 13758 ;; Defined at:
 13759 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 13760 ;; Parameters:    Size  Location     Type
 13761 ;;		None
 13762 ;; Auto vars:     Size  Location     Type
 13763 ;;		None
 13764 ;; Return value:  Size  Location     Type
 13765 ;;                  1    wreg      _Bool 
 13766 ;; Registers used:
 13767 ;;		wreg, status,2
 13768 ;; Tracked objects:
 13769 ;;		On entry : 0/0
 13770 ;;		On exit  : 0/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13777 ;;Total ram usage:        0 bytes
 13778 ;; Hardware stack levels used: 1
 13779 ;; Hardware stack levels required when called: 4
 13780 ;; This function calls:
 13781 ;;		Nothing
 13782 ;; This function is called by:
 13783 ;;		_I2C_Open
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           	psect	text43
 13788  0067C0                     __ptext43:
 13789                           	callstack 0
 13790  0067C0                     _I2C_MasterOpen:
 13791                           	callstack 23
 13792  0067C0                     
 13793                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 13794  0067C0  BAC6               	btfsc	198,5,c	;volatile
 13795  0067C2  EFE5  F033         	goto	u4621
 13796  0067C6  EFE7  F033         	goto	u4620
 13797  0067CA                     u4621:
 13798  0067CA  EFF0  F033         	goto	l378
 13799  0067CE                     u4620:
 13800  0067CE                     
 13801                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
 13802  0067CE  0E00               	movlw	0
 13803  0067D0  6EC7               	movwf	199,c	;volatile
 13804                           
 13805                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 13806  0067D2  0E08               	movlw	8
 13807  0067D4  6EC6               	movwf	198,c	;volatile
 13808                           
 13809                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 13810  0067D6  0E00               	movlw	0
 13811  0067D8  6EC5               	movwf	197,c	;volatile
 13812                           
 13813                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
 13814  0067DA  0E13               	movlw	19
 13815  0067DC  6EC8               	movwf	200,c	;volatile
 13816  0067DE                     
 13817                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 13818  0067DE  8AC6               	bsf	198,5,c	;volatile
 13819  0067E0                     l378:
 13820  0067E0  0012               	return		;funcret
 13821  0067E2                     __end_of_I2C_MasterOpen:
 13822                           	callstack 0
 13823                           
 13824 ;; *************** function _I2C_MasterWrite *****************
 13825 ;; Defined at:
 13826 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;		None
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;		None
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  1    wreg      enum E355
 13833 ;; Registers used:
 13834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13844 ;;Total ram usage:        0 bytes
 13845 ;; Hardware stack levels used: 1
 13846 ;; Hardware stack levels required when called: 11
 13847 ;; This function calls:
 13848 ;;		_I2C_MasterOperation
 13849 ;; This function is called by:
 13850 ;;		_I2C_Read1ByteRegister
 13851 ;;		_I2C_Read2ByteRegister
 13852 ;;		_I2C_Write1ByteRegister
 13853 ;;		_I2C_WriteNBytes
 13854 ;;		_I2C_Write2ByteRegister
 13855 ;;		_I2C_ReadDataBlock
 13856 ;; This function uses a non-reentrant model
 13857 ;;
 13858                           
 13859                           	psect	text44
 13860  006922                     __ptext44:
 13861                           	callstack 0
 13862  006922                     _I2C_MasterWrite:
 13863                           	callstack 17
 13864  006922                     
 13865                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
 13866  006922  0E00               	movlw	0
 13867  006924  EC22  F032         	call	_I2C_MasterOperation
 13868  006928  0012               	return		;funcret
 13869  00692A                     __end_of_I2C_MasterWrite:
 13870                           	callstack 0
 13871                           
 13872 ;; *************** function _I2C_MasterOperation *****************
 13873 ;; Defined at:
 13874 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;  read            1    wreg     _Bool 
 13877 ;; Auto vars:     Size  Location     Type
 13878 ;;  read            1   19[COMRAM] _Bool 
 13879 ;;  returnValue     1   20[COMRAM] enum E355
 13880 ;; Return value:  Size  Location     Type
 13881 ;;                  1    wreg      enum E355
 13882 ;; Registers used:
 13883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13884 ;; Tracked objects:
 13885 ;;		On entry : 0/0
 13886 ;;		On exit  : 0/0
 13887 ;;		Unchanged: 0/0
 13888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13893 ;;Total ram usage:        2 bytes
 13894 ;; Hardware stack levels used: 1
 13895 ;; Hardware stack levels required when called: 10
 13896 ;; This function calls:
 13897 ;;		_I2C_MasterStart
 13898 ;;		_I2C_Poller
 13899 ;; This function is called by:
 13900 ;;		_I2C_MasterRead
 13901 ;;		_I2C_MasterWrite
 13902 ;; This function uses a non-reentrant model
 13903 ;;
 13904                           
 13905                           	psect	text45
 13906  006444                     __ptext45:
 13907                           	callstack 0
 13908  006444                     _I2C_MasterOperation:
 13909                           	callstack 17
 13910                           
 13911                           ;incstack = 0
 13912                           ;I2C_MasterOperation@read stored from wreg
 13913  006444  6E14               	movwf	I2C_MasterOperation@read^0,c
 13914  006446                     
 13915                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 13916  006446  0E01               	movlw	1
 13917  006448  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 13918  00644A                     
 13919                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 13920  00644A  0100               	movlb	0	; () banked
 13921  00644C  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
 13922  00644E  EF2B  F032         	goto	u4631
 13923  006452  EF2D  F032         	goto	u4630
 13924  006456                     u4631:
 13925  006456  EF42  F032         	goto	l5824
 13926  00645A                     u4630:
 13927  00645A                     
 13928                           ; BSR set to: 0
 13929                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 13930  00645A  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
 13931  00645C                     
 13932                           ; BSR set to: 0
 13933                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 13934  00645C  0E00               	movlw	0
 13935  00645E  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 13936  006460                     
 13937                           ; BSR set to: 0
 13938                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 13939  006460  5014               	movf	I2C_MasterOperation@read^0,w,c
 13940  006462  B4D8               	btfsc	status,2,c
 13941  006464  EF36  F032         	goto	u4641
 13942  006468  EF38  F032         	goto	u4640
 13943  00646C                     u4641:
 13944  00646C  EF3C  F032         	goto	l5818
 13945  006470                     u4640:
 13946  006470                     
 13947                           ; BSR set to: 0
 13948                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 13949  006470  0E01               	movlw	1
 13950  006472  6F81               	movwf	(_I2C_Status+33)& (0+255),b
 13951                           
 13952                           ;mcc_generated_files/i2c_master.c: 235:         }
 13953  006474  EF3E  F032         	goto	l5820
 13954  006478                     l5818:
 13955                           
 13956                           ; BSR set to: 0
 13957                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 13958  006478  0E02               	movlw	2
 13959  00647A  6F81               	movwf	(_I2C_Status+33)& (0+255),b
 13960  00647C                     l5820:
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 13964  00647C  ECCF  F034         	call	_I2C_MasterStart	;wreg free
 13965  006480                     
 13966                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 13967  006480  ECF1  F033         	call	_I2C_Poller	;wreg free
 13968  006484                     l5824:
 13969                           
 13970                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 13971  006484  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
 13972  006486  0012               	return		;funcret
 13973  006488                     __end_of_I2C_MasterOperation:
 13974                           	callstack 0
 13975                           
 13976 ;; *************** function _I2C_Poller *****************
 13977 ;; Defined at:
 13978 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 13979 ;; Parameters:    Size  Location     Type
 13980 ;;		None
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;		None
 13983 ;; Return value:  Size  Location     Type
 13984 ;;                  1    wreg      void 
 13985 ;; Registers used:
 13986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13987 ;; Tracked objects:
 13988 ;;		On entry : 0/0
 13989 ;;		On exit  : 0/0
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;Total ram usage:        0 bytes
 13997 ;; Hardware stack levels used: 1
 13998 ;; Hardware stack levels required when called: 9
 13999 ;; This function calls:
 14000 ;;		_I2C_MasterFsm
 14001 ;;		_I2C_MasterWaitForEvent
 14002 ;; This function is called by:
 14003 ;;		_I2C_MasterOperation
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007                           	psect	text46
 14008  0067E2                     __ptext46:
 14009                           	callstack 0
 14010  0067E2                     _I2C_Poller:
 14011                           	callstack 17
 14012  0067E2                     
 14013                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 14014  0067E2  EFF7  F033         	goto	l5240
 14015  0067E6                     l5236:
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 14019  0067E6  EC40  F034         	call	_I2C_MasterWaitForEvent	;wreg free
 14020  0067EA                     
 14021                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 14022  0067EA  EC05  F030         	call	_I2C_MasterFsm	;wreg free
 14023  0067EE                     l5240:
 14024                           
 14025                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 14026  0067EE  0100               	movlb	0	; () banked
 14027  0067F0  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
 14028  0067F2  EFFD  F033         	goto	u3611
 14029  0067F6  EFFF  F033         	goto	u3610
 14030  0067FA                     u3611:
 14031  0067FA  EFF3  F033         	goto	l5236
 14032  0067FE                     u3610:
 14033  0067FE                     
 14034                           ; BSR set to: 0
 14035  0067FE  0012               	return		;funcret
 14036  006800                     __end_of_I2C_Poller:
 14037                           	callstack 0
 14038                           
 14039 ;; *************** function _I2C_MasterWaitForEvent *****************
 14040 ;; Defined at:
 14041 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 14042 ;; Parameters:    Size  Location     Type
 14043 ;;		None
 14044 ;; Auto vars:     Size  Location     Type
 14045 ;;		None
 14046 ;; Return value:  Size  Location     Type
 14047 ;;                  1    wreg      void 
 14048 ;; Registers used:
 14049 ;;		None
 14050 ;; Tracked objects:
 14051 ;;		On entry : 0/0
 14052 ;;		On exit  : 0/0
 14053 ;;		Unchanged: 0/0
 14054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;Total ram usage:        0 bytes
 14060 ;; Hardware stack levels used: 1
 14061 ;; Hardware stack levels required when called: 4
 14062 ;; This function calls:
 14063 ;;		Nothing
 14064 ;; This function is called by:
 14065 ;;		_I2C_Poller
 14066 ;; This function uses a non-reentrant model
 14067 ;;
 14068                           
 14069                           	psect	text47
 14070  006880                     __ptext47:
 14071                           	callstack 0
 14072  006880                     _I2C_MasterWaitForEvent:
 14073                           	callstack 21
 14074  006880                     l435:
 14075                           
 14076                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 14077  006880  A69E               	btfss	158,3,c	;volatile
 14078  006882  EF45  F034         	goto	u3141
 14079  006886  EF47  F034         	goto	u3140
 14080  00688A                     u3141:
 14081  00688A  EF40  F034         	goto	l435
 14082  00688E                     u3140:
 14083  00688E  0012               	return		;funcret
 14084  006890                     __end_of_I2C_MasterWaitForEvent:
 14085                           	callstack 0
 14086                           
 14087 ;; *************** function _I2C_MasterFsm *****************
 14088 ;; Defined at:
 14089 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 14090 ;; Parameters:    Size  Location     Type
 14091 ;;		None
 14092 ;; Auto vars:     Size  Location     Type
 14093 ;;		None
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  1    wreg      void 
 14096 ;; Registers used:
 14097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/0
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14107 ;;Total ram usage:        2 bytes
 14108 ;; Hardware stack levels used: 1
 14109 ;; Hardware stack levels required when called: 8
 14110 ;; This function calls:
 14111 ;;		_I2C_DO_ADDRESS_NACK
 14112 ;;		_I2C_DO_IDLE
 14113 ;;		_I2C_DO_RCEN
 14114 ;;		_I2C_DO_RESET
 14115 ;;		_I2C_DO_RX
 14116 ;;		_I2C_DO_RX_ACK
 14117 ;;		_I2C_DO_RX_NACK_RESTART
 14118 ;;		_I2C_DO_RX_NACK_STOP
 14119 ;;		_I2C_DO_SEND_ADR_READ
 14120 ;;		_I2C_DO_SEND_ADR_WRITE
 14121 ;;		_I2C_DO_SEND_RESTART
 14122 ;;		_I2C_DO_SEND_RESTART_READ
 14123 ;;		_I2C_DO_SEND_RESTART_WRITE
 14124 ;;		_I2C_DO_SEND_STOP
 14125 ;;		_I2C_DO_TX
 14126 ;;		_I2C_DO_TX_EMPTY
 14127 ;;		_I2C_MasterClearIrq
 14128 ;;		_I2C_MasterIsNack
 14129 ;; This function is called by:
 14130 ;;		_I2C_Poller
 14131 ;; This function uses a non-reentrant model
 14132 ;;
 14133                           
 14134                           	psect	text48
 14135  00600A                     __ptext48:
 14136                           	callstack 0
 14137  00600A                     _I2C_MasterFsm:
 14138                           	callstack 17
 14139  00600A                     
 14140                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 14141  00600A  ECD5  F034         	call	_I2C_MasterClearIrq	;wreg free
 14142  00600E                     
 14143                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 14144  00600E  0100               	movlb	0	; () banked
 14145  006010  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
 14146  006012  EF0D  F030         	goto	u3151
 14147  006016  EF0F  F030         	goto	u3150
 14148  00601A                     u3151:
 14149  00601A  EF1C  F030         	goto	l5006
 14150  00601E                     u3150:
 14151  00601E                     
 14152                           ; BSR set to: 0
 14153  00601E  EC23  F034         	call	_I2C_MasterIsNack	;wreg free
 14154  006022  0900               	iorlw	0
 14155  006024  B4D8               	btfsc	status,2,c
 14156  006026  EF17  F030         	goto	u3161
 14157  00602A  EF19  F030         	goto	u3160
 14158  00602E                     u3161:
 14159  00602E  EF1C  F030         	goto	l5006
 14160  006032                     u3160:
 14161  006032                     
 14162                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 14163  006032  0E0F               	movlw	15
 14164  006034  0100               	movlb	0	; () banked
 14165  006036  6F81               	movwf	(_I2C_Status+33)& (0+255),b
 14166  006038                     l5006:
 14167                           
 14168                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
 14169  006038  0100               	movlb	0	; () banked
 14170  00603A  5181               	movf	(_I2C_Status+33)& (0+255),w,b
 14171  00603C  0D02               	mullw	2
 14172  00603E  0E01               	movlw	low _fsmStateTable
 14173  006040  24F3               	addwf	243,w,c
 14174  006042  6EF6               	movwf	tblptrl,c
 14175  006044  0E10               	movlw	high _fsmStateTable
 14176  006046  20F4               	addwfc	244,w,c
 14177  006048  6EF7               	movwf	tblptrh,c
 14178  00604A                     	if	1	;There are 3 active tblptr bytes
 14179  00604A  6AF8               	clrf	tblptru,c
 14180  00604C  0E00               	movlw	low (__mediumconst shr (0+16))
 14181  00604E  22F8               	addwfc	tblptru,f,c
 14182  006050                     	endif
 14183  006050  0009               	tblrd		*+
 14184  006052  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
 14185  006056  0009               	tblrd		*+
 14186  006058  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
 14187  00605C  D802               	call	u3178
 14188  00605E  EF3A  F030         	goto	u3179
 14189  006062                     u3178:
 14190  006062  0005               	push	
 14191  006064  6EFA               	movwf	pclath,c
 14192  006066  5012               	movf	??_I2C_MasterFsm^0,w,c
 14193  006068  6EFD               	movwf	tosl,c
 14194  00606A  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
 14195  00606C  6EFE               	movwf	tosh,c
 14196  00606E  6AFF               	clrf	tosu,c
 14197  006070  50FA               	movf	pclath,w,c
 14198  006072  0012               	return		;indir
 14199  006074                     u3179:
 14200  006074  0100               	movlb	0	; () banked
 14201  006076  6F81               	movwf	(_I2C_Status+33)& (0+255),b
 14202  006078                     
 14203                           ; BSR set to: 0
 14204  006078  0012               	return		;funcret
 14205  00607A                     __end_of_I2C_MasterFsm:
 14206                           	callstack 0
 14207                           
 14208 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 14209 ;; Defined at:
 14210 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;		None
 14213 ;; Auto vars:     Size  Location     Type
 14214 ;;		None
 14215 ;; Return value:  Size  Location     Type
 14216 ;;                  1    wreg      enum E3103
 14217 ;; Registers used:
 14218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14219 ;; Tracked objects:
 14220 ;;		On entry : 0/0
 14221 ;;		On exit  : 0/0
 14222 ;;		Unchanged: 0/0
 14223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14228 ;;Total ram usage:        2 bytes
 14229 ;; Hardware stack levels used: 1
 14230 ;; Hardware stack levels required when called: 7
 14231 ;; This function calls:
 14232 ;;		Absolute function
 14233 ;;		_I2C_CallbackReturnReset
 14234 ;;		_I2C_CallbackReturnStop
 14235 ;;		_I2C_DO_SEND_RESTART
 14236 ;;		_I2C_DO_SEND_STOP
 14237 ;;		_rd1RegCompleteHandler
 14238 ;;		_rd2RegCompleteHandler
 14239 ;;		_rdBlkRegCompleteHandler
 14240 ;;		_wr1RegCompleteHandler
 14241 ;;		_wr2RegCompleteHandler
 14242 ;; This function is called by:
 14243 ;;		_I2C_MasterFsm
 14244 ;; This function uses a non-reentrant model
 14245 ;;
 14246                           
 14247                           	psect	text49
 14248  0060E8                     __ptext49:
 14249                           	callstack 0
 14250  0060E8                     _I2C_DO_ADDRESS_NACK:
 14251                           	callstack 17
 14252  0060E8                     
 14253                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 14254  0060E8  0100               	movlb	0	; () banked
 14255  0060EA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 14256  0060EC                     
 14257                           ; BSR set to: 0
 14258                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 14259  0060EC  0E02               	movlw	2
 14260  0060EE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
 14261                           
 14262                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 14263  0060F0  EF82  F030         	goto	l4976
 14264  0060F4                     l4966:
 14265                           
 14266                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 14267  0060F4  ECA5  F034         	call	_I2C_DO_SEND_RESTART	;wreg free
 14268  0060F8  EFA6  F030         	goto	l357
 14269  0060FC                     l4970:
 14270                           
 14271                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 14272  0060FC  ECA1  F034         	call	_I2C_DO_SEND_STOP	;wreg free
 14273  006100  EFA6  F030         	goto	l357
 14274  006104                     l4976:
 14275                           
 14276                           ; BSR set to: 0
 14277  006104  C070  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 14278  006108  C071  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 14279  00610C  D802               	call	u3098
 14280  00610E  EF92  F030         	goto	u3099
 14281  006112                     u3098:
 14282  006112  0005               	push	
 14283  006114  6EFA               	movwf	pclath,c
 14284  006116  5164               	movf	(_I2C_Status+4)& (0+255),w,b
 14285  006118  6EFD               	movwf	tosl,c
 14286  00611A  5165               	movf	(_I2C_Status+5)& (0+255),w,b
 14287  00611C  6EFE               	movwf	tosh,c
 14288  00611E  6AFF               	clrf	tosu,c
 14289  006120  50FA               	movf	pclath,w,c
 14290  006122  0012               	return		;indir
 14291  006124                     u3099:
 14292  006124  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 14293  006126  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 14294                           
 14295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14296                           ; Switch size 1, requested type "simple"
 14297                           ; Number of cases is 1, Range of values is 0 to 0
 14298                           ; switch strategies available:
 14299                           ; Name         Instructions Cycles
 14300                           ; simple_byte            4     3 (average)
 14301                           ;	Chosen strategy is simple_byte
 14302  006128  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 14303  00612A  0A00               	xorlw	0	; case 0
 14304  00612C  B4D8               	btfsc	status,2,c
 14305  00612E  EF9B  F030         	goto	l9052
 14306  006132  EF7E  F030         	goto	l4970
 14307  006136                     l9052:
 14308                           
 14309                           ; Switch size 1, requested type "simple"
 14310                           ; Number of cases is 2, Range of values is 2 to 3
 14311                           ; switch strategies available:
 14312                           ; Name         Instructions Cycles
 14313                           ; simple_byte            7     4 (average)
 14314                           ;	Chosen strategy is simple_byte
 14315  006136  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 14316  006138  0A02               	xorlw	2	; case 2
 14317  00613A  B4D8               	btfsc	status,2,c
 14318  00613C  EF7A  F030         	goto	l4966
 14319  006140  0A01               	xorlw	1	; case 3
 14320  006142  B4D8               	btfsc	status,2,c
 14321  006144  EF7A  F030         	goto	l4966
 14322  006148  EF7E  F030         	goto	l4970
 14323  00614C                     l357:
 14324  00614C  0012               	return		;funcret
 14325  00614E                     __end_of_I2C_DO_ADDRESS_NACK:
 14326                           	callstack 0
 14327                           
 14328 ;; *************** function _I2C_DO_RESET *****************
 14329 ;; Defined at:
 14330 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;		None
 14333 ;; Auto vars:     Size  Location     Type
 14334 ;;		None
 14335 ;; Return value:  Size  Location     Type
 14336 ;;                  1    wreg      enum E3103
 14337 ;; Registers used:
 14338 ;;		wreg, status,2
 14339 ;; Tracked objects:
 14340 ;;		On entry : 0/0
 14341 ;;		On exit  : 0/0
 14342 ;;		Unchanged: 0/0
 14343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14348 ;;Total ram usage:        0 bytes
 14349 ;; Hardware stack levels used: 1
 14350 ;; Hardware stack levels required when called: 4
 14351 ;; This function calls:
 14352 ;;		Nothing
 14353 ;; This function is called by:
 14354 ;;		_I2C_MasterFsm
 14355 ;; This function uses a non-reentrant model
 14356 ;;
 14357                           
 14358                           	psect	text50
 14359  0068B0                     __ptext50:
 14360                           	callstack 0
 14361  0068B0                     _I2C_DO_RESET:
 14362                           	callstack 20
 14363  0068B0                     
 14364                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 14365  0068B0  0100               	movlb	0	; () banked
 14366  0068B2  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
 14367  0068B4                     
 14368                           ; BSR set to: 0
 14369                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 14370  0068B4  0E00               	movlw	0
 14371  0068B6  6F82               	movwf	(_I2C_Status+34)& (0+255),b
 14372  0068B8                     
 14373                           ; BSR set to: 0
 14374                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 14375  0068B8  0E0E               	movlw	14
 14376  0068BA                     
 14377                           ; BSR set to: 0
 14378  0068BA  0012               	return		;funcret
 14379  0068BC                     __end_of_I2C_DO_RESET:
 14380                           	callstack 0
 14381                           
 14382 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 14383 ;; Defined at:
 14384 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 14385 ;; Parameters:    Size  Location     Type
 14386 ;;		None
 14387 ;; Auto vars:     Size  Location     Type
 14388 ;;		None
 14389 ;; Return value:  Size  Location     Type
 14390 ;;                  1    wreg      enum E3103
 14391 ;; Registers used:
 14392 ;;		wreg, cstack
 14393 ;; Tracked objects:
 14394 ;;		On entry : 0/0
 14395 ;;		On exit  : 0/0
 14396 ;;		Unchanged: 0/0
 14397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14402 ;;Total ram usage:        0 bytes
 14403 ;; Hardware stack levels used: 1
 14404 ;; Hardware stack levels required when called: 5
 14405 ;; This function calls:
 14406 ;;		_I2C_MasterSendNack
 14407 ;; This function is called by:
 14408 ;;		_I2C_DO_RX
 14409 ;;		_I2C_MasterFsm
 14410 ;; This function uses a non-reentrant model
 14411 ;;
 14412                           
 14413                           	psect	text51
 14414  00692A                     __ptext51:
 14415                           	callstack 0
 14416  00692A                     _I2C_DO_RX_NACK_RESTART:
 14417                           	callstack 19
 14418  00692A                     
 14419                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 14420  00692A  ECB8  F034         	call	_I2C_MasterSendNack	;wreg free
 14421  00692E                     
 14422                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 14423  00692E  0E09               	movlw	9
 14424  006930  0012               	return		;funcret
 14425  006932                     __end_of_I2C_DO_RX_NACK_RESTART:
 14426                           	callstack 0
 14427                           
 14428 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 14429 ;; Defined at:
 14430 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 14431 ;; Parameters:    Size  Location     Type
 14432 ;;		None
 14433 ;; Auto vars:     Size  Location     Type
 14434 ;;		None
 14435 ;; Return value:  Size  Location     Type
 14436 ;;                  1    wreg      enum E3103
 14437 ;; Registers used:
 14438 ;;		wreg, cstack
 14439 ;; Tracked objects:
 14440 ;;		On entry : 0/0
 14441 ;;		On exit  : 0/0
 14442 ;;		Unchanged: 0/0
 14443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14448 ;;Total ram usage:        0 bytes
 14449 ;; Hardware stack levels used: 1
 14450 ;; Hardware stack levels required when called: 5
 14451 ;; This function calls:
 14452 ;;		_I2C_MasterSendNack
 14453 ;; This function is called by:
 14454 ;;		_I2C_DO_RX
 14455 ;;		_I2C_MasterFsm
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           	psect	text52
 14460  006932                     __ptext52:
 14461                           	callstack 0
 14462  006932                     _I2C_DO_RX_NACK_STOP:
 14463                           	callstack 19
 14464  006932                     
 14465                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 14466  006932  ECB8  F034         	call	_I2C_MasterSendNack	;wreg free
 14467  006936                     
 14468                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 14469  006936  0E0A               	movlw	10
 14470  006938  0012               	return		;funcret
 14471  00693A                     __end_of_I2C_DO_RX_NACK_STOP:
 14472                           	callstack 0
 14473                           
 14474 ;; *************** function _I2C_DO_RX_ACK *****************
 14475 ;; Defined at:
 14476 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;		None
 14479 ;; Auto vars:     Size  Location     Type
 14480 ;;		None
 14481 ;; Return value:  Size  Location     Type
 14482 ;;                  1    wreg      enum E3103
 14483 ;; Registers used:
 14484 ;;		wreg, cstack
 14485 ;; Tracked objects:
 14486 ;;		On entry : 0/0
 14487 ;;		On exit  : 0/0
 14488 ;;		Unchanged: 0/0
 14489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;Total ram usage:        0 bytes
 14495 ;; Hardware stack levels used: 1
 14496 ;; Hardware stack levels required when called: 5
 14497 ;; This function calls:
 14498 ;;		_I2C_MasterSendAck
 14499 ;; This function is called by:
 14500 ;;		_I2C_MasterFsm
 14501 ;; This function uses a non-reentrant model
 14502 ;;
 14503                           
 14504                           	psect	text53
 14505  00693A                     __ptext53:
 14506                           	callstack 0
 14507  00693A                     _I2C_DO_RX_ACK:
 14508                           	callstack 19
 14509  00693A                     
 14510                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 14511  00693A  ECB5  F034         	call	_I2C_MasterSendAck	;wreg free
 14512  00693E                     
 14513                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 14514  00693E  0E05               	movlw	5
 14515  006940  0012               	return		;funcret
 14516  006942                     __end_of_I2C_DO_RX_ACK:
 14517                           	callstack 0
 14518                           
 14519 ;; *************** function _I2C_DO_SEND_STOP *****************
 14520 ;; Defined at:
 14521 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 14522 ;; Parameters:    Size  Location     Type
 14523 ;;		None
 14524 ;; Auto vars:     Size  Location     Type
 14525 ;;		None
 14526 ;; Return value:  Size  Location     Type
 14527 ;;                  1    wreg      enum E3103
 14528 ;; Registers used:
 14529 ;;		wreg, cstack
 14530 ;; Tracked objects:
 14531 ;;		On entry : 0/0
 14532 ;;		On exit  : 0/0
 14533 ;;		Unchanged: 0/0
 14534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14539 ;;Total ram usage:        0 bytes
 14540 ;; Hardware stack levels used: 1
 14541 ;; Hardware stack levels required when called: 5
 14542 ;; This function calls:
 14543 ;;		_I2C_MasterStop
 14544 ;; This function is called by:
 14545 ;;		_I2C_DO_TX
 14546 ;;		_I2C_DO_TX_EMPTY
 14547 ;;		_I2C_DO_ADDRESS_NACK
 14548 ;;		_I2C_MasterFsm
 14549 ;; This function uses a non-reentrant model
 14550 ;;
 14551                           
 14552                           	psect	text54
 14553  006942                     __ptext54:
 14554                           	callstack 0
 14555  006942                     _I2C_DO_SEND_STOP:
 14556                           	callstack 18
 14557  006942                     
 14558                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 14559  006942  ECCB  F034         	call	_I2C_MasterStop	;wreg free
 14560  006946                     
 14561                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 14562  006946  0E00               	movlw	0
 14563  006948  0012               	return		;funcret
 14564  00694A                     __end_of_I2C_DO_SEND_STOP:
 14565                           	callstack 0
 14566                           
 14567 ;; *************** function _I2C_DO_SEND_RESTART *****************
 14568 ;; Defined at:
 14569 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;		None
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;		None
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      enum E3103
 14576 ;; Registers used:
 14577 ;;		wreg, cstack
 14578 ;; Tracked objects:
 14579 ;;		On entry : 0/0
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14587 ;;Total ram usage:        0 bytes
 14588 ;; Hardware stack levels used: 1
 14589 ;; Hardware stack levels required when called: 5
 14590 ;; This function calls:
 14591 ;;		_I2C_MasterEnableRestart
 14592 ;; This function is called by:
 14593 ;;		_I2C_DO_TX_EMPTY
 14594 ;;		_I2C_DO_ADDRESS_NACK
 14595 ;;		_I2C_MasterFsm
 14596 ;; This function uses a non-reentrant model
 14597 ;;
 14598                           
 14599                           	psect	text55
 14600  00694A                     __ptext55:
 14601                           	callstack 0
 14602  00694A                     _I2C_DO_SEND_RESTART:
 14603                           	callstack 18
 14604  00694A                     
 14605                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 14606  00694A  ECCD  F034         	call	_I2C_MasterEnableRestart	;wreg free
 14607  00694E                     
 14608                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 14609  00694E  0E01               	movlw	1
 14610  006950  0012               	return		;funcret
 14611  006952                     __end_of_I2C_DO_SEND_RESTART:
 14612                           	callstack 0
 14613                           
 14614 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 14615 ;; Defined at:
 14616 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 14617 ;; Parameters:    Size  Location     Type
 14618 ;;		None
 14619 ;; Auto vars:     Size  Location     Type
 14620 ;;		None
 14621 ;; Return value:  Size  Location     Type
 14622 ;;                  1    wreg      enum E3103
 14623 ;; Registers used:
 14624 ;;		wreg, cstack
 14625 ;; Tracked objects:
 14626 ;;		On entry : 0/0
 14627 ;;		On exit  : 0/0
 14628 ;;		Unchanged: 0/0
 14629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14634 ;;Total ram usage:        0 bytes
 14635 ;; Hardware stack levels used: 1
 14636 ;; Hardware stack levels required when called: 5
 14637 ;; This function calls:
 14638 ;;		_I2C_MasterEnableRestart
 14639 ;; This function is called by:
 14640 ;;		_I2C_DO_TX
 14641 ;;		_I2C_MasterFsm
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645                           	psect	text56
 14646  006952                     __ptext56:
 14647                           	callstack 0
 14648  006952                     _I2C_DO_SEND_RESTART_WRITE:
 14649                           	callstack 18
 14650  006952                     
 14651                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 14652  006952  ECCD  F034         	call	_I2C_MasterEnableRestart	;wreg free
 14653  006956                     
 14654                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 14655  006956  0E02               	movlw	2
 14656  006958  0012               	return		;funcret
 14657  00695A                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 14658                           	callstack 0
 14659                           
 14660 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 14661 ;; Defined at:
 14662 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 14663 ;; Parameters:    Size  Location     Type
 14664 ;;		None
 14665 ;; Auto vars:     Size  Location     Type
 14666 ;;		None
 14667 ;; Return value:  Size  Location     Type
 14668 ;;                  1    wreg      enum E3103
 14669 ;; Registers used:
 14670 ;;		wreg, cstack
 14671 ;; Tracked objects:
 14672 ;;		On entry : 0/0
 14673 ;;		On exit  : 0/0
 14674 ;;		Unchanged: 0/0
 14675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14680 ;;Total ram usage:        0 bytes
 14681 ;; Hardware stack levels used: 1
 14682 ;; Hardware stack levels required when called: 5
 14683 ;; This function calls:
 14684 ;;		_I2C_MasterEnableRestart
 14685 ;; This function is called by:
 14686 ;;		_I2C_DO_TX
 14687 ;;		_I2C_MasterFsm
 14688 ;; This function uses a non-reentrant model
 14689 ;;
 14690                           
 14691                           	psect	text57
 14692  00695A                     __ptext57:
 14693                           	callstack 0
 14694  00695A                     _I2C_DO_SEND_RESTART_READ:
 14695                           	callstack 18
 14696  00695A                     
 14697                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 14698  00695A  ECCD  F034         	call	_I2C_MasterEnableRestart	;wreg free
 14699  00695E                     
 14700                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 14701  00695E  0E01               	movlw	1
 14702  006960  0012               	return		;funcret
 14703  006962                     __end_of_I2C_DO_SEND_RESTART_READ:
 14704                           	callstack 0
 14705                           
 14706 ;; *************** function _I2C_DO_RCEN *****************
 14707 ;; Defined at:
 14708 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;		None
 14711 ;; Auto vars:     Size  Location     Type
 14712 ;;		None
 14713 ;; Return value:  Size  Location     Type
 14714 ;;                  1    wreg      enum E3103
 14715 ;; Registers used:
 14716 ;;		wreg, cstack
 14717 ;; Tracked objects:
 14718 ;;		On entry : 0/0
 14719 ;;		On exit  : 0/0
 14720 ;;		Unchanged: 0/0
 14721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14726 ;;Total ram usage:        0 bytes
 14727 ;; Hardware stack levels used: 1
 14728 ;; Hardware stack levels required when called: 5
 14729 ;; This function calls:
 14730 ;;		_I2C_MasterStartRx
 14731 ;; This function is called by:
 14732 ;;		_I2C_MasterFsm
 14733 ;; This function uses a non-reentrant model
 14734 ;;
 14735                           
 14736                           	psect	text58
 14737  0068BC                     __ptext58:
 14738                           	callstack 0
 14739  0068BC                     _I2C_DO_RCEN:
 14740                           	callstack 19
 14741  0068BC                     
 14742                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 14743  0068BC  0100               	movlb	0	; () banked
 14744  0068BE  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 14745  0068C0                     
 14746                           ; BSR set to: 0
 14747                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 14748  0068C0  ECC5  F034         	call	_I2C_MasterStartRx	;wreg free
 14749  0068C4                     
 14750                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 14751  0068C4  0E04               	movlw	4
 14752  0068C6  0012               	return		;funcret
 14753  0068C8                     __end_of_I2C_DO_RCEN:
 14754                           	callstack 0
 14755                           
 14756 ;; *************** function _I2C_DO_RX *****************
 14757 ;; Defined at:
 14758 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 14759 ;; Parameters:    Size  Location     Type
 14760 ;;		None
 14761 ;; Auto vars:     Size  Location     Type
 14762 ;;		None
 14763 ;; Return value:  Size  Location     Type
 14764 ;;                  1    wreg      enum E3103
 14765 ;; Registers used:
 14766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14767 ;; Tracked objects:
 14768 ;;		On entry : 0/0
 14769 ;;		On exit  : 0/0
 14770 ;;		Unchanged: 0/0
 14771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14776 ;;Total ram usage:        2 bytes
 14777 ;; Hardware stack levels used: 1
 14778 ;; Hardware stack levels required when called: 7
 14779 ;; This function calls:
 14780 ;;		Absolute function
 14781 ;;		_I2C_CallbackReturnReset
 14782 ;;		_I2C_CallbackReturnStop
 14783 ;;		_I2C_DO_RX_NACK_RESTART
 14784 ;;		_I2C_DO_RX_NACK_STOP
 14785 ;;		_I2C_MasterGetRxData
 14786 ;;		_I2C_MasterSendAck
 14787 ;;		_rd1RegCompleteHandler
 14788 ;;		_rd2RegCompleteHandler
 14789 ;;		_rdBlkRegCompleteHandler
 14790 ;;		_wr1RegCompleteHandler
 14791 ;;		_wr2RegCompleteHandler
 14792 ;; This function is called by:
 14793 ;;		_I2C_MasterFsm
 14794 ;; This function uses a non-reentrant model
 14795 ;;
 14796                           
 14797                           	psect	text59
 14798  005BDA                     __ptext59:
 14799                           	callstack 0
 14800  005BDA                     _I2C_DO_RX:
 14801                           	callstack 17
 14802  005BDA                     
 14803                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 14804  005BDA  ECC3  F034         	call	_I2C_MasterGetRxData	;wreg free
 14805  005BDE  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
 14806  005BE2  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
 14807  005BE6  6EDF               	movwf	indf2,c
 14808  005BE8  0100               	movlb	0	; () banked
 14809  005BEA  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 14810  005BEC  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
 14811  005BEE                     
 14812                           ; BSR set to: 0
 14813                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 14814  005BEE  077F               	decf	(_I2C_Status+31)& (0+255),f,b
 14815  005BF0  A0D8               	btfss	status,0,c
 14816  005BF2  0780               	decf	(_I2C_Status+32)& (0+255),f,b
 14817  005BF4  517F               	movf	(_I2C_Status+31)& (0+255),w,b
 14818  005BF6  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
 14819  005BF8  B4D8               	btfsc	status,2,c
 14820  005BFA  EF01  F02E         	goto	u3061
 14821  005BFE  EF03  F02E         	goto	u3060
 14822  005C02                     u3061:
 14823  005C02  EF08  F02E         	goto	l294
 14824  005C06                     u3060:
 14825  005C06                     
 14826                           ; BSR set to: 0
 14827                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 14828  005C06  ECB5  F034         	call	_I2C_MasterSendAck	;wreg free
 14829  005C0A                     
 14830                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 14831  005C0A  0E05               	movlw	5
 14832  005C0C  EF3F  F02E         	goto	l295
 14833  005C10                     l294:
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 14837  005C10  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
 14838                           
 14839                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 14840  005C12  EF13  F02E         	goto	l4910
 14841  005C16                     l4900:
 14842                           
 14843                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 14844  005C16  EC95  F034         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 14845  005C1A  EF3F  F02E         	goto	l295
 14846  005C1E                     l4904:
 14847                           
 14848                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 14849  005C1E  EC99  F034         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 14850  005C22  EF3F  F02E         	goto	l295
 14851  005C26                     l4910:
 14852                           
 14853                           ; BSR set to: 0
 14854  005C26  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 14855  005C2A  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 14856  005C2E  D802               	call	u3078
 14857  005C30  EF23  F02E         	goto	u3079
 14858  005C34                     u3078:
 14859  005C34  0005               	push	
 14860  005C36  6EFA               	movwf	pclath,c
 14861  005C38  5160               	movf	_I2C_Status& (0+255),w,b
 14862  005C3A  6EFD               	movwf	tosl,c
 14863  005C3C  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 14864  005C3E  6EFE               	movwf	tosh,c
 14865  005C40  6AFF               	clrf	tosu,c
 14866  005C42  50FA               	movf	pclath,w,c
 14867  005C44  0012               	return		;indir
 14868  005C46                     u3079:
 14869  005C46  6E10               	movwf	??_I2C_DO_RX^0,c
 14870  005C48  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
 14871                           
 14872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14873                           ; Switch size 1, requested type "simple"
 14874                           ; Number of cases is 1, Range of values is 0 to 0
 14875                           ; switch strategies available:
 14876                           ; Name         Instructions Cycles
 14877                           ; simple_byte            4     3 (average)
 14878                           ;	Chosen strategy is simple_byte
 14879  005C4A  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
 14880  005C4C  0A00               	xorlw	0	; case 0
 14881  005C4E  B4D8               	btfsc	status,2,c
 14882  005C50  EF2C  F02E         	goto	l9054
 14883  005C54  EF0F  F02E         	goto	l4904
 14884  005C58                     l9054:
 14885                           
 14886                           ; Switch size 1, requested type "simple"
 14887                           ; Number of cases is 4, Range of values is 1 to 4
 14888                           ; switch strategies available:
 14889                           ; Name         Instructions Cycles
 14890                           ; simple_byte           13     7 (average)
 14891                           ;	Chosen strategy is simple_byte
 14892  005C58  5010               	movf	??_I2C_DO_RX^0,w,c
 14893  005C5A  0A01               	xorlw	1	; case 1
 14894  005C5C  B4D8               	btfsc	status,2,c
 14895  005C5E  EF0F  F02E         	goto	l4904
 14896  005C62  0A03               	xorlw	3	; case 2
 14897  005C64  B4D8               	btfsc	status,2,c
 14898  005C66  EF0B  F02E         	goto	l4900
 14899  005C6A  0A01               	xorlw	1	; case 3
 14900  005C6C  B4D8               	btfsc	status,2,c
 14901  005C6E  EF0B  F02E         	goto	l4900
 14902  005C72  0A07               	xorlw	7	; case 4
 14903  005C74  B4D8               	btfsc	status,2,c
 14904  005C76  EF0F  F02E         	goto	l4904
 14905  005C7A  EF0F  F02E         	goto	l4904
 14906  005C7E                     l295:
 14907  005C7E  0012               	return		;funcret
 14908  005C80                     __end_of_I2C_DO_RX:
 14909                           	callstack 0
 14910                           
 14911 ;; *************** function _I2C_DO_TX *****************
 14912 ;; Defined at:
 14913 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;		None
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;		None
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      enum E3103
 14920 ;; Registers used:
 14921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14931 ;;Total ram usage:        2 bytes
 14932 ;; Hardware stack levels used: 1
 14933 ;; Hardware stack levels required when called: 7
 14934 ;; This function calls:
 14935 ;;		Absolute function
 14936 ;;		_I2C_CallbackReturnReset
 14937 ;;		_I2C_CallbackReturnStop
 14938 ;;		_I2C_DO_SEND_RESTART_READ
 14939 ;;		_I2C_DO_SEND_RESTART_WRITE
 14940 ;;		_I2C_DO_SEND_STOP
 14941 ;;		_I2C_MasterIsNack
 14942 ;;		_I2C_MasterSendTxData
 14943 ;;		_rd1RegCompleteHandler
 14944 ;;		_rd2RegCompleteHandler
 14945 ;;		_rdBlkRegCompleteHandler
 14946 ;;		_wr1RegCompleteHandler
 14947 ;;		_wr2RegCompleteHandler
 14948 ;; This function is called by:
 14949 ;;		_I2C_MasterFsm
 14950 ;; This function uses a non-reentrant model
 14951 ;;
 14952                           
 14953                           	psect	text60
 14954  0058FC                     __ptext60:
 14955                           	callstack 0
 14956  0058FC                     _I2C_DO_TX:
 14957                           	callstack 17
 14958  0058FC                     
 14959                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 14960  0058FC  EC23  F034         	call	_I2C_MasterIsNack	;wreg free
 14961  005900  0900               	iorlw	0
 14962  005902  B4D8               	btfsc	status,2,c
 14963  005904  EF86  F02C         	goto	u3031
 14964  005908  EF88  F02C         	goto	u3030
 14965  00590C                     u3031:
 14966  00590C  EFC3  F02C         	goto	l278
 14967  005910                     u3030:
 14968  005910  EF96  F02C         	goto	l4870
 14969  005914                     l4856:
 14970                           
 14971                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 14972  005914  ECAD  F034         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 14973  005918  EFDF  F02C         	goto	l281
 14974  00591C                     l4860:
 14975                           
 14976                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 14977  00591C  ECA9  F034         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 14978  005920  EFDF  F02C         	goto	l281
 14979  005924                     l4864:
 14980                           
 14981                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 14982  005924  ECA1  F034         	call	_I2C_DO_SEND_STOP	;wreg free
 14983  005928  EFDF  F02C         	goto	l281
 14984  00592C                     l4870:
 14985  00592C  C072  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 14986  005930  C073  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 14987  005934  D802               	call	u3048
 14988  005936  EFA7  F02C         	goto	u3049
 14989  00593A                     u3048:
 14990  00593A  0005               	push	
 14991  00593C  6EFA               	movwf	pclath,c
 14992  00593E  0100               	movlb	0	; () banked
 14993  005940  5166               	movf	(_I2C_Status+6)& (0+255),w,b
 14994  005942  6EFD               	movwf	tosl,c
 14995  005944  5167               	movf	(_I2C_Status+7)& (0+255),w,b
 14996  005946  6EFE               	movwf	tosh,c
 14997  005948  6AFF               	clrf	tosu,c
 14998  00594A  50FA               	movf	pclath,w,c
 14999  00594C  0012               	return		;indir
 15000  00594E                     u3049:
 15001  00594E  6E10               	movwf	??_I2C_DO_TX^0,c
 15002  005950  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
 15003                           
 15004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15005                           ; Switch size 1, requested type "simple"
 15006                           ; Number of cases is 1, Range of values is 0 to 0
 15007                           ; switch strategies available:
 15008                           ; Name         Instructions Cycles
 15009                           ; simple_byte            4     3 (average)
 15010                           ;	Chosen strategy is simple_byte
 15011  005952  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
 15012  005954  0A00               	xorlw	0	; case 0
 15013  005956  B4D8               	btfsc	status,2,c
 15014  005958  EFB0  F02C         	goto	l9056
 15015  00595C  EF92  F02C         	goto	l4864
 15016  005960                     l9056:
 15017                           
 15018                           ; Switch size 1, requested type "simple"
 15019                           ; Number of cases is 4, Range of values is 1 to 4
 15020                           ; switch strategies available:
 15021                           ; Name         Instructions Cycles
 15022                           ; simple_byte           13     7 (average)
 15023                           ;	Chosen strategy is simple_byte
 15024  005960  5010               	movf	??_I2C_DO_TX^0,w,c
 15025  005962  0A01               	xorlw	1	; case 1
 15026  005964  B4D8               	btfsc	status,2,c
 15027  005966  EF92  F02C         	goto	l4864
 15028  00596A  0A03               	xorlw	3	; case 2
 15029  00596C  B4D8               	btfsc	status,2,c
 15030  00596E  EF8A  F02C         	goto	l4856
 15031  005972  0A01               	xorlw	1	; case 3
 15032  005974  B4D8               	btfsc	status,2,c
 15033  005976  EF8E  F02C         	goto	l4860
 15034  00597A  0A07               	xorlw	7	; case 4
 15035  00597C  B4D8               	btfsc	status,2,c
 15036  00597E  EF92  F02C         	goto	l4864
 15037  005982  EF92  F02C         	goto	l4864
 15038  005986                     l278:
 15039                           
 15040                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 15041  005986  0100               	movlb	0	; () banked
 15042  005988  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 15043  00598A                     
 15044                           ; BSR set to: 0
 15045                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 15046  00598A  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
 15047  00598E  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
 15048  005992  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 15049  005994  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
 15050  005996  50DF               	movf	indf2,w,c
 15051  005998  ECB1  F034         	call	_I2C_MasterSendTxData
 15052  00599C                     
 15053                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 15054  00599C  0100               	movlb	0	; () banked
 15055  00599E  077F               	decf	(_I2C_Status+31)& (0+255),f,b
 15056  0059A0  A0D8               	btfss	status,0,c
 15057  0059A2  0780               	decf	(_I2C_Status+32)& (0+255),f,b
 15058  0059A4  517F               	movf	(_I2C_Status+31)& (0+255),w,b
 15059  0059A6  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
 15060  0059A8  A4D8               	btfss	status,2,c
 15061  0059AA  EFD9  F02C         	goto	u3051
 15062  0059AE  EFDB  F02C         	goto	u3050
 15063  0059B2                     u3051:
 15064  0059B2  EFDE  F02C         	goto	l4878
 15065  0059B6                     u3050:
 15066  0059B6                     
 15067                           ; BSR set to: 0
 15068  0059B6  0E06               	movlw	6
 15069  0059B8  EFDF  F02C         	goto	l281
 15070  0059BC                     l4878:
 15071                           
 15072                           ; BSR set to: 0
 15073  0059BC  0E03               	movlw	3
 15074  0059BE                     l281:
 15075  0059BE  0012               	return		;funcret
 15076  0059C0                     __end_of_I2C_DO_TX:
 15077                           	callstack 0
 15078                           
 15079 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 15080 ;; Defined at:
 15081 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;		None
 15084 ;; Auto vars:     Size  Location     Type
 15085 ;;		None
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  1    wreg      enum E3103
 15088 ;; Registers used:
 15089 ;;		wreg, status,2, status,0, cstack
 15090 ;; Tracked objects:
 15091 ;;		On entry : 0/0
 15092 ;;		On exit  : 0/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15099 ;;Total ram usage:        0 bytes
 15100 ;; Hardware stack levels used: 1
 15101 ;; Hardware stack levels required when called: 5
 15102 ;; This function calls:
 15103 ;;		_I2C_MasterSendTxData
 15104 ;; This function is called by:
 15105 ;;		_I2C_MasterFsm
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           	psect	text61
 15110  006890                     __ptext61:
 15111                           	callstack 0
 15112  006890                     _I2C_DO_SEND_ADR_WRITE:
 15113                           	callstack 19
 15114  006890                     
 15115                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 15116  006890  0100               	movlb	0	; () banked
 15117  006892  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
 15118  006894                     
 15119                           ; BSR set to: 0
 15120                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
 15121  006894  517C               	movf	(_I2C_Status+28)& (0+255),w,b
 15122  006896  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
 15123  006898  ECB1  F034         	call	_I2C_MasterSendTxData
 15124  00689C                     
 15125                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 15126  00689C  0E03               	movlw	3
 15127  00689E  0012               	return		;funcret
 15128  0068A0                     __end_of_I2C_DO_SEND_ADR_WRITE:
 15129                           	callstack 0
 15130                           
 15131 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 15132 ;; Defined at:
 15133 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;		None
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;		None
 15138 ;; Return value:  Size  Location     Type
 15139 ;;                  1    wreg      enum E3103
 15140 ;; Registers used:
 15141 ;;		wreg, status,0, cstack
 15142 ;; Tracked objects:
 15143 ;;		On entry : 0/0
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15151 ;;Total ram usage:        0 bytes
 15152 ;; Hardware stack levels used: 1
 15153 ;; Hardware stack levels required when called: 5
 15154 ;; This function calls:
 15155 ;;		_I2C_MasterSendTxData
 15156 ;; This function is called by:
 15157 ;;		_I2C_MasterFsm
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           	psect	text62
 15162  0068A0                     __ptext62:
 15163                           	callstack 0
 15164  0068A0                     _I2C_DO_SEND_ADR_READ:
 15165                           	callstack 19
 15166  0068A0                     
 15167                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 15168  0068A0  0100               	movlb	0	; () banked
 15169  0068A2  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
 15170  0068A4                     
 15171                           ; BSR set to: 0
 15172                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
 15173  0068A4  80D8               	bsf	status,0,c
 15174  0068A6  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 15175  0068A8  ECB1  F034         	call	_I2C_MasterSendTxData
 15176  0068AC                     
 15177                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 15178  0068AC  0E05               	movlw	5
 15179  0068AE  0012               	return		;funcret
 15180  0068B0                     __end_of_I2C_DO_SEND_ADR_READ:
 15181                           	callstack 0
 15182                           
 15183 ;; *************** function _I2C_DO_IDLE *****************
 15184 ;; Defined at:
 15185 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;		None
 15188 ;; Auto vars:     Size  Location     Type
 15189 ;;		None
 15190 ;; Return value:  Size  Location     Type
 15191 ;;                  1    wreg      enum E3103
 15192 ;; Registers used:
 15193 ;;		wreg, status,2
 15194 ;; Tracked objects:
 15195 ;;		On entry : 0/0
 15196 ;;		On exit  : 0/0
 15197 ;;		Unchanged: 0/0
 15198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15203 ;;Total ram usage:        0 bytes
 15204 ;; Hardware stack levels used: 1
 15205 ;; Hardware stack levels required when called: 4
 15206 ;; This function calls:
 15207 ;;		Nothing
 15208 ;; This function is called by:
 15209 ;;		_I2C_MasterFsm
 15210 ;; This function uses a non-reentrant model
 15211 ;;
 15212                           
 15213                           	psect	text63
 15214  0068C8                     __ptext63:
 15215                           	callstack 0
 15216  0068C8                     _I2C_DO_IDLE:
 15217                           	callstack 20
 15218  0068C8                     
 15219                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 15220  0068C8  0100               	movlb	0	; () banked
 15221  0068CA  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
 15222  0068CC                     
 15223                           ; BSR set to: 0
 15224                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 15225  0068CC  0E00               	movlw	0
 15226  0068CE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
 15227  0068D0                     
 15228                           ; BSR set to: 0
 15229                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 15230  0068D0  0E0E               	movlw	14
 15231  0068D2                     
 15232                           ; BSR set to: 0
 15233  0068D2  0012               	return		;funcret
 15234  0068D4                     __end_of_I2C_DO_IDLE:
 15235                           	callstack 0
 15236                           
 15237 ;; *************** function _I2C_DO_TX_EMPTY *****************
 15238 ;; Defined at:
 15239 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 15240 ;; Parameters:    Size  Location     Type
 15241 ;;		None
 15242 ;; Auto vars:     Size  Location     Type
 15243 ;;		None
 15244 ;; Return value:  Size  Location     Type
 15245 ;;                  1    wreg      enum E3103
 15246 ;; Registers used:
 15247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15248 ;; Tracked objects:
 15249 ;;		On entry : 0/0
 15250 ;;		On exit  : 0/0
 15251 ;;		Unchanged: 0/0
 15252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15257 ;;Total ram usage:        2 bytes
 15258 ;; Hardware stack levels used: 1
 15259 ;; Hardware stack levels required when called: 7
 15260 ;; This function calls:
 15261 ;;		Absolute function
 15262 ;;		_I2C_CallbackReturnReset
 15263 ;;		_I2C_CallbackReturnStop
 15264 ;;		_I2C_DO_SEND_RESTART
 15265 ;;		_I2C_DO_SEND_STOP
 15266 ;;		_I2C_MasterSetIrq
 15267 ;;		_rd1RegCompleteHandler
 15268 ;;		_rd2RegCompleteHandler
 15269 ;;		_rdBlkRegCompleteHandler
 15270 ;;		_wr1RegCompleteHandler
 15271 ;;		_wr2RegCompleteHandler
 15272 ;; This function is called by:
 15273 ;;		_I2C_MasterFsm
 15274 ;; This function uses a non-reentrant model
 15275 ;;
 15276                           
 15277                           	psect	text64
 15278  005E2A                     __ptext64:
 15279                           	callstack 0
 15280  005E2A                     _I2C_DO_TX_EMPTY:
 15281                           	callstack 17
 15282  005E2A                     
 15283                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 15284  005E2A  0100               	movlb	0	; () banked
 15285  005E2C  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
 15286                           
 15287                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 15288  005E2E  EF26  F02F         	goto	l4942
 15289  005E32                     l4926:
 15290                           
 15291                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 15292  005E32  ECA5  F034         	call	_I2C_DO_SEND_RESTART	;wreg free
 15293  005E36  EF52  F02F         	goto	l312
 15294  005E3A                     l4930:
 15295                           
 15296                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 15297  005E3A  ECC1  F034         	call	_I2C_MasterSetIrq	;wreg free
 15298  005E3E                     
 15299                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 15300  005E3E  0E03               	movlw	3
 15301  005E40  EF52  F02F         	goto	l312
 15302  005E44                     l4936:
 15303                           
 15304                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 15305  005E44  ECA1  F034         	call	_I2C_DO_SEND_STOP	;wreg free
 15306  005E48  EF52  F02F         	goto	l312
 15307  005E4C                     l4942:
 15308                           
 15309                           ; BSR set to: 0
 15310  005E4C  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 15311  005E50  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 15312  005E54  D802               	call	u3088
 15313  005E56  EF36  F02F         	goto	u3089
 15314  005E5A                     u3088:
 15315  005E5A  0005               	push	
 15316  005E5C  6EFA               	movwf	pclath,c
 15317  005E5E  5160               	movf	_I2C_Status& (0+255),w,b
 15318  005E60  6EFD               	movwf	tosl,c
 15319  005E62  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 15320  005E64  6EFE               	movwf	tosh,c
 15321  005E66  6AFF               	clrf	tosu,c
 15322  005E68  50FA               	movf	pclath,w,c
 15323  005E6A  0012               	return		;indir
 15324  005E6C                     u3089:
 15325  005E6C  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
 15326  005E6E  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 15327                           
 15328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15329                           ; Switch size 1, requested type "simple"
 15330                           ; Number of cases is 1, Range of values is 0 to 0
 15331                           ; switch strategies available:
 15332                           ; Name         Instructions Cycles
 15333                           ; simple_byte            4     3 (average)
 15334                           ;	Chosen strategy is simple_byte
 15335  005E70  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 15336  005E72  0A00               	xorlw	0	; case 0
 15337  005E74  B4D8               	btfsc	status,2,c
 15338  005E76  EF3F  F02F         	goto	l9058
 15339  005E7A  EF22  F02F         	goto	l4936
 15340  005E7E                     l9058:
 15341                           
 15342                           ; Switch size 1, requested type "simple"
 15343                           ; Number of cases is 4, Range of values is 1 to 4
 15344                           ; switch strategies available:
 15345                           ; Name         Instructions Cycles
 15346                           ; simple_byte           13     7 (average)
 15347                           ;	Chosen strategy is simple_byte
 15348  005E7E  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 15349  005E80  0A01               	xorlw	1	; case 1
 15350  005E82  B4D8               	btfsc	status,2,c
 15351  005E84  EF22  F02F         	goto	l4936
 15352  005E88  0A03               	xorlw	3	; case 2
 15353  005E8A  B4D8               	btfsc	status,2,c
 15354  005E8C  EF19  F02F         	goto	l4926
 15355  005E90  0A01               	xorlw	1	; case 3
 15356  005E92  B4D8               	btfsc	status,2,c
 15357  005E94  EF19  F02F         	goto	l4926
 15358  005E98  0A07               	xorlw	7	; case 4
 15359  005E9A  B4D8               	btfsc	status,2,c
 15360  005E9C  EF1D  F02F         	goto	l4930
 15361  005EA0  EF22  F02F         	goto	l4936
 15362  005EA4                     l312:
 15363  005EA4  0012               	return		;funcret
 15364  005EA6                     __end_of_I2C_DO_TX_EMPTY:
 15365                           	callstack 0
 15366                           
 15367 ;; *************** function _I2C_MasterSetIrq *****************
 15368 ;; Defined at:
 15369 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 15370 ;; Parameters:    Size  Location     Type
 15371 ;;		None
 15372 ;; Auto vars:     Size  Location     Type
 15373 ;;		None
 15374 ;; Return value:  Size  Location     Type
 15375 ;;                  1    wreg      void 
 15376 ;; Registers used:
 15377 ;;		None
 15378 ;; Tracked objects:
 15379 ;;		On entry : 0/0
 15380 ;;		On exit  : 0/0
 15381 ;;		Unchanged: 0/0
 15382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15387 ;;Total ram usage:        0 bytes
 15388 ;; Hardware stack levels used: 1
 15389 ;; Hardware stack levels required when called: 4
 15390 ;; This function calls:
 15391 ;;		Nothing
 15392 ;; This function is called by:
 15393 ;;		_I2C_DO_TX_EMPTY
 15394 ;; This function uses a non-reentrant model
 15395 ;;
 15396                           
 15397                           	psect	text65
 15398  006982                     __ptext65:
 15399                           	callstack 0
 15400  006982                     _I2C_MasterSetIrq:
 15401                           	callstack 19
 15402  006982                     
 15403                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 15404  006982  869E               	bsf	158,3,c	;volatile
 15405  006984  0012               	return		;funcret
 15406  006986                     __end_of_I2C_MasterSetIrq:
 15407                           	callstack 0
 15408                           
 15409 ;; *************** function _I2C_MasterIsNack *****************
 15410 ;; Defined at:
 15411 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 15412 ;; Parameters:    Size  Location     Type
 15413 ;;		None
 15414 ;; Auto vars:     Size  Location     Type
 15415 ;;		None
 15416 ;; Return value:  Size  Location     Type
 15417 ;;                  1    wreg      _Bool 
 15418 ;; Registers used:
 15419 ;;		wreg
 15420 ;; Tracked objects:
 15421 ;;		On entry : 0/0
 15422 ;;		On exit  : 0/0
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15429 ;;Total ram usage:        0 bytes
 15430 ;; Hardware stack levels used: 1
 15431 ;; Hardware stack levels required when called: 4
 15432 ;; This function calls:
 15433 ;;		Nothing
 15434 ;; This function is called by:
 15435 ;;		_I2C_MasterFsm
 15436 ;;		_I2C_DO_TX
 15437 ;; This function uses a non-reentrant model
 15438 ;;
 15439                           
 15440                           	psect	text66
 15441  006846                     __ptext66:
 15442                           	callstack 0
 15443  006846                     _I2C_MasterIsNack:
 15444                           	callstack 20
 15445  006846                     
 15446                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 15447  006846  BCC5               	btfsc	197,6,c	;volatile
 15448  006848  EF28  F034         	goto	u3021
 15449  00684C  EF2B  F034         	goto	u3020
 15450  006850                     u3021:
 15451  006850  0E01               	movlw	1
 15452  006852  EF2C  F034         	goto	u3026
 15453  006856                     u3020:
 15454  006856  0E00               	movlw	0
 15455  006858                     u3026:
 15456  006858  0012               	return		;funcret
 15457  00685A                     __end_of_I2C_MasterIsNack:
 15458                           	callstack 0
 15459                           
 15460 ;; *************** function _I2C_MasterSendTxData *****************
 15461 ;; Defined at:
 15462 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;  data            1    wreg     unsigned char 
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;  data            1    4[COMRAM] unsigned char 
 15467 ;; Return value:  Size  Location     Type
 15468 ;;                  1    wreg      void 
 15469 ;; Registers used:
 15470 ;;		wreg
 15471 ;; Tracked objects:
 15472 ;;		On entry : 0/0
 15473 ;;		On exit  : 0/0
 15474 ;;		Unchanged: 0/0
 15475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15480 ;;Total ram usage:        1 bytes
 15481 ;; Hardware stack levels used: 1
 15482 ;; Hardware stack levels required when called: 4
 15483 ;; This function calls:
 15484 ;;		Nothing
 15485 ;; This function is called by:
 15486 ;;		_I2C_DO_SEND_ADR_READ
 15487 ;;		_I2C_DO_SEND_ADR_WRITE
 15488 ;;		_I2C_DO_TX
 15489 ;; This function uses a non-reentrant model
 15490 ;;
 15491                           
 15492                           	psect	text67
 15493  006962                     __ptext67:
 15494                           	callstack 0
 15495  006962                     _I2C_MasterSendTxData:
 15496                           	callstack 19
 15497                           
 15498                           ;incstack = 0
 15499                           ;I2C_MasterSendTxData@data stored from wreg
 15500  006962  6E05               	movwf	I2C_MasterSendTxData@data^0,c
 15501  006964                     
 15502                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 15503  006964  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 15504  006968  0012               	return		;funcret
 15505  00696A                     __end_of_I2C_MasterSendTxData:
 15506                           	callstack 0
 15507                           
 15508 ;; *************** function _I2C_MasterSendAck *****************
 15509 ;; Defined at:
 15510 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 15511 ;; Parameters:    Size  Location     Type
 15512 ;;		None
 15513 ;; Auto vars:     Size  Location     Type
 15514 ;;		None
 15515 ;; Return value:  Size  Location     Type
 15516 ;;                  1    wreg      void 
 15517 ;; Registers used:
 15518 ;;		None
 15519 ;; Tracked objects:
 15520 ;;		On entry : 0/0
 15521 ;;		On exit  : 0/0
 15522 ;;		Unchanged: 0/0
 15523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15528 ;;Total ram usage:        0 bytes
 15529 ;; Hardware stack levels used: 1
 15530 ;; Hardware stack levels required when called: 4
 15531 ;; This function calls:
 15532 ;;		Nothing
 15533 ;; This function is called by:
 15534 ;;		_I2C_DO_RX
 15535 ;;		_I2C_DO_RX_ACK
 15536 ;; This function uses a non-reentrant model
 15537 ;;
 15538                           
 15539                           	psect	text68
 15540  00696A                     __ptext68:
 15541                           	callstack 0
 15542  00696A                     _I2C_MasterSendAck:
 15543                           	callstack 19
 15544  00696A                     
 15545                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 15546  00696A  9AC5               	bcf	197,5,c	;volatile
 15547                           
 15548                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 15549  00696C  88C5               	bsf	197,4,c	;volatile
 15550  00696E  0012               	return		;funcret
 15551  006970                     __end_of_I2C_MasterSendAck:
 15552                           	callstack 0
 15553                           
 15554 ;; *************** function _I2C_MasterGetRxData *****************
 15555 ;; Defined at:
 15556 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 15557 ;; Parameters:    Size  Location     Type
 15558 ;;		None
 15559 ;; Auto vars:     Size  Location     Type
 15560 ;;		None
 15561 ;; Return value:  Size  Location     Type
 15562 ;;                  1    wreg      unsigned char 
 15563 ;; Registers used:
 15564 ;;		wreg, status,2
 15565 ;; Tracked objects:
 15566 ;;		On entry : 0/0
 15567 ;;		On exit  : 0/0
 15568 ;;		Unchanged: 0/0
 15569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15574 ;;Total ram usage:        0 bytes
 15575 ;; Hardware stack levels used: 1
 15576 ;; Hardware stack levels required when called: 4
 15577 ;; This function calls:
 15578 ;;		Nothing
 15579 ;; This function is called by:
 15580 ;;		_I2C_DO_RX
 15581 ;; This function uses a non-reentrant model
 15582 ;;
 15583                           
 15584                           	psect	text69
 15585  006986                     __ptext69:
 15586                           	callstack 0
 15587  006986                     _I2C_MasterGetRxData:
 15588                           	callstack 19
 15589  006986                     
 15590                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 15591  006986  50C9               	movf	201,w,c	;volatile
 15592  006988  0012               	return		;funcret
 15593  00698A                     __end_of_I2C_MasterGetRxData:
 15594                           	callstack 0
 15595                           
 15596 ;; *************** function _I2C_MasterSendNack *****************
 15597 ;; Defined at:
 15598 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 15599 ;; Parameters:    Size  Location     Type
 15600 ;;		None
 15601 ;; Auto vars:     Size  Location     Type
 15602 ;;		None
 15603 ;; Return value:  Size  Location     Type
 15604 ;;                  1    wreg      void 
 15605 ;; Registers used:
 15606 ;;		None
 15607 ;; Tracked objects:
 15608 ;;		On entry : 0/0
 15609 ;;		On exit  : 0/0
 15610 ;;		Unchanged: 0/0
 15611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15616 ;;Total ram usage:        0 bytes
 15617 ;; Hardware stack levels used: 1
 15618 ;; Hardware stack levels required when called: 4
 15619 ;; This function calls:
 15620 ;;		Nothing
 15621 ;; This function is called by:
 15622 ;;		_I2C_DO_RX_NACK_STOP
 15623 ;;		_I2C_DO_RX_NACK_RESTART
 15624 ;; This function uses a non-reentrant model
 15625 ;;
 15626                           
 15627                           	psect	text70
 15628  006970                     __ptext70:
 15629                           	callstack 0
 15630  006970                     _I2C_MasterSendNack:
 15631                           	callstack 19
 15632  006970                     
 15633                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 15634  006970  8AC5               	bsf	197,5,c	;volatile
 15635                           
 15636                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 15637  006972  88C5               	bsf	197,4,c	;volatile
 15638  006974  0012               	return		;funcret
 15639  006976                     __end_of_I2C_MasterSendNack:
 15640                           	callstack 0
 15641                           
 15642 ;; *************** function _I2C_MasterStartRx *****************
 15643 ;; Defined at:
 15644 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 15645 ;; Parameters:    Size  Location     Type
 15646 ;;		None
 15647 ;; Auto vars:     Size  Location     Type
 15648 ;;		None
 15649 ;; Return value:  Size  Location     Type
 15650 ;;                  1    wreg      void 
 15651 ;; Registers used:
 15652 ;;		None
 15653 ;; Tracked objects:
 15654 ;;		On entry : 0/0
 15655 ;;		On exit  : 0/0
 15656 ;;		Unchanged: 0/0
 15657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15662 ;;Total ram usage:        0 bytes
 15663 ;; Hardware stack levels used: 1
 15664 ;; Hardware stack levels required when called: 4
 15665 ;; This function calls:
 15666 ;;		Nothing
 15667 ;; This function is called by:
 15668 ;;		_I2C_DO_RCEN
 15669 ;; This function uses a non-reentrant model
 15670 ;;
 15671                           
 15672                           	psect	text71
 15673  00698A                     __ptext71:
 15674                           	callstack 0
 15675  00698A                     _I2C_MasterStartRx:
 15676                           	callstack 19
 15677  00698A                     
 15678                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 15679  00698A  86C5               	bsf	197,3,c	;volatile
 15680  00698C  0012               	return		;funcret
 15681  00698E                     __end_of_I2C_MasterStartRx:
 15682                           	callstack 0
 15683                           
 15684 ;; *************** function _I2C_CallbackReturnReset *****************
 15685 ;; Defined at:
 15686 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 15687 ;; Parameters:    Size  Location     Type
 15688 ;;  funPtr          2   13[COMRAM] PTR void 
 15689 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15690 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15691 ;; Auto vars:     Size  Location     Type
 15692 ;;		None
 15693 ;; Return value:  Size  Location     Type
 15694 ;;                  1    wreg      enum E360
 15695 ;; Registers used:
 15696 ;;		wreg
 15697 ;; Tracked objects:
 15698 ;;		On entry : 0/0
 15699 ;;		On exit  : 0/0
 15700 ;;		Unchanged: 0/0
 15701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15706 ;;Total ram usage:        2 bytes
 15707 ;; Hardware stack levels used: 1
 15708 ;; Hardware stack levels required when called: 4
 15709 ;; This function calls:
 15710 ;;		Nothing
 15711 ;; This function is called by:
 15712 ;;		_I2C_Open
 15713 ;;		_I2C_DO_TX
 15714 ;;		_I2C_DO_RX
 15715 ;;		_I2C_DO_TX_EMPTY
 15716 ;;		_I2C_DO_ADDRESS_NACK
 15717 ;;		_I2C_DO_RX_EMPTY
 15718 ;; This function uses a non-reentrant model
 15719 ;;
 15720                           
 15721                           	psect	text72
 15722  00698E                     __ptext72:
 15723                           	callstack 0
 15724  00698E                     _I2C_CallbackReturnReset:
 15725                           	callstack 19
 15726  00698E                     
 15727                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 15728  00698E  0E05               	movlw	5
 15729  006990  0012               	return		;funcret
 15730  006992                     __end_of_I2C_CallbackReturnReset:
 15731                           	callstack 0
 15732                           
 15733 ;; *************** function _I2C_CallbackReturnStop *****************
 15734 ;; Defined at:
 15735 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 15736 ;; Parameters:    Size  Location     Type
 15737 ;;  funPtr          2   13[COMRAM] PTR void 
 15738 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15739 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15740 ;; Auto vars:     Size  Location     Type
 15741 ;;		None
 15742 ;; Return value:  Size  Location     Type
 15743 ;;                  1    wreg      enum E360
 15744 ;; Registers used:
 15745 ;;		wreg
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15755 ;;Total ram usage:        2 bytes
 15756 ;; Hardware stack levels used: 1
 15757 ;; Hardware stack levels required when called: 4
 15758 ;; This function calls:
 15759 ;;		Nothing
 15760 ;; This function is called by:
 15761 ;;		_I2C_Open
 15762 ;;		_I2C_SetCallback
 15763 ;;		_I2C_DO_TX
 15764 ;;		_I2C_DO_RX
 15765 ;;		_I2C_DO_TX_EMPTY
 15766 ;;		_I2C_DO_ADDRESS_NACK
 15767 ;;		_I2C_DO_RX_EMPTY
 15768 ;; This function uses a non-reentrant model
 15769 ;;
 15770                           
 15771                           	psect	text73
 15772  006992                     __ptext73:
 15773                           	callstack 0
 15774  006992                     _I2C_CallbackReturnStop:
 15775                           	callstack 19
 15776  006992                     
 15777                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 15778  006992  0E01               	movlw	1
 15779  006994  0012               	return		;funcret
 15780  006996                     __end_of_I2C_CallbackReturnStop:
 15781                           	callstack 0
 15782                           
 15783 ;; *************** function _rdBlkRegCompleteHandler *****************
 15784 ;; Defined at:
 15785 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;  ptr             2   13[COMRAM] PTR void 
 15788 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15789 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15790 ;; Auto vars:     Size  Location     Type
 15791 ;;		None
 15792 ;; Return value:  Size  Location     Type
 15793 ;;                  1    wreg      enum E360
 15794 ;; Registers used:
 15795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15796 ;; Tracked objects:
 15797 ;;		On entry : 0/0
 15798 ;;		On exit  : 0/0
 15799 ;;		Unchanged: 0/0
 15800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15805 ;;Total ram usage:        2 bytes
 15806 ;; Hardware stack levels used: 1
 15807 ;; Hardware stack levels required when called: 6
 15808 ;; This function calls:
 15809 ;;		_I2C_SetBuffer
 15810 ;;		_I2C_SetDataCompleteCallback
 15811 ;; This function is called by:
 15812 ;;		_I2C_ReadDataBlock
 15813 ;;		_I2C_DO_TX
 15814 ;;		_I2C_DO_RX
 15815 ;;		_I2C_DO_TX_EMPTY
 15816 ;;		_I2C_DO_ADDRESS_NACK
 15817 ;;		_I2C_DO_RX_EMPTY
 15818 ;; This function uses a non-reentrant model
 15819 ;;
 15820                           
 15821                           	psect	text74
 15822  0064CA                     __ptext74:
 15823                           	callstack 0
 15824  0064CA                     _rdBlkRegCompleteHandler:
 15825                           	callstack 17
 15826  0064CA                     
 15827                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 15828  0064CA  EE20 F002          	lfsr	2,2
 15829  0064CE  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 15830  0064D0  26D9               	addwf	fsr2l,f,c
 15831  0064D2  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 15832  0064D4  22DA               	addwfc	fsr2h,f,c
 15833  0064D6  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
 15834  0064DA  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
 15835  0064DE  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 15836  0064E2  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 15837  0064E6  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
 15838  0064EA  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 15839  0064EE  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 15840  0064F2                     
 15841                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15842  0064F2  0E00               	movlw	0
 15843  0064F4  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 15844  0064F6  0E00               	movlw	0
 15845  0064F8  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 15846  0064FA  0E00               	movlw	0
 15847  0064FC  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 15848  0064FE  0E00               	movlw	0
 15849  006500  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 15850  006502  EC0C  F034         	call	_I2C_SetDataCompleteCallback	;wreg free
 15851  006506                     
 15852                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 15853  006506  0E02               	movlw	2
 15854  006508  0012               	return		;funcret
 15855  00650A                     __end_of_rdBlkRegCompleteHandler:
 15856                           	callstack 0
 15857                           
 15858 ;; *************** function _wr1RegCompleteHandler *****************
 15859 ;; Defined at:
 15860 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 15861 ;; Parameters:    Size  Location     Type
 15862 ;;  ptr             2   13[COMRAM] PTR void 
 15863 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15864 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15865 ;; Auto vars:     Size  Location     Type
 15866 ;;		None
 15867 ;; Return value:  Size  Location     Type
 15868 ;;                  1    wreg      enum E360
 15869 ;; Registers used:
 15870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15871 ;; Tracked objects:
 15872 ;;		On entry : 0/0
 15873 ;;		On exit  : 0/0
 15874 ;;		Unchanged: 0/0
 15875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15880 ;;Total ram usage:        2 bytes
 15881 ;; Hardware stack levels used: 1
 15882 ;; Hardware stack levels required when called: 6
 15883 ;; This function calls:
 15884 ;;		_I2C_SetBuffer
 15885 ;;		_I2C_SetDataCompleteCallback
 15886 ;; This function is called by:
 15887 ;;		_I2C_Write1ByteRegister
 15888 ;;		_I2C_DO_TX
 15889 ;;		_I2C_DO_RX
 15890 ;;		_I2C_DO_TX_EMPTY
 15891 ;;		_I2C_DO_ADDRESS_NACK
 15892 ;;		_I2C_DO_RX_EMPTY
 15893 ;; This function uses a non-reentrant model
 15894 ;;
 15895                           
 15896                           	psect	text75
 15897  006646                     __ptext75:
 15898                           	callstack 0
 15899  006646                     _wr1RegCompleteHandler:
 15900                           	callstack 17
 15901  006646                     
 15902                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 15903  006646  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 15904  00664A  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 15905  00664E  0E00               	movlw	0
 15906  006650  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 15907  006652  0E01               	movlw	1
 15908  006654  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 15909  006656  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 15910  00665A                     
 15911                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15912  00665A  0E00               	movlw	0
 15913  00665C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 15914  00665E  0E00               	movlw	0
 15915  006660  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 15916  006662  0E00               	movlw	0
 15917  006664  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 15918  006666  0E00               	movlw	0
 15919  006668  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 15920  00666A  EC0C  F034         	call	_I2C_SetDataCompleteCallback	;wreg free
 15921  00666E                     
 15922                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 15923  00666E  0E04               	movlw	4
 15924  006670  0012               	return		;funcret
 15925  006672                     __end_of_wr1RegCompleteHandler:
 15926                           	callstack 0
 15927                           
 15928 ;; *************** function _rd2RegCompleteHandler *****************
 15929 ;; Defined at:
 15930 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 15931 ;; Parameters:    Size  Location     Type
 15932 ;;  ptr             2   13[COMRAM] PTR void 
 15933 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15934 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;		None
 15937 ;; Return value:  Size  Location     Type
 15938 ;;                  1    wreg      enum E360
 15939 ;; Registers used:
 15940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15941 ;; Tracked objects:
 15942 ;;		On entry : 0/0
 15943 ;;		On exit  : 0/0
 15944 ;;		Unchanged: 0/0
 15945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15950 ;;Total ram usage:        2 bytes
 15951 ;; Hardware stack levels used: 1
 15952 ;; Hardware stack levels required when called: 6
 15953 ;; This function calls:
 15954 ;;		_I2C_SetBuffer
 15955 ;;		_I2C_SetDataCompleteCallback
 15956 ;; This function is called by:
 15957 ;;		_I2C_Read2ByteRegister
 15958 ;;		_I2C_DO_TX
 15959 ;;		_I2C_DO_RX
 15960 ;;		_I2C_DO_TX_EMPTY
 15961 ;;		_I2C_DO_ADDRESS_NACK
 15962 ;;		_I2C_DO_RX_EMPTY
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           	psect	text76
 15967  006672                     __ptext76:
 15968                           	callstack 0
 15969  006672                     _rd2RegCompleteHandler:
 15970                           	callstack 17
 15971  006672                     
 15972                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 15973  006672  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 15974  006676  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 15975  00667A  0E00               	movlw	0
 15976  00667C  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 15977  00667E  0E02               	movlw	2
 15978  006680  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 15979  006682  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 15980  006686                     
 15981                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15982  006686  0E00               	movlw	0
 15983  006688  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 15984  00668A  0E00               	movlw	0
 15985  00668C  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 15986  00668E  0E00               	movlw	0
 15987  006690  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 15988  006692  0E00               	movlw	0
 15989  006694  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 15990  006696  EC0C  F034         	call	_I2C_SetDataCompleteCallback	;wreg free
 15991  00669A                     
 15992                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 15993  00669A  0E02               	movlw	2
 15994  00669C  0012               	return		;funcret
 15995  00669E                     __end_of_rd2RegCompleteHandler:
 15996                           	callstack 0
 15997                           
 15998 ;; *************** function _rd1RegCompleteHandler *****************
 15999 ;; Defined at:
 16000 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;  ptr             2   13[COMRAM] PTR void 
 16003 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16004 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 16005 ;; Auto vars:     Size  Location     Type
 16006 ;;		None
 16007 ;; Return value:  Size  Location     Type
 16008 ;;                  1    wreg      enum E360
 16009 ;; Registers used:
 16010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16011 ;; Tracked objects:
 16012 ;;		On entry : 0/0
 16013 ;;		On exit  : 0/0
 16014 ;;		Unchanged: 0/0
 16015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16020 ;;Total ram usage:        2 bytes
 16021 ;; Hardware stack levels used: 1
 16022 ;; Hardware stack levels required when called: 6
 16023 ;; This function calls:
 16024 ;;		_I2C_SetBuffer
 16025 ;;		_I2C_SetDataCompleteCallback
 16026 ;; This function is called by:
 16027 ;;		_I2C_Read1ByteRegister
 16028 ;;		_I2C_DO_TX
 16029 ;;		_I2C_DO_RX
 16030 ;;		_I2C_DO_TX_EMPTY
 16031 ;;		_I2C_DO_ADDRESS_NACK
 16032 ;;		_I2C_DO_RX_EMPTY
 16033 ;; This function uses a non-reentrant model
 16034 ;;
 16035                           
 16036                           	psect	text77
 16037  00669E                     __ptext77:
 16038                           	callstack 0
 16039  00669E                     _rd1RegCompleteHandler:
 16040                           	callstack 17
 16041  00669E                     
 16042                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 16043  00669E  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 16044  0066A2  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 16045  0066A6  0E00               	movlw	0
 16046  0066A8  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 16047  0066AA  0E01               	movlw	1
 16048  0066AC  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 16049  0066AE  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 16050  0066B2                     
 16051                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 16052  0066B2  0E00               	movlw	0
 16053  0066B4  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 16054  0066B6  0E00               	movlw	0
 16055  0066B8  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 16056  0066BA  0E00               	movlw	0
 16057  0066BC  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 16058  0066BE  0E00               	movlw	0
 16059  0066C0  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 16060  0066C2  EC0C  F034         	call	_I2C_SetDataCompleteCallback	;wreg free
 16061  0066C6                     
 16062                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 16063  0066C6  0E02               	movlw	2
 16064  0066C8  0012               	return		;funcret
 16065  0066CA                     __end_of_rd1RegCompleteHandler:
 16066                           	callstack 0
 16067                           
 16068 ;; *************** function _wr2RegCompleteHandler *****************
 16069 ;; Defined at:
 16070 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;  ptr             2   13[COMRAM] PTR void 
 16073 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16074 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;		None
 16077 ;; Return value:  Size  Location     Type
 16078 ;;                  1    wreg      enum E360
 16079 ;; Registers used:
 16080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16090 ;;Total ram usage:        2 bytes
 16091 ;; Hardware stack levels used: 1
 16092 ;; Hardware stack levels required when called: 6
 16093 ;; This function calls:
 16094 ;;		_I2C_SetBuffer
 16095 ;;		_I2C_SetDataCompleteCallback
 16096 ;; This function is called by:
 16097 ;;		_I2C_Write2ByteRegister
 16098 ;;		_I2C_DO_TX
 16099 ;;		_I2C_DO_RX
 16100 ;;		_I2C_DO_TX_EMPTY
 16101 ;;		_I2C_DO_ADDRESS_NACK
 16102 ;;		_I2C_DO_RX_EMPTY
 16103 ;; This function uses a non-reentrant model
 16104 ;;
 16105                           
 16106                           	psect	text78
 16107  0066CA                     __ptext78:
 16108                           	callstack 0
 16109  0066CA                     _wr2RegCompleteHandler:
 16110                           	callstack 17
 16111  0066CA                     
 16112                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 16113  0066CA  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 16114  0066CE  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 16115  0066D2  0E00               	movlw	0
 16116  0066D4  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 16117  0066D6  0E02               	movlw	2
 16118  0066D8  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 16119  0066DA  ECCE  F033         	call	_I2C_SetBuffer	;wreg free
 16120  0066DE                     
 16121                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 16122  0066DE  0E00               	movlw	0
 16123  0066E0  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 16124  0066E2  0E00               	movlw	0
 16125  0066E4  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 16126  0066E6  0E00               	movlw	0
 16127  0066E8  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 16128  0066EA  0E00               	movlw	0
 16129  0066EC  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 16130  0066EE  EC0C  F034         	call	_I2C_SetDataCompleteCallback	;wreg free
 16131  0066F2                     
 16132                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 16133  0066F2  0E04               	movlw	4
 16134  0066F4  0012               	return		;funcret
 16135  0066F6                     __end_of_wr2RegCompleteHandler:
 16136                           	callstack 0
 16137                           
 16138 ;; *************** function _I2C_SetDataCompleteCallback *****************
 16139 ;; Defined at:
 16140 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 16141 ;; Parameters:    Size  Location     Type
 16142 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 16143 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 16144 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16145 ;;  ptr             2   11[COMRAM] PTR void 
 16146 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16147 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 16148 ;; Auto vars:     Size  Location     Type
 16149 ;;		None
 16150 ;; Return value:  Size  Location     Type
 16151 ;;                  1    wreg      void 
 16152 ;; Registers used:
 16153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16154 ;; Tracked objects:
 16155 ;;		On entry : 0/0
 16156 ;;		On exit  : 0/0
 16157 ;;		Unchanged: 0/0
 16158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16162 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16163 ;;Total ram usage:        4 bytes
 16164 ;; Hardware stack levels used: 1
 16165 ;; Hardware stack levels required when called: 5
 16166 ;; This function calls:
 16167 ;;		_I2C_SetCallback
 16168 ;; This function is called by:
 16169 ;;		_I2C_Read1ByteRegister
 16170 ;;		_I2C_Read2ByteRegister
 16171 ;;		_I2C_Write1ByteRegister
 16172 ;;		_rd1RegCompleteHandler
 16173 ;;		_rd2RegCompleteHandler
 16174 ;;		_wr1RegCompleteHandler
 16175 ;;		_wr2RegCompleteHandler
 16176 ;;		_rdBlkRegCompleteHandler
 16177 ;;		_I2C_Write2ByteRegister
 16178 ;;		_I2C_ReadDataBlock
 16179 ;; This function uses a non-reentrant model
 16180 ;;
 16181                           
 16182                           	psect	text79
 16183  006818                     __ptext79:
 16184                           	callstack 0
 16185  006818                     _I2C_SetDataCompleteCallback:
 16186                           	callstack 23
 16187  006818                     
 16188                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 16189  006818  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 16190  00681C  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 16191  006820  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 16192  006824  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 16193  006828  0E00               	movlw	0
 16194  00682A  EC53  F02F         	call	_I2C_SetCallback
 16195  00682E  0012               	return		;funcret
 16196  006830                     __end_of_I2C_SetDataCompleteCallback:
 16197                           	callstack 0
 16198                           
 16199 ;; *************** function _I2C_SetCallback *****************
 16200 ;; Defined at:
 16201 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;  idx             1    wreg     enum E3121
 16204 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
 16205 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 16206 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16207 ;;  ptr             2    6[COMRAM] PTR void 
 16208 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16209 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 16210 ;; Auto vars:     Size  Location     Type
 16211 ;;  idx             1    8[COMRAM] enum E3121
 16212 ;; Return value:  Size  Location     Type
 16213 ;;                  1    wreg      void 
 16214 ;; Registers used:
 16215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16216 ;; Tracked objects:
 16217 ;;		On entry : 0/0
 16218 ;;		On exit  : 0/0
 16219 ;;		Unchanged: 0/0
 16220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16224 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16225 ;;Total ram usage:        5 bytes
 16226 ;; Hardware stack levels used: 1
 16227 ;; Hardware stack levels required when called: 4
 16228 ;; This function calls:
 16229 ;;		Nothing
 16230 ;; This function is called by:
 16231 ;;		_I2C_SetDataCompleteCallback
 16232 ;;		_I2C_SetAddressNackCallback
 16233 ;;		_I2C_SetWriteCollisionCallback
 16234 ;;		_I2C_SetDataNackCallback
 16235 ;;		_I2C_SetTimeoutCallback
 16236 ;; This function uses a non-reentrant model
 16237 ;;
 16238                           
 16239                           	psect	text80
 16240  005EA6                     __ptext80:
 16241                           	callstack 0
 16242  005EA6                     _I2C_SetCallback:
 16243                           	callstack 23
 16244                           
 16245                           ;incstack = 0
 16246                           ;I2C_SetCallback@idx stored from wreg
 16247  005EA6  6E09               	movwf	I2C_SetCallback@idx^0,c
 16248  005EA8                     
 16249                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 16250  005EA8  5005               	movf	I2C_SetCallback@cb^0,w,c
 16251  005EAA  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 16252  005EAC  B4D8               	btfsc	status,2,c
 16253  005EAE  EF5B  F02F         	goto	u2971
 16254  005EB2  EF5D  F02F         	goto	u2970
 16255  005EB6                     u2971:
 16256  005EB6  EF77  F02F         	goto	l4688
 16257  005EBA                     u2970:
 16258  005EBA                     
 16259                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 16260  005EBA  5009               	movf	I2C_SetCallback@idx^0,w,c
 16261  005EBC  0D02               	mullw	2
 16262  005EBE  0E60               	movlw	low _I2C_Status
 16263  005EC0  24F3               	addwf	243,w,c
 16264  005EC2  6ED9               	movwf	fsr2l,c
 16265  005EC4  0E00               	movlw	high _I2C_Status
 16266  005EC6  20F4               	addwfc	prodh,w,c
 16267  005EC8  6EDA               	movwf	fsr2h,c
 16268  005ECA  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
 16269  005ECE  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 16270                           
 16271                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 16272  005ED2  5009               	movf	I2C_SetCallback@idx^0,w,c
 16273  005ED4  0D02               	mullw	2
 16274  005ED6  0E6C               	movlw	low (_I2C_Status+12)
 16275  005ED8  24F3               	addwf	243,w,c
 16276  005EDA  6ED9               	movwf	fsr2l,c
 16277  005EDC  0E00               	movlw	high (_I2C_Status+12)
 16278  005EDE  20F4               	addwfc	prodh,w,c
 16279  005EE0  6EDA               	movwf	fsr2h,c
 16280  005EE2  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 16281  005EE6  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 16282                           
 16283                           ;mcc_generated_files/i2c_master.c: 304:     }
 16284  005EEA  EF8F  F02F         	goto	l256
 16285  005EEE                     l4688:
 16286                           
 16287                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 16288  005EEE  5009               	movf	I2C_SetCallback@idx^0,w,c
 16289  005EF0  0D02               	mullw	2
 16290  005EF2  0E60               	movlw	low _I2C_Status
 16291  005EF4  24F3               	addwf	243,w,c
 16292  005EF6  6ED9               	movwf	fsr2l,c
 16293  005EF8  0E00               	movlw	high _I2C_Status
 16294  005EFA  20F4               	addwfc	prodh,w,c
 16295  005EFC  6EDA               	movwf	fsr2h,c
 16296  005EFE  0E92               	movlw	low _I2C_CallbackReturnStop
 16297  005F00  6EDE               	movwf	postinc2,c
 16298  005F02  0E69               	movlw	high _I2C_CallbackReturnStop
 16299  005F04  6EDD               	movwf	postdec2,c
 16300                           
 16301                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 16302  005F06  5009               	movf	I2C_SetCallback@idx^0,w,c
 16303  005F08  0D02               	mullw	2
 16304  005F0A  0E6C               	movlw	low (_I2C_Status+12)
 16305  005F0C  24F3               	addwf	243,w,c
 16306  005F0E  6ED9               	movwf	fsr2l,c
 16307  005F10  0E00               	movlw	high (_I2C_Status+12)
 16308  005F12  20F4               	addwfc	prodh,w,c
 16309  005F14  6EDA               	movwf	fsr2h,c
 16310  005F16  0E00               	movlw	0
 16311  005F18  6EDE               	movwf	postinc2,c
 16312  005F1A  0E00               	movlw	0
 16313  005F1C  6EDD               	movwf	postdec2,c
 16314  005F1E                     l256:
 16315  005F1E  0012               	return		;funcret
 16316  005F20                     __end_of_I2C_SetCallback:
 16317                           	callstack 0
 16318                           
 16319 ;; *************** function _I2C_SetBuffer *****************
 16320 ;; Defined at:
 16321 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 16322 ;; Parameters:    Size  Location     Type
 16323 ;;  buffer          2    4[COMRAM] PTR void 
 16324 ;;		 -> readBuffer(16), writeBuffer(16), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 16325 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 16326 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
 16327 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
 16328 ;;  bufferSize      2    6[COMRAM] unsigned int 
 16329 ;; Auto vars:     Size  Location     Type
 16330 ;;		None
 16331 ;; Return value:  Size  Location     Type
 16332 ;;                  1    wreg      void 
 16333 ;; Registers used:
 16334 ;;		wreg, status,2, status,0
 16335 ;; Tracked objects:
 16336 ;;		On entry : 0/0
 16337 ;;		On exit  : 0/0
 16338 ;;		Unchanged: 0/0
 16339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16344 ;;Total ram usage:        4 bytes
 16345 ;; Hardware stack levels used: 1
 16346 ;; Hardware stack levels required when called: 4
 16347 ;; This function calls:
 16348 ;;		Nothing
 16349 ;; This function is called by:
 16350 ;;		_I2C_Read1ByteRegister
 16351 ;;		_I2C_Read2ByteRegister
 16352 ;;		_I2C_Write1ByteRegister
 16353 ;;		_I2C_WriteNBytes
 16354 ;;		_I2C_ReadNBytes
 16355 ;;		_rd1RegCompleteHandler
 16356 ;;		_rd2RegCompleteHandler
 16357 ;;		_wr1RegCompleteHandler
 16358 ;;		_wr2RegCompleteHandler
 16359 ;;		_rdBlkRegCompleteHandler
 16360 ;;		_I2C_Write2ByteRegister
 16361 ;;		_I2C_ReadDataBlock
 16362 ;; This function uses a non-reentrant model
 16363 ;;
 16364                           
 16365                           	psect	text81
 16366  00679C                     __ptext81:
 16367                           	callstack 0
 16368  00679C                     _I2C_SetBuffer:
 16369                           	callstack 24
 16370  00679C                     
 16371                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 16372  00679C  0100               	movlb	0	; () banked
 16373  00679E  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
 16374  0067A0  EFD4  F033         	goto	u2981
 16375  0067A4  EFD6  F033         	goto	u2980
 16376  0067A8                     u2981:
 16377  0067A8  EFDF  F033         	goto	l236
 16378  0067AC                     u2980:
 16379  0067AC                     
 16380                           ; BSR set to: 0
 16381                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 16382  0067AC  C005  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 16383  0067B0  C006  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 16384  0067B4                     
 16385                           ; BSR set to: 0
 16386                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 16387  0067B4  C007  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 16388  0067B8  C008  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 16389  0067BC                     
 16390                           ; BSR set to: 0
 16391                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 16392  0067BC  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
 16393  0067BE                     l236:
 16394                           
 16395                           ; BSR set to: 0
 16396  0067BE  0012               	return		;funcret
 16397  0067C0                     __end_of_I2C_SetBuffer:
 16398                           	callstack 0
 16399                           
 16400 ;; *************** function _I2C_MasterStop *****************
 16401 ;; Defined at:
 16402 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 16403 ;; Parameters:    Size  Location     Type
 16404 ;;		None
 16405 ;; Auto vars:     Size  Location     Type
 16406 ;;		None
 16407 ;; Return value:  Size  Location     Type
 16408 ;;                  1    wreg      void 
 16409 ;; Registers used:
 16410 ;;		None
 16411 ;; Tracked objects:
 16412 ;;		On entry : 0/0
 16413 ;;		On exit  : 0/0
 16414 ;;		Unchanged: 0/0
 16415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16420 ;;Total ram usage:        0 bytes
 16421 ;; Hardware stack levels used: 1
 16422 ;; Hardware stack levels required when called: 4
 16423 ;; This function calls:
 16424 ;;		Nothing
 16425 ;; This function is called by:
 16426 ;;		_I2C_DO_SEND_STOP
 16427 ;; This function uses a non-reentrant model
 16428 ;;
 16429                           
 16430                           	psect	text82
 16431  006996                     __ptext82:
 16432                           	callstack 0
 16433  006996                     _I2C_MasterStop:
 16434                           	callstack 18
 16435  006996                     
 16436                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 16437  006996  84C5               	bsf	197,2,c	;volatile
 16438  006998  0012               	return		;funcret
 16439  00699A                     __end_of_I2C_MasterStop:
 16440                           	callstack 0
 16441                           
 16442 ;; *************** function _I2C_MasterEnableRestart *****************
 16443 ;; Defined at:
 16444 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;		None
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;		None
 16449 ;; Return value:  Size  Location     Type
 16450 ;;                  1    wreg      void 
 16451 ;; Registers used:
 16452 ;;		None
 16453 ;; Tracked objects:
 16454 ;;		On entry : 0/0
 16455 ;;		On exit  : 0/0
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16462 ;;Total ram usage:        0 bytes
 16463 ;; Hardware stack levels used: 1
 16464 ;; Hardware stack levels required when called: 4
 16465 ;; This function calls:
 16466 ;;		Nothing
 16467 ;; This function is called by:
 16468 ;;		_I2C_DO_SEND_RESTART_READ
 16469 ;;		_I2C_DO_SEND_RESTART_WRITE
 16470 ;;		_I2C_DO_SEND_RESTART
 16471 ;;		_I2C_DO_RX_EMPTY
 16472 ;; This function uses a non-reentrant model
 16473 ;;
 16474                           
 16475                           	psect	text83
 16476  00699A                     __ptext83:
 16477                           	callstack 0
 16478  00699A                     _I2C_MasterEnableRestart:
 16479                           	callstack 18
 16480  00699A                     
 16481                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 16482  00699A  82C5               	bsf	197,1,c	;volatile
 16483  00699C  0012               	return		;funcret
 16484  00699E                     __end_of_I2C_MasterEnableRestart:
 16485                           	callstack 0
 16486                           
 16487 ;; *************** function _I2C_MasterStart *****************
 16488 ;; Defined at:
 16489 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 16490 ;; Parameters:    Size  Location     Type
 16491 ;;		None
 16492 ;; Auto vars:     Size  Location     Type
 16493 ;;		None
 16494 ;; Return value:  Size  Location     Type
 16495 ;;                  1    wreg      void 
 16496 ;; Registers used:
 16497 ;;		None
 16498 ;; Tracked objects:
 16499 ;;		On entry : 0/0
 16500 ;;		On exit  : 0/0
 16501 ;;		Unchanged: 0/0
 16502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16507 ;;Total ram usage:        0 bytes
 16508 ;; Hardware stack levels used: 1
 16509 ;; Hardware stack levels required when called: 4
 16510 ;; This function calls:
 16511 ;;		Nothing
 16512 ;; This function is called by:
 16513 ;;		_I2C_MasterOperation
 16514 ;; This function uses a non-reentrant model
 16515 ;;
 16516                           
 16517                           	psect	text84
 16518  00699E                     __ptext84:
 16519                           	callstack 0
 16520  00699E                     _I2C_MasterStart:
 16521                           	callstack 22
 16522  00699E                     
 16523                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 16524  00699E  80C5               	bsf	197,0,c	;volatile
 16525  0069A0  0012               	return		;funcret
 16526  0069A2                     __end_of_I2C_MasterStart:
 16527                           	callstack 0
 16528                           
 16529 ;; *************** function _I2C_Close *****************
 16530 ;; Defined at:
 16531 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 16532 ;; Parameters:    Size  Location     Type
 16533 ;;		None
 16534 ;; Auto vars:     Size  Location     Type
 16535 ;;  returnValue     1    4[COMRAM] enum E355
 16536 ;; Return value:  Size  Location     Type
 16537 ;;                  1    wreg      enum E355
 16538 ;; Registers used:
 16539 ;;		wreg, status,2, cstack
 16540 ;; Tracked objects:
 16541 ;;		On entry : 0/0
 16542 ;;		On exit  : 0/0
 16543 ;;		Unchanged: 0/0
 16544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16548 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16549 ;;Total ram usage:        1 bytes
 16550 ;; Hardware stack levels used: 1
 16551 ;; Hardware stack levels required when called: 5
 16552 ;; This function calls:
 16553 ;;		_I2C_MasterClearIrq
 16554 ;;		_I2C_MasterClose
 16555 ;;		_I2C_MasterDisableIrq
 16556 ;; This function is called by:
 16557 ;;		_I2C_Read1ByteRegister
 16558 ;;		_I2C_Read2ByteRegister
 16559 ;;		_I2C_Write1ByteRegister
 16560 ;;		_I2C_WriteNBytes
 16561 ;;		_I2C_ReadNBytes
 16562 ;;		_I2C_Write2ByteRegister
 16563 ;;		_I2C_ReadDataBlock
 16564 ;; This function uses a non-reentrant model
 16565 ;;
 16566                           
 16567                           	psect	text85
 16568  0066F6                     __ptext85:
 16569                           	callstack 0
 16570  0066F6                     _I2C_Close:
 16571                           	callstack 23
 16572  0066F6                     
 16573                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 16574  0066F6  0E01               	movlw	1
 16575  0066F8  6E05               	movwf	I2C_Close@returnValue^0,c
 16576  0066FA                     
 16577                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 16578  0066FA  0100               	movlb	0	; () banked
 16579  0066FC  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
 16580  0066FE  EF83  F033         	goto	u5321
 16581  006702  EF85  F033         	goto	u5320
 16582  006706                     u5321:
 16583  006706  EF8F  F033         	goto	l6262
 16584  00670A                     u5320:
 16585  00670A                     
 16586                           ; BSR set to: 0
 16587                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 16588  00670A  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
 16589                           
 16590                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 16591  00670C  697C               	setf	(_I2C_Status+28)& (0+255),b
 16592  00670E                     
 16593                           ; BSR set to: 0
 16594                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 16595  00670E  ECD5  F034         	call	_I2C_MasterClearIrq	;wreg free
 16596                           
 16597                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 16598  006712  ECD1  F034         	call	_I2C_MasterDisableIrq	;wreg free
 16599                           
 16600                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 16601  006716  ECD3  F034         	call	_I2C_MasterClose	;wreg free
 16602  00671A                     
 16603                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 16604  00671A  C082  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
 16605  00671E                     l6262:
 16606                           
 16607                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 16608  00671E  5005               	movf	I2C_Close@returnValue^0,w,c
 16609  006720  0012               	return		;funcret
 16610  006722                     __end_of_I2C_Close:
 16611                           	callstack 0
 16612                           
 16613 ;; *************** function _I2C_MasterDisableIrq *****************
 16614 ;; Defined at:
 16615 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 16616 ;; Parameters:    Size  Location     Type
 16617 ;;		None
 16618 ;; Auto vars:     Size  Location     Type
 16619 ;;		None
 16620 ;; Return value:  Size  Location     Type
 16621 ;;                  1    wreg      void 
 16622 ;; Registers used:
 16623 ;;		None
 16624 ;; Tracked objects:
 16625 ;;		On entry : 0/0
 16626 ;;		On exit  : 0/0
 16627 ;;		Unchanged: 0/0
 16628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16633 ;;Total ram usage:        0 bytes
 16634 ;; Hardware stack levels used: 1
 16635 ;; Hardware stack levels required when called: 4
 16636 ;; This function calls:
 16637 ;;		Nothing
 16638 ;; This function is called by:
 16639 ;;		_I2C_Close
 16640 ;;		_I2C_SetTimeOut
 16641 ;; This function uses a non-reentrant model
 16642 ;;
 16643                           
 16644                           	psect	text86
 16645  0069A2                     __ptext86:
 16646                           	callstack 0
 16647  0069A2                     _I2C_MasterDisableIrq:
 16648                           	callstack 23
 16649  0069A2                     
 16650                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 16651  0069A2  969D               	bcf	157,3,c	;volatile
 16652  0069A4  0012               	return		;funcret
 16653  0069A6                     __end_of_I2C_MasterDisableIrq:
 16654                           	callstack 0
 16655                           
 16656 ;; *************** function _I2C_MasterClose *****************
 16657 ;; Defined at:
 16658 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 16659 ;; Parameters:    Size  Location     Type
 16660 ;;		None
 16661 ;; Auto vars:     Size  Location     Type
 16662 ;;		None
 16663 ;; Return value:  Size  Location     Type
 16664 ;;                  1    wreg      void 
 16665 ;; Registers used:
 16666 ;;		None
 16667 ;; Tracked objects:
 16668 ;;		On entry : 0/0
 16669 ;;		On exit  : 0/0
 16670 ;;		Unchanged: 0/0
 16671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16676 ;;Total ram usage:        0 bytes
 16677 ;; Hardware stack levels used: 1
 16678 ;; Hardware stack levels required when called: 4
 16679 ;; This function calls:
 16680 ;;		Nothing
 16681 ;; This function is called by:
 16682 ;;		_I2C_Close
 16683 ;; This function uses a non-reentrant model
 16684 ;;
 16685                           
 16686                           	psect	text87
 16687  0069A6                     __ptext87:
 16688                           	callstack 0
 16689  0069A6                     _I2C_MasterClose:
 16690                           	callstack 23
 16691  0069A6                     
 16692                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 16693  0069A6  9AC6               	bcf	198,5,c	;volatile
 16694  0069A8  0012               	return		;funcret
 16695  0069AA                     __end_of_I2C_MasterClose:
 16696                           	callstack 0
 16697                           
 16698 ;; *************** function _I2C_MasterClearIrq *****************
 16699 ;; Defined at:
 16700 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 16701 ;; Parameters:    Size  Location     Type
 16702 ;;		None
 16703 ;; Auto vars:     Size  Location     Type
 16704 ;;		None
 16705 ;; Return value:  Size  Location     Type
 16706 ;;                  1    wreg      void 
 16707 ;; Registers used:
 16708 ;;		None
 16709 ;; Tracked objects:
 16710 ;;		On entry : 0/0
 16711 ;;		On exit  : 0/0
 16712 ;;		Unchanged: 0/0
 16713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16718 ;;Total ram usage:        0 bytes
 16719 ;; Hardware stack levels used: 1
 16720 ;; Hardware stack levels required when called: 4
 16721 ;; This function calls:
 16722 ;;		Nothing
 16723 ;; This function is called by:
 16724 ;;		_I2C_Open
 16725 ;;		_I2C_Close
 16726 ;;		_I2C_MasterFsm
 16727 ;; This function uses a non-reentrant model
 16728 ;;
 16729                           
 16730                           	psect	text88
 16731  0069AA                     __ptext88:
 16732                           	callstack 0
 16733  0069AA                     _I2C_MasterClearIrq:
 16734                           	callstack 23
 16735  0069AA                     
 16736                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 16737  0069AA  969E               	bcf	158,3,c	;volatile
 16738  0069AC  0012               	return		;funcret
 16739  0069AE                     __end_of_I2C_MasterClearIrq:
 16740                           	callstack 0
 16741                           
 16742 ;; *************** function _SYSTEM_Initialize *****************
 16743 ;; Defined at:
 16744 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16745 ;; Parameters:    Size  Location     Type
 16746 ;;		None
 16747 ;; Auto vars:     Size  Location     Type
 16748 ;;		None
 16749 ;; Return value:  Size  Location     Type
 16750 ;;                  1    wreg      void 
 16751 ;; Registers used:
 16752 ;;		wreg, status,2, status,0, cstack
 16753 ;; Tracked objects:
 16754 ;;		On entry : 0/0
 16755 ;;		On exit  : 0/0
 16756 ;;		Unchanged: 0/0
 16757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16762 ;;Total ram usage:        0 bytes
 16763 ;; Hardware stack levels used: 1
 16764 ;; Hardware stack levels required when called: 6
 16765 ;; This function calls:
 16766 ;;		_EUSART_Initialize
 16767 ;;		_I2C_Initialize
 16768 ;;		_INTERRUPT_Initialize
 16769 ;;		_OSCILLATOR_Initialize
 16770 ;;		_PIN_MANAGER_Initialize
 16771 ;; This function is called by:
 16772 ;;		_main
 16773 ;; This function uses a non-reentrant model
 16774 ;;
 16775                           
 16776                           	psect	text89
 16777  006830                     __ptext89:
 16778                           	callstack 0
 16779  006830                     _SYSTEM_Initialize:
 16780                           	callstack 24
 16781  006830                     
 16782                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 16783  006830  ECD7  F034         	call	_INTERRUPT_Initialize	;wreg free
 16784  006834                     
 16785                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
 16786  006834  EC2D  F034         	call	_I2C_Initialize	;wreg free
 16787  006838                     
 16788                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 16789  006838  ECF4  F032         	call	_PIN_MANAGER_Initialize	;wreg free
 16790  00683C                     
 16791                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 16792  00683C  EC6F  F034         	call	_OSCILLATOR_Initialize	;wreg free
 16793  006840                     
 16794                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
 16795  006840  EC90  F02F         	call	_EUSART_Initialize	;wreg free
 16796  006844  0012               	return		;funcret
 16797  006846                     __end_of_SYSTEM_Initialize:
 16798                           	callstack 0
 16799                           
 16800 ;; *************** function _PIN_MANAGER_Initialize *****************
 16801 ;; Defined at:
 16802 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16803 ;; Parameters:    Size  Location     Type
 16804 ;;		None
 16805 ;; Auto vars:     Size  Location     Type
 16806 ;;		None
 16807 ;; Return value:  Size  Location     Type
 16808 ;;                  1    wreg      void 
 16809 ;; Registers used:
 16810 ;;		wreg, status,2
 16811 ;; Tracked objects:
 16812 ;;		On entry : 0/0
 16813 ;;		On exit  : 0/0
 16814 ;;		Unchanged: 0/0
 16815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16820 ;;Total ram usage:        0 bytes
 16821 ;; Hardware stack levels used: 1
 16822 ;; Hardware stack levels required when called: 4
 16823 ;; This function calls:
 16824 ;;		Nothing
 16825 ;; This function is called by:
 16826 ;;		_SYSTEM_Initialize
 16827 ;; This function uses a non-reentrant model
 16828 ;;
 16829                           
 16830                           	psect	text90
 16831  0065E8                     __ptext90:
 16832                           	callstack 0
 16833  0065E8                     _PIN_MANAGER_Initialize:
 16834                           	callstack 25
 16835  0065E8                     
 16836                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 16837  0065E8  0E00               	movlw	0
 16838  0065EA  6E8D               	movwf	141,c	;volatile
 16839                           
 16840                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 16841  0065EC  0E00               	movlw	0
 16842  0065EE  6E8C               	movwf	140,c	;volatile
 16843                           
 16844                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 16845  0065F0  0E00               	movlw	0
 16846  0065F2  6E89               	movwf	137,c	;volatile
 16847                           
 16848                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 16849  0065F4  0E00               	movlw	0
 16850  0065F6  6E8A               	movwf	138,c	;volatile
 16851                           
 16852                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 16853  0065F8  0E00               	movlw	0
 16854  0065FA  6E8B               	movwf	139,c	;volatile
 16855                           
 16856                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 16857  0065FC  0E07               	movlw	7
 16858  0065FE  6E96               	movwf	150,c	;volatile
 16859  006600                     
 16860                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
 16861  006600  6892               	setf	146,c	;volatile
 16862  006602                     
 16863                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 16864  006602  6893               	setf	147,c	;volatile
 16865                           
 16866                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
 16867  006604  0EBF               	movlw	191
 16868  006606  6E94               	movwf	148,c	;volatile
 16869                           
 16870                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFD;
 16871  006608  0EFD               	movlw	253
 16872  00660A  6E95               	movwf	149,c	;volatile
 16873  00660C                     
 16874                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
 16875  00660C  687E               	setf	126,c	;volatile
 16876                           
 16877                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
 16878  00660E  0E1F               	movlw	31
 16879  006610  6E7F               	movwf	127,c	;volatile
 16880                           
 16881                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
 16882  006612  0E00               	movlw	0
 16883  006614  6E7C               	movwf	124,c	;volatile
 16884  006616                     
 16885                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
 16886  006616  8EF1               	bsf	241,7,c	;volatile
 16887  006618  0012               	return		;funcret
 16888  00661A                     __end_of_PIN_MANAGER_Initialize:
 16889                           	callstack 0
 16890                           
 16891 ;; *************** function _OSCILLATOR_Initialize *****************
 16892 ;; Defined at:
 16893 ;;		line 60 in file "mcc_generated_files/mcc.c"
 16894 ;; Parameters:    Size  Location     Type
 16895 ;;		None
 16896 ;; Auto vars:     Size  Location     Type
 16897 ;;		None
 16898 ;; Return value:  Size  Location     Type
 16899 ;;                  1    wreg      void 
 16900 ;; Registers used:
 16901 ;;		wreg, status,2
 16902 ;; Tracked objects:
 16903 ;;		On entry : 0/0
 16904 ;;		On exit  : 0/0
 16905 ;;		Unchanged: 0/0
 16906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16911 ;;Total ram usage:        0 bytes
 16912 ;; Hardware stack levels used: 1
 16913 ;; Hardware stack levels required when called: 4
 16914 ;; This function calls:
 16915 ;;		Nothing
 16916 ;; This function is called by:
 16917 ;;		_SYSTEM_Initialize
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text91
 16922  0068DE                     __ptext91:
 16923                           	callstack 0
 16924  0068DE                     _OSCILLATOR_Initialize:
 16925                           	callstack 25
 16926  0068DE                     
 16927                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
 16928  0068DE  0E60               	movlw	96
 16929  0068E0  6ED3               	movwf	211,c	;volatile
 16930                           
 16931                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
 16932  0068E2  0E00               	movlw	0
 16933  0068E4  6E9B               	movwf	155,c	;volatile
 16934  0068E6  0012               	return		;funcret
 16935  0068E8                     __end_of_OSCILLATOR_Initialize:
 16936                           	callstack 0
 16937                           
 16938 ;; *************** function _INTERRUPT_Initialize *****************
 16939 ;; Defined at:
 16940 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16941 ;; Parameters:    Size  Location     Type
 16942 ;;		None
 16943 ;; Auto vars:     Size  Location     Type
 16944 ;;		None
 16945 ;; Return value:  Size  Location     Type
 16946 ;;                  1    wreg      void 
 16947 ;; Registers used:
 16948 ;;		None
 16949 ;; Tracked objects:
 16950 ;;		On entry : 0/0
 16951 ;;		On exit  : 0/0
 16952 ;;		Unchanged: 0/0
 16953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16958 ;;Total ram usage:        0 bytes
 16959 ;; Hardware stack levels used: 1
 16960 ;; Hardware stack levels required when called: 4
 16961 ;; This function calls:
 16962 ;;		Nothing
 16963 ;; This function is called by:
 16964 ;;		_SYSTEM_Initialize
 16965 ;; This function uses a non-reentrant model
 16966 ;;
 16967                           
 16968                           	psect	text92
 16969  0069AE                     __ptext92:
 16970                           	callstack 0
 16971  0069AE                     _INTERRUPT_Initialize:
 16972                           	callstack 25
 16973  0069AE                     
 16974                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 16975  0069AE  9ED0               	bcf	208,7,c	;volatile
 16976  0069B0  0012               	return		;funcret
 16977  0069B2                     __end_of_INTERRUPT_Initialize:
 16978                           	callstack 0
 16979                           
 16980 ;; *************** function _I2C_Initialize *****************
 16981 ;; Defined at:
 16982 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 16983 ;; Parameters:    Size  Location     Type
 16984 ;;		None
 16985 ;; Auto vars:     Size  Location     Type
 16986 ;;		None
 16987 ;; Return value:  Size  Location     Type
 16988 ;;                  1    wreg      void 
 16989 ;; Registers used:
 16990 ;;		wreg, status,2
 16991 ;; Tracked objects:
 16992 ;;		On entry : 0/0
 16993 ;;		On exit  : 0/0
 16994 ;;		Unchanged: 0/0
 16995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17000 ;;Total ram usage:        0 bytes
 17001 ;; Hardware stack levels used: 1
 17002 ;; Hardware stack levels required when called: 4
 17003 ;; This function calls:
 17004 ;;		Nothing
 17005 ;; This function is called by:
 17006 ;;		_SYSTEM_Initialize
 17007 ;; This function uses a non-reentrant model
 17008 ;;
 17009                           
 17010                           	psect	text93
 17011  00685A                     __ptext93:
 17012                           	callstack 0
 17013  00685A                     _I2C_Initialize:
 17014                           	callstack 25
 17015  00685A                     
 17016                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
 17017  00685A  0E00               	movlw	0
 17018  00685C  6EC7               	movwf	199,c	;volatile
 17019                           
 17020                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
 17021  00685E  0E08               	movlw	8
 17022  006860  6EC6               	movwf	198,c	;volatile
 17023                           
 17024                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
 17025  006862  0E00               	movlw	0
 17026  006864  6EC5               	movwf	197,c	;volatile
 17027                           
 17028                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
 17029  006866  0E13               	movlw	19
 17030  006868  6EC8               	movwf	200,c	;volatile
 17031  00686A                     
 17032                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
 17033  00686A  9AC6               	bcf	198,5,c	;volatile
 17034  00686C  0012               	return		;funcret
 17035  00686E                     __end_of_I2C_Initialize:
 17036                           	callstack 0
 17037                           
 17038 ;; *************** function _EUSART_Initialize *****************
 17039 ;; Defined at:
 17040 ;;		line 88 in file "mcc_generated_files/eusart.c"
 17041 ;; Parameters:    Size  Location     Type
 17042 ;;		None
 17043 ;; Auto vars:     Size  Location     Type
 17044 ;;		None
 17045 ;; Return value:  Size  Location     Type
 17046 ;;                  1    wreg      void 
 17047 ;; Registers used:
 17048 ;;		wreg, status,2, status,0, cstack
 17049 ;; Tracked objects:
 17050 ;;		On entry : 0/0
 17051 ;;		On exit  : 0/0
 17052 ;;		Unchanged: 0/0
 17053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17058 ;;Total ram usage:        0 bytes
 17059 ;; Hardware stack levels used: 1
 17060 ;; Hardware stack levels required when called: 5
 17061 ;; This function calls:
 17062 ;;		_EUSART_SetErrorHandler
 17063 ;;		_EUSART_SetFramingErrorHandler
 17064 ;;		_EUSART_SetOverrunErrorHandler
 17065 ;;		_EUSART_SetRxInterruptHandler
 17066 ;;		_EUSART_SetTxInterruptHandler
 17067 ;; This function is called by:
 17068 ;;		_SYSTEM_Initialize
 17069 ;; This function uses a non-reentrant model
 17070 ;;
 17071                           
 17072                           	psect	text94
 17073  005F20                     __ptext94:
 17074                           	callstack 0
 17075  005F20                     _EUSART_Initialize:
 17076                           	callstack 24
 17077  005F20                     
 17078                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
 17079  005F20  9A9D               	bcf	157,5,c	;volatile
 17080  005F22                     
 17081                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 17082  005F22  0EC0               	movlw	low _EUSART_Receive_ISR
 17083  005F24  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
 17084  005F26  0E59               	movlw	high _EUSART_Receive_ISR
 17085  005F28  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
 17086  005F2A  EC79  F034         	call	_EUSART_SetRxInterruptHandler	;wreg free
 17087  005F2E                     
 17088                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
 17089  005F2E  989D               	bcf	157,4,c	;volatile
 17090                           
 17091                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 17092  005F30  0E88               	movlw	low _EUSART_Transmit_ISR
 17093  005F32  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
 17094  005F34  0E64               	movlw	high _EUSART_Transmit_ISR
 17095  005F36  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
 17096  005F38  EC74  F034         	call	_EUSART_SetTxInterruptHandler	;wreg free
 17097  005F3C                     
 17098                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
 17099  005F3C  0E08               	movlw	8
 17100  005F3E  6EB8               	movwf	184,c	;volatile
 17101  005F40                     
 17102                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
 17103  005F40  0E90               	movlw	144
 17104  005F42  6EAB               	movwf	171,c	;volatile
 17105  005F44                     
 17106                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
 17107  005F44  0E24               	movlw	36
 17108  005F46  6EAC               	movwf	172,c	;volatile
 17109  005F48                     
 17110                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
 17111  005F48  0ECF               	movlw	207
 17112  005F4A  6EAF               	movwf	175,c	;volatile
 17113  005F4C                     
 17114                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
 17115  005F4C  0E00               	movlw	0
 17116  005F4E  6EB0               	movwf	176,c	;volatile
 17117  005F50                     
 17118                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 17119  005F50  0EB2               	movlw	low _EUSART_DefaultFramingErrorHandler
 17120  005F52  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
 17121  005F54  0E69               	movlw	high _EUSART_DefaultFramingErrorHandler
 17122  005F56  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
 17123  005F58  EC83  F034         	call	_EUSART_SetFramingErrorHandler	;wreg free
 17124  005F5C                     
 17125                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 17126  005F5C  0E76               	movlw	low _EUSART_DefaultOverrunErrorHandler
 17127  005F5E  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
 17128  005F60  0E69               	movlw	high _EUSART_DefaultOverrunErrorHandler
 17129  005F62  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
 17130  005F64  EC7E  F034         	call	_EUSART_SetOverrunErrorHandler	;wreg free
 17131  005F68                     
 17132                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 17133  005F68  0E7C               	movlw	low _EUSART_DefaultErrorHandler
 17134  005F6A  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
 17135  005F6C  0E69               	movlw	high _EUSART_DefaultErrorHandler
 17136  005F6E  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
 17137  005F70  EC88  F034         	call	_EUSART_SetErrorHandler	;wreg free
 17138                           
 17139                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 17140  005F74  0E00               	movlw	0
 17141  005F76  0100               	movlb	0	; () banked
 17142  005F78  6FA4               	movwf	_eusartRxLastError& (0+255),b	;volatile
 17143                           
 17144                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 17145  005F7A  0E00               	movlw	0
 17146  005F7C  6E5A               	movwf	_eusartTxHead^0,c	;volatile
 17147                           
 17148                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 17149  005F7E  0E00               	movlw	0
 17150  005F80  6E59               	movwf	_eusartTxTail^0,c	;volatile
 17151                           
 17152                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 17153  005F82  0E08               	movlw	8
 17154  005F84  6FFF               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 17155                           
 17156                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 17157  005F86  0E00               	movlw	0
 17158  005F88  6E58               	movwf	_eusartRxHead^0,c	;volatile
 17159                           
 17160                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 17161  005F8A  0E00               	movlw	0
 17162  005F8C  6E57               	movwf	_eusartRxTail^0,c	;volatile
 17163                           
 17164                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 17165  005F8E  0E00               	movlw	0
 17166  005F90  6E56               	movwf	_eusartRxCount^0,c	;volatile
 17167  005F92                     
 17168                           ; BSR set to: 0
 17169                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
 17170  005F92  8A9D               	bsf	157,5,c	;volatile
 17171  005F94                     
 17172                           ; BSR set to: 0
 17173  005F94  0012               	return		;funcret
 17174  005F96                     __end_of_EUSART_Initialize:
 17175                           	callstack 0
 17176                           
 17177 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 17178 ;; Defined at:
 17179 ;;		line 285 in file "mcc_generated_files/eusart.c"
 17180 ;; Parameters:    Size  Location     Type
 17181 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 17182 ;;		 -> EUSART_Transmit_ISR(1), 
 17183 ;; Auto vars:     Size  Location     Type
 17184 ;;		None
 17185 ;; Return value:  Size  Location     Type
 17186 ;;                  1    wreg      void 
 17187 ;; Registers used:
 17188 ;;		wreg, status,2, status,0
 17189 ;; Tracked objects:
 17190 ;;		On entry : 0/0
 17191 ;;		On exit  : 0/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17198 ;;Total ram usage:        2 bytes
 17199 ;; Hardware stack levels used: 1
 17200 ;; Hardware stack levels required when called: 4
 17201 ;; This function calls:
 17202 ;;		Nothing
 17203 ;; This function is called by:
 17204 ;;		_EUSART_Initialize
 17205 ;; This function uses a non-reentrant model
 17206 ;;
 17207                           
 17208                           	psect	text95
 17209  0068E8                     __ptext95:
 17210                           	callstack 0
 17211  0068E8                     _EUSART_SetTxInterruptHandler:
 17212                           	callstack 24
 17213  0068E8                     
 17214                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 17215  0068E8  C005  F0FD         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
 17216  0068EC  C006  F0FE         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
 17217  0068F0  0012               	return		;funcret
 17218  0068F2                     __end_of_EUSART_SetTxInterruptHandler:
 17219                           	callstack 0
 17220                           
 17221 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 17222 ;; Defined at:
 17223 ;;		line 289 in file "mcc_generated_files/eusart.c"
 17224 ;; Parameters:    Size  Location     Type
 17225 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 17226 ;;		 -> EUSART_Receive_ISR(1), 
 17227 ;; Auto vars:     Size  Location     Type
 17228 ;;		None
 17229 ;; Return value:  Size  Location     Type
 17230 ;;                  1    wreg      void 
 17231 ;; Registers used:
 17232 ;;		wreg, status,2, status,0
 17233 ;; Tracked objects:
 17234 ;;		On entry : 0/0
 17235 ;;		On exit  : 0/0
 17236 ;;		Unchanged: 0/0
 17237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17242 ;;Total ram usage:        2 bytes
 17243 ;; Hardware stack levels used: 1
 17244 ;; Hardware stack levels required when called: 4
 17245 ;; This function calls:
 17246 ;;		Nothing
 17247 ;; This function is called by:
 17248 ;;		_EUSART_Initialize
 17249 ;; This function uses a non-reentrant model
 17250 ;;
 17251                           
 17252                           	psect	text96
 17253  0068F2                     __ptext96:
 17254                           	callstack 0
 17255  0068F2                     _EUSART_SetRxInterruptHandler:
 17256                           	callstack 24
 17257  0068F2                     
 17258                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 17259  0068F2  C005  F176         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
 17260  0068F6  C006  F177         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
 17261  0068FA  0012               	return		;funcret
 17262  0068FC                     __end_of_EUSART_SetRxInterruptHandler:
 17263                           	callstack 0
 17264                           
 17265 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 17266 ;; Defined at:
 17267 ;;		line 277 in file "mcc_generated_files/eusart.c"
 17268 ;; Parameters:    Size  Location     Type
 17269 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 17270 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 17271 ;; Auto vars:     Size  Location     Type
 17272 ;;		None
 17273 ;; Return value:  Size  Location     Type
 17274 ;;                  1    wreg      void 
 17275 ;; Registers used:
 17276 ;;		wreg, status,2, status,0
 17277 ;; Tracked objects:
 17278 ;;		On entry : 0/0
 17279 ;;		On exit  : 0/0
 17280 ;;		Unchanged: 0/0
 17281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17286 ;;Total ram usage:        2 bytes
 17287 ;; Hardware stack levels used: 1
 17288 ;; Hardware stack levels required when called: 4
 17289 ;; This function calls:
 17290 ;;		Nothing
 17291 ;; This function is called by:
 17292 ;;		_EUSART_Initialize
 17293 ;; This function uses a non-reentrant model
 17294 ;;
 17295                           
 17296                           	psect	text97
 17297  0068FC                     __ptext97:
 17298                           	callstack 0
 17299  0068FC                     _EUSART_SetOverrunErrorHandler:
 17300                           	callstack 24
 17301  0068FC                     
 17302                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 17303  0068FC  C005  F172         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
 17304  006900  C006  F173         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
 17305  006904  0012               	return		;funcret
 17306  006906                     __end_of_EUSART_SetOverrunErrorHandler:
 17307                           	callstack 0
 17308                           
 17309 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 17310 ;; Defined at:
 17311 ;;		line 273 in file "mcc_generated_files/eusart.c"
 17312 ;; Parameters:    Size  Location     Type
 17313 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 17314 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;		None
 17317 ;; Return value:  Size  Location     Type
 17318 ;;                  1    wreg      void 
 17319 ;; Registers used:
 17320 ;;		wreg, status,2, status,0
 17321 ;; Tracked objects:
 17322 ;;		On entry : 0/0
 17323 ;;		On exit  : 0/0
 17324 ;;		Unchanged: 0/0
 17325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17330 ;;Total ram usage:        2 bytes
 17331 ;; Hardware stack levels used: 1
 17332 ;; Hardware stack levels required when called: 4
 17333 ;; This function calls:
 17334 ;;		Nothing
 17335 ;; This function is called by:
 17336 ;;		_EUSART_Initialize
 17337 ;; This function uses a non-reentrant model
 17338 ;;
 17339                           
 17340                           	psect	text98
 17341  006906                     __ptext98:
 17342                           	callstack 0
 17343  006906                     _EUSART_SetFramingErrorHandler:
 17344                           	callstack 24
 17345  006906                     
 17346                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 17347  006906  C005  F174         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
 17348  00690A  C006  F175         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
 17349  00690E  0012               	return		;funcret
 17350  006910                     __end_of_EUSART_SetFramingErrorHandler:
 17351                           	callstack 0
 17352                           
 17353 ;; *************** function _EUSART_SetErrorHandler *****************
 17354 ;; Defined at:
 17355 ;;		line 281 in file "mcc_generated_files/eusart.c"
 17356 ;; Parameters:    Size  Location     Type
 17357 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 17358 ;;		 -> EUSART_DefaultErrorHandler(1), 
 17359 ;; Auto vars:     Size  Location     Type
 17360 ;;		None
 17361 ;; Return value:  Size  Location     Type
 17362 ;;                  1    wreg      void 
 17363 ;; Registers used:
 17364 ;;		wreg, status,2, status,0
 17365 ;; Tracked objects:
 17366 ;;		On entry : 0/0
 17367 ;;		On exit  : 0/0
 17368 ;;		Unchanged: 0/0
 17369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17374 ;;Total ram usage:        2 bytes
 17375 ;; Hardware stack levels used: 1
 17376 ;; Hardware stack levels required when called: 4
 17377 ;; This function calls:
 17378 ;;		Nothing
 17379 ;; This function is called by:
 17380 ;;		_EUSART_Initialize
 17381 ;; This function uses a non-reentrant model
 17382 ;;
 17383                           
 17384                           	psect	text99
 17385  006910                     __ptext99:
 17386                           	callstack 0
 17387  006910                     _EUSART_SetErrorHandler:
 17388                           	callstack 24
 17389  006910                     
 17390                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 17391  006910  C005  F170         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
 17392  006914  C006  F171         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
 17393  006918  0012               	return		;funcret
 17394  00691A                     __end_of_EUSART_SetErrorHandler:
 17395                           	callstack 0
 17396                           
 17397 ;; *************** function _INTERRUPT_InterruptManager *****************
 17398 ;; Defined at:
 17399 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;		None
 17402 ;; Auto vars:     Size  Location     Type
 17403 ;;		None
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  1    wreg      void 
 17406 ;; Registers used:
 17407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 17408 ;; Tracked objects:
 17409 ;;		On entry : 0/0
 17410 ;;		On exit  : 0/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17417 ;;Total ram usage:        4 bytes
 17418 ;; Hardware stack levels used: 1
 17419 ;; Hardware stack levels required when called: 3
 17420 ;; This function calls:
 17421 ;;		Absolute function
 17422 ;;		_EUSART_Receive_ISR
 17423 ;;		_EUSART_Transmit_ISR
 17424 ;; This function is called by:
 17425 ;;		Interrupt level 2
 17426 ;; This function uses a non-reentrant model
 17427 ;;
 17428                           
 17429                           	psect	intcode
 17430  000008                     __pintcode:
 17431                           	callstack 0
 17432  000008                     _INTERRUPT_InterruptManager:
 17433                           	callstack 17
 17434                           
 17435                           ;incstack = 0
 17436  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17437  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 17438  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17439  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 17440  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 17441  00001A                     
 17442                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 17443  00001A  ACF2               	btfss	242,6,c	;volatile
 17444  00001C  EF12  F000         	goto	i2u585_41
 17445  000020  EF14  F000         	goto	i2u585_40
 17446  000024                     i2u585_41:
 17447  000024  EF4E  F000         	goto	i2l671
 17448  000028                     i2u585_40:
 17449  000028                     
 17450                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 17451  000028  A89D               	btfss	157,4,c	;volatile
 17452  00002A  EF19  F000         	goto	i2u586_41
 17453  00002E  EF1B  F000         	goto	i2u586_40
 17454  000032                     i2u586_41:
 17455  000032  EF31  F000         	goto	i2l666
 17456  000036                     i2u586_40:
 17457  000036  A89E               	btfss	158,4,c	;volatile
 17458  000038  EF20  F000         	goto	i2u587_41
 17459  00003C  EF22  F000         	goto	i2u587_40
 17460  000040                     i2u587_41:
 17461  000040  EF31  F000         	goto	i2l666
 17462  000044                     i2u587_40:
 17463  000044                     
 17464                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
 17465  000044  D802               	call	i2u588_48
 17466  000046  EF2F  F000         	goto	i2u588_49
 17467  00004A                     i2u588_48:
 17468  00004A  0005               	push	
 17469  00004C  6EFA               	movwf	pclath,c
 17470  00004E  0100               	movlb	0	; () banked
 17471  000050  51FD               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 17472  000052  6EFD               	movwf	tosl,c
 17473  000054  51FE               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 17474  000056  6EFE               	movwf	tosh,c
 17475  000058  6AFF               	clrf	tosu,c
 17476  00005A  50FA               	movf	pclath,w,c
 17477  00005C  0012               	return		;indir
 17478  00005E                     i2u588_49:
 17479                           
 17480                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 17481  00005E  EF4E  F000         	goto	i2l671
 17482  000062                     i2l666:
 17483  000062  AA9D               	btfss	157,5,c	;volatile
 17484  000064  EF36  F000         	goto	i2u589_41
 17485  000068  EF38  F000         	goto	i2u589_40
 17486  00006C                     i2u589_41:
 17487  00006C  EF4E  F000         	goto	i2l667
 17488  000070                     i2u589_40:
 17489  000070  AA9E               	btfss	158,5,c	;volatile
 17490  000072  EF3D  F000         	goto	i2u590_41
 17491  000076  EF3F  F000         	goto	i2u590_40
 17492  00007A                     i2u590_41:
 17493  00007A  EF4E  F000         	goto	i2l667
 17494  00007E                     i2u590_40:
 17495  00007E                     
 17496                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
 17497  00007E  D802               	call	i2u591_48
 17498  000080  EF4C  F000         	goto	i2u591_49
 17499  000084                     i2u591_48:
 17500  000084  0005               	push	
 17501  000086  6EFA               	movwf	pclath,c
 17502  000088  0101               	movlb	1	; () banked
 17503  00008A  5176               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 17504  00008C  6EFD               	movwf	tosl,c
 17505  00008E  5177               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 17506  000090  6EFE               	movwf	tosh,c
 17507  000092  6AFF               	clrf	tosu,c
 17508  000094  50FA               	movf	pclath,w,c
 17509  000096  0012               	return		;indir
 17510  000098                     i2u591_49:
 17511                           
 17512                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 17513  000098  EF4E  F000         	goto	i2l671
 17514  00009C                     i2l667:
 17515  00009C                     i2l671:
 17516  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 17517  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 17518  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17519  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17520  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17521  0000AE  0011               	retfie		f
 17522  0000B0                     __end_of_INTERRUPT_InterruptManager:
 17523                           	callstack 0
 17524                           
 17525 ;; *************** function _EUSART_Transmit_ISR *****************
 17526 ;; Defined at:
 17527 ;;		line 206 in file "mcc_generated_files/eusart.c"
 17528 ;; Parameters:    Size  Location     Type
 17529 ;;		None
 17530 ;; Auto vars:     Size  Location     Type
 17531 ;;		None
 17532 ;; Return value:  Size  Location     Type
 17533 ;;                  1    wreg      void 
 17534 ;; Registers used:
 17535 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17536 ;; Tracked objects:
 17537 ;;		On entry : 0/0
 17538 ;;		On exit  : 0/0
 17539 ;;		Unchanged: 0/0
 17540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17545 ;;Total ram usage:        0 bytes
 17546 ;; Hardware stack levels used: 1
 17547 ;; This function calls:
 17548 ;;		Nothing
 17549 ;; This function is called by:
 17550 ;;		_EUSART_Initialize
 17551 ;;		_INTERRUPT_InterruptManager
 17552 ;; This function uses a non-reentrant model
 17553 ;;
 17554                           
 17555                           	psect	text101
 17556  006488                     __ptext101:
 17557                           	callstack 0
 17558  006488                     _EUSART_Transmit_ISR:
 17559                           	callstack 19
 17560  006488                     
 17561                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 17562  006488  0E08               	movlw	8
 17563  00648A  0100               	movlb	0	; () banked
 17564  00648C  61FF               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 17565  00648E  EF4B  F032         	goto	i2u571_41
 17566  006492  EF4D  F032         	goto	i2u571_40
 17567  006496                     i2u571_41:
 17568  006496  EF63  F032         	goto	i2l607
 17569  00649A                     i2u571_40:
 17570  00649A                     
 17571                           ; BSR set to: 0
 17572                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 17573  00649A  0E08               	movlw	low _eusartTxBuffer
 17574  00649C  2459               	addwf	_eusartTxTail^0,w,c	;volatile
 17575  00649E  6ED9               	movwf	fsr2l,c
 17576  0064A0  6ADA               	clrf	fsr2h,c
 17577  0064A2  0E01               	movlw	high _eusartTxBuffer
 17578  0064A4  22DA               	addwfc	fsr2h,f,c
 17579  0064A6  50DF               	movf	indf2,w,c
 17580  0064A8  6EAD               	movwf	173,c	;volatile
 17581  0064AA                     
 17582                           ; BSR set to: 0
 17583  0064AA  2A59               	incf	_eusartTxTail^0,f,c	;volatile
 17584  0064AC                     
 17585                           ; BSR set to: 0
 17586                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 17587  0064AC  0E07               	movlw	7
 17588  0064AE  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
 17589  0064B0  EF5C  F032         	goto	i2u572_41
 17590  0064B4  EF5E  F032         	goto	i2u572_40
 17591  0064B8                     i2u572_41:
 17592  0064B8  EF60  F032         	goto	i2l6594
 17593  0064BC                     i2u572_40:
 17594  0064BC                     
 17595                           ; BSR set to: 0
 17596                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 17597  0064BC  0E00               	movlw	0
 17598  0064BE  6E59               	movwf	_eusartTxTail^0,c	;volatile
 17599  0064C0                     i2l6594:
 17600                           
 17601                           ; BSR set to: 0
 17602                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 17603  0064C0  2BFF               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 17604                           
 17605                           ;mcc_generated_files/eusart.c: 218:     }
 17606  0064C2  EF64  F032         	goto	i2l610
 17607  0064C6                     i2l607:
 17608                           
 17609                           ; BSR set to: 0
 17610                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
 17611  0064C6  989D               	bcf	157,4,c	;volatile
 17612  0064C8                     i2l610:
 17613                           
 17614                           ; BSR set to: 0
 17615  0064C8  0012               	return		;funcret
 17616  0064CA                     __end_of_EUSART_Transmit_ISR:
 17617                           	callstack 0
 17618                           
 17619 ;; *************** function _EUSART_Receive_ISR *****************
 17620 ;; Defined at:
 17621 ;;		line 225 in file "mcc_generated_files/eusart.c"
 17622 ;; Parameters:    Size  Location     Type
 17623 ;;		None
 17624 ;; Auto vars:     Size  Location     Type
 17625 ;;		None
 17626 ;; Return value:  Size  Location     Type
 17627 ;;                  1    wreg      void 
 17628 ;; Registers used:
 17629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 17630 ;; Tracked objects:
 17631 ;;		On entry : 0/0
 17632 ;;		On exit  : 0/0
 17633 ;;		Unchanged: 0/0
 17634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17639 ;;Total ram usage:        0 bytes
 17640 ;; Hardware stack levels used: 1
 17641 ;; Hardware stack levels required when called: 2
 17642 ;; This function calls:
 17643 ;;		Absolute function
 17644 ;;		_EUSART_DefaultErrorHandler
 17645 ;;		_EUSART_DefaultFramingErrorHandler
 17646 ;;		_EUSART_DefaultOverrunErrorHandler
 17647 ;;		_EUSART_RxDataHandler
 17648 ;; This function is called by:
 17649 ;;		_EUSART_Initialize
 17650 ;;		_INTERRUPT_InterruptManager
 17651 ;; This function uses a non-reentrant model
 17652 ;;
 17653                           
 17654                           	psect	text102
 17655  0059C0                     __ptext102:
 17656                           	callstack 0
 17657  0059C0                     _EUSART_Receive_ISR:
 17658                           	callstack 17
 17659  0059C0                     
 17660                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 17661  0059C0  0E84               	movlw	low _eusartRxStatusBuffer
 17662  0059C2  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 17663  0059C4  6ED9               	movwf	fsr2l,c
 17664  0059C6  6ADA               	clrf	fsr2h,c
 17665  0059C8  0E00               	movlw	high _eusartRxStatusBuffer
 17666  0059CA  22DA               	addwfc	fsr2h,f,c
 17667  0059CC  0E00               	movlw	0
 17668  0059CE  6EDF               	movwf	indf2,c
 17669  0059D0                     
 17670                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 17671  0059D0  A4AB               	btfss	171,2,c	;volatile
 17672  0059D2  EFED  F02C         	goto	i2u573_41
 17673  0059D6  EFEF  F02C         	goto	i2u573_40
 17674  0059DA                     i2u573_41:
 17675  0059DA  EF04  F02D         	goto	i2l6604
 17676  0059DE                     i2u573_40:
 17677  0059DE                     
 17678                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 17679  0059DE  0E84               	movlw	low _eusartRxStatusBuffer
 17680  0059E0  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 17681  0059E2  6ED9               	movwf	fsr2l,c
 17682  0059E4  6ADA               	clrf	fsr2h,c
 17683  0059E6  0E00               	movlw	high _eusartRxStatusBuffer
 17684  0059E8  22DA               	addwfc	fsr2h,f,c
 17685  0059EA  0100               	movlb	0	; () banked
 17686  0059EC  82DF               	bsf	indf2,1,c
 17687  0059EE                     
 17688                           ; BSR set to: 0
 17689                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 17690  0059EE  D802               	call	i2u574_48
 17691  0059F0  EF04  F02D         	goto	i2u574_49
 17692  0059F4                     i2u574_48:
 17693  0059F4  0005               	push	
 17694  0059F6  6EFA               	movwf	pclath,c
 17695  0059F8  0101               	movlb	1	; () banked
 17696  0059FA  5174               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 17697  0059FC  6EFD               	movwf	tosl,c
 17698  0059FE  5175               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 17699  005A00  6EFE               	movwf	tosh,c
 17700  005A02  6AFF               	clrf	tosu,c
 17701  005A04  50FA               	movf	pclath,w,c
 17702  005A06  0012               	return		;indir
 17703  005A08                     i2u574_49:
 17704  005A08                     i2l6604:
 17705                           
 17706                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 17707  005A08  A2AB               	btfss	171,1,c	;volatile
 17708  005A0A  EF09  F02D         	goto	i2u575_41
 17709  005A0E  EF0B  F02D         	goto	i2u575_40
 17710  005A12                     i2u575_41:
 17711  005A12  EF20  F02D         	goto	i2l6610
 17712  005A16                     i2u575_40:
 17713  005A16                     
 17714                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 17715  005A16  0E84               	movlw	low _eusartRxStatusBuffer
 17716  005A18  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 17717  005A1A  6ED9               	movwf	fsr2l,c
 17718  005A1C  6ADA               	clrf	fsr2h,c
 17719  005A1E  0E00               	movlw	high _eusartRxStatusBuffer
 17720  005A20  22DA               	addwfc	fsr2h,f,c
 17721  005A22  0100               	movlb	0	; () banked
 17722  005A24  84DF               	bsf	indf2,2,c
 17723  005A26                     
 17724                           ; BSR set to: 0
 17725                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 17726  005A26  D802               	call	i2u576_48
 17727  005A28  EF20  F02D         	goto	i2u576_49
 17728  005A2C                     i2u576_48:
 17729  005A2C  0005               	push	
 17730  005A2E  6EFA               	movwf	pclath,c
 17731  005A30  0101               	movlb	1	; () banked
 17732  005A32  5172               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 17733  005A34  6EFD               	movwf	tosl,c
 17734  005A36  5173               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 17735  005A38  6EFE               	movwf	tosh,c
 17736  005A3A  6AFF               	clrf	tosu,c
 17737  005A3C  50FA               	movf	pclath,w,c
 17738  005A3E  0012               	return		;indir
 17739  005A40                     i2u576_49:
 17740  005A40                     i2l6610:
 17741                           
 17742                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 17743  005A40  0E84               	movlw	low _eusartRxStatusBuffer
 17744  005A42  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 17745  005A44  6ED9               	movwf	fsr2l,c
 17746  005A46  6ADA               	clrf	fsr2h,c
 17747  005A48  0E00               	movlw	high _eusartRxStatusBuffer
 17748  005A4A  22DA               	addwfc	fsr2h,f,c
 17749  005A4C  50DF               	movf	indf2,w,c
 17750  005A4E  B4D8               	btfsc	status,2,c
 17751  005A50  EF2C  F02D         	goto	i2u577_41
 17752  005A54  EF2E  F02D         	goto	i2u577_40
 17753  005A58                     i2u577_41:
 17754  005A58  EF3D  F02D         	goto	i2l6614
 17755  005A5C                     i2u577_40:
 17756  005A5C                     
 17757                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 17758  005A5C  D802               	call	i2u578_48
 17759  005A5E  EF3B  F02D         	goto	i2u578_49
 17760  005A62                     i2u578_48:
 17761  005A62  0005               	push	
 17762  005A64  6EFA               	movwf	pclath,c
 17763  005A66  0101               	movlb	1	; () banked
 17764  005A68  5170               	movf	_EUSART_ErrorHandler& (0+255),w,b
 17765  005A6A  6EFD               	movwf	tosl,c
 17766  005A6C  5171               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 17767  005A6E  6EFE               	movwf	tosh,c
 17768  005A70  6AFF               	clrf	tosu,c
 17769  005A72  50FA               	movf	pclath,w,c
 17770  005A74  0012               	return		;indir
 17771  005A76                     i2u578_49:
 17772                           
 17773                           ;mcc_generated_files/eusart.c: 242:     } else {
 17774  005A76  EF3F  F02D         	goto	i2l617
 17775  005A7A                     i2l6614:
 17776                           
 17777                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 17778  005A7A  ECA6  F033         	call	_EUSART_RxDataHandler	;wreg free
 17779  005A7E                     i2l617:
 17780  005A7E  0012               	return		;funcret
 17781  005A80                     __end_of_EUSART_Receive_ISR:
 17782                           	callstack 0
 17783                           
 17784 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 17785 ;; Defined at:
 17786 ;;		line 261 in file "mcc_generated_files/eusart.c"
 17787 ;; Parameters:    Size  Location     Type
 17788 ;;		None
 17789 ;; Auto vars:     Size  Location     Type
 17790 ;;		None
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  1    wreg      void 
 17793 ;; Registers used:
 17794 ;;		None
 17795 ;; Tracked objects:
 17796 ;;		On entry : 0/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17804 ;;Total ram usage:        0 bytes
 17805 ;; Hardware stack levels used: 1
 17806 ;; This function calls:
 17807 ;;		Nothing
 17808 ;; This function is called by:
 17809 ;;		_EUSART_Initialize
 17810 ;;		_EUSART_Receive_ISR
 17811 ;; This function uses a non-reentrant model
 17812 ;;
 17813                           
 17814                           	psect	text103
 17815  006976                     __ptext103:
 17816                           	callstack 0
 17817  006976                     _EUSART_DefaultOverrunErrorHandler:
 17818                           	callstack 18
 17819  006976                     
 17820                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 17821  006976  98AB               	bcf	171,4,c	;volatile
 17822                           
 17823                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 17824  006978  88AB               	bsf	171,4,c	;volatile
 17825  00697A  0012               	return		;funcret
 17826  00697C                     __end_of_EUSART_DefaultOverrunErrorHandler:
 17827                           	callstack 0
 17828                           
 17829 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 17830 ;; Defined at:
 17831 ;;		line 259 in file "mcc_generated_files/eusart.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;		None
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;		None
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  1    wreg      void 
 17838 ;; Registers used:
 17839 ;;		None
 17840 ;; Tracked objects:
 17841 ;;		On entry : 0/0
 17842 ;;		On exit  : 0/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17849 ;;Total ram usage:        0 bytes
 17850 ;; Hardware stack levels used: 1
 17851 ;; This function calls:
 17852 ;;		Nothing
 17853 ;; This function is called by:
 17854 ;;		_EUSART_Initialize
 17855 ;;		_EUSART_Receive_ISR
 17856 ;; This function uses a non-reentrant model
 17857 ;;
 17858                           
 17859                           	psect	text104
 17860  0069B2                     __ptext104:
 17861                           	callstack 0
 17862  0069B2                     _EUSART_DefaultFramingErrorHandler:
 17863                           	callstack 18
 17864  0069B2  0012               	return		;funcret
 17865  0069B4                     __end_of_EUSART_DefaultFramingErrorHandler:
 17866                           	callstack 0
 17867                           
 17868 ;; *************** function _EUSART_DefaultErrorHandler *****************
 17869 ;; Defined at:
 17870 ;;		line 269 in file "mcc_generated_files/eusart.c"
 17871 ;; Parameters:    Size  Location     Type
 17872 ;;		None
 17873 ;; Auto vars:     Size  Location     Type
 17874 ;;		None
 17875 ;; Return value:  Size  Location     Type
 17876 ;;                  1    wreg      void 
 17877 ;; Registers used:
 17878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17879 ;; Tracked objects:
 17880 ;;		On entry : 0/0
 17881 ;;		On exit  : 0/0
 17882 ;;		Unchanged: 0/0
 17883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17888 ;;Total ram usage:        0 bytes
 17889 ;; Hardware stack levels used: 1
 17890 ;; Hardware stack levels required when called: 1
 17891 ;; This function calls:
 17892 ;;		_EUSART_RxDataHandler
 17893 ;; This function is called by:
 17894 ;;		_EUSART_Initialize
 17895 ;;		_EUSART_Receive_ISR
 17896 ;; This function uses a non-reentrant model
 17897 ;;
 17898                           
 17899                           	psect	text105
 17900  00697C                     __ptext105:
 17901                           	callstack 0
 17902  00697C                     _EUSART_DefaultErrorHandler:
 17903                           	callstack 17
 17904  00697C                     
 17905                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 17906  00697C  ECA6  F033         	call	_EUSART_RxDataHandler	;wreg free
 17907  006980  0012               	return		;funcret
 17908  006982                     __end_of_EUSART_DefaultErrorHandler:
 17909                           	callstack 0
 17910                           
 17911 ;; *************** function _EUSART_RxDataHandler *****************
 17912 ;; Defined at:
 17913 ;;		line 249 in file "mcc_generated_files/eusart.c"
 17914 ;; Parameters:    Size  Location     Type
 17915 ;;		None
 17916 ;; Auto vars:     Size  Location     Type
 17917 ;;		None
 17918 ;; Return value:  Size  Location     Type
 17919 ;;                  1    wreg      void 
 17920 ;; Registers used:
 17921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17922 ;; Tracked objects:
 17923 ;;		On entry : 0/0
 17924 ;;		On exit  : 0/0
 17925 ;;		Unchanged: 0/0
 17926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17931 ;;Total ram usage:        0 bytes
 17932 ;; Hardware stack levels used: 1
 17933 ;; This function calls:
 17934 ;;		Nothing
 17935 ;; This function is called by:
 17936 ;;		_EUSART_Receive_ISR
 17937 ;;		_EUSART_DefaultErrorHandler
 17938 ;; This function uses a non-reentrant model
 17939 ;;
 17940                           
 17941                           	psect	text106
 17942  00674C                     __ptext106:
 17943                           	callstack 0
 17944  00674C                     _EUSART_RxDataHandler:
 17945                           	callstack 18
 17946  00674C                     
 17947                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 17948  00674C  0E00               	movlw	low _eusartRxBuffer
 17949  00674E  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 17950  006750  6ED9               	movwf	fsr2l,c
 17951  006752  6ADA               	clrf	fsr2h,c
 17952  006754  0E01               	movlw	high _eusartRxBuffer
 17953  006756  22DA               	addwfc	fsr2h,f,c
 17954  006758  CFAE FFDF          	movff	4014,indf2	;volatile
 17955  00675C  2A58               	incf	_eusartRxHead^0,f,c	;volatile
 17956  00675E                     
 17957                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 17958  00675E  0E07               	movlw	7
 17959  006760  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
 17960  006762  EFB5  F033         	goto	i2u533_41
 17961  006766  EFB7  F033         	goto	i2u533_40
 17962  00676A                     i2u533_41:
 17963  00676A  EFB9  F033         	goto	i2l6288
 17964  00676E                     i2u533_40:
 17965  00676E                     
 17966                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 17967  00676E  0E00               	movlw	0
 17968  006770  6E58               	movwf	_eusartRxHead^0,c	;volatile
 17969  006772                     i2l6288:
 17970                           
 17971                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 17972  006772  2A56               	incf	_eusartRxCount^0,f,c	;volatile
 17973  006774  0012               	return		;funcret
 17974  006776                     __end_of_EUSART_RxDataHandler:
 17975                           	callstack 0
 17976                           
 17977                           	psect	text107
 17978  000000                     __ptext107:
 17979                           	callstack 0
 17980  000000                     
 17981                           	psect	rparam
 17982  0000                     
 17983                           	psect	temp
 17984  00005B                     btemp:
 17985                           	callstack 0
 17986  00005B                     	ds	1
 17987  0000                     int$flags	set	btemp
 17988  0000                     wtemp8	set	btemp+1
 17989  0000                     ttemp5	set	btemp+1
 17990  0000                     ttemp6	set	btemp+4
 17991  0000                     ttemp7	set	btemp+8
 17992                           
 17993                           	psect	idloc
 17994                           
 17995                           ;Config register IDLOC0 @ 0x200000
 17996                           ;	unspecified, using default values
 17997  200000                     	org	2097152
 17998  200000  FF                 	db	255
 17999                           
 18000                           ;Config register IDLOC1 @ 0x200001
 18001                           ;	unspecified, using default values
 18002  200001                     	org	2097153
 18003  200001  FF                 	db	255
 18004                           
 18005                           ;Config register IDLOC2 @ 0x200002
 18006                           ;	unspecified, using default values
 18007  200002                     	org	2097154
 18008  200002  FF                 	db	255
 18009                           
 18010                           ;Config register IDLOC3 @ 0x200003
 18011                           ;	unspecified, using default values
 18012  200003                     	org	2097155
 18013  200003  FF                 	db	255
 18014                           
 18015                           ;Config register IDLOC4 @ 0x200004
 18016                           ;	unspecified, using default values
 18017  200004                     	org	2097156
 18018  200004  FF                 	db	255
 18019                           
 18020                           ;Config register IDLOC5 @ 0x200005
 18021                           ;	unspecified, using default values
 18022  200005                     	org	2097157
 18023  200005  FF                 	db	255
 18024                           
 18025                           ;Config register IDLOC6 @ 0x200006
 18026                           ;	unspecified, using default values
 18027  200006                     	org	2097158
 18028  200006  FF                 	db	255
 18029                           
 18030                           ;Config register IDLOC7 @ 0x200007
 18031                           ;	unspecified, using default values
 18032  200007                     	org	2097159
 18033  200007  FF                 	db	255
 18034                           
 18035                           	psect	config
 18036                           
 18037                           ; Padding undefined space
 18038  300000                     	org	3145728
 18039  300000  FF                 	db	255
 18040                           
 18041                           ;Config register CONFIG1H @ 0x300001
 18042                           ;	Oscillator Selection bits
 18043                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 18044                           ;	Fail-Safe Clock Monitor Enable bit
 18045                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 18046                           ;	Internal/External Oscillator Switchover bit
 18047                           ;	IESO = OFF, Oscillator Switchover mode disabled
 18048  300001                     	org	3145729
 18049  300001  08                 	db	8
 18050                           
 18051                           ;Config register CONFIG2L @ 0x300002
 18052                           ;	Power-up Timer Enable bit
 18053                           ;	PWRT = OFF, PWRT disabled
 18054                           ;	Brown-out Reset Enable bits
 18055                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 18056                           ;	Brown Out Reset Voltage bits
 18057                           ;	BORV = 18, VBOR set to 1.8 V nominal
 18058  300002                     	org	3145730
 18059  300002  1F                 	db	31
 18060                           
 18061                           ;Config register CONFIG2H @ 0x300003
 18062                           ;	Watchdog Timer Enable bit
 18063                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 18064                           ;	Watchdog Timer Postscale Select bits
 18065                           ;	WDTPS = 32768, 1:32768
 18066  300003                     	org	3145731
 18067  300003  1E                 	db	30
 18068                           
 18069                           ; Padding undefined space
 18070  300004                     	org	3145732
 18071  300004  FF                 	db	255
 18072                           
 18073                           ;Config register CONFIG3H @ 0x300005
 18074                           ;	CCP2 MUX bit
 18075                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 18076                           ;	PORTB A/D Enable bit
 18077                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 18078                           ;	Low-Power Timer1 Oscillator Enable bit
 18079                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 18080                           ;	HFINTOSC Fast Start-up
 18081                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 18082                           ;	MCLR Pin Enable bit
 18083                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 18084  300005                     	org	3145733
 18085  300005  0B                 	db	11
 18086                           
 18087                           ;Config register CONFIG4L @ 0x300006
 18088                           ;	Stack Full/Underflow Reset Enable bit
 18089                           ;	STVREN = ON, Stack full/underflow will cause Reset
 18090                           ;	Single-Supply ICSP Enable bit
 18091                           ;	LVP = OFF, Single-Supply ICSP disabled
 18092                           ;	Extended Instruction Set Enable bit
 18093                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 18094                           ;	Background Debugger Enable bit
 18095                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 18096  300006                     	org	3145734
 18097  300006  81                 	db	129
 18098                           
 18099                           ; Padding undefined space
 18100  300007                     	org	3145735
 18101  300007  FF                 	db	255
 18102                           
 18103                           ;Config register CONFIG5L @ 0x300008
 18104                           ;	Code Protection Block 0
 18105                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 18106                           ;	Code Protection Block 1
 18107                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 18108                           ;	Code Protection Block 2
 18109                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 18110                           ;	Code Protection Block 3
 18111                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 18112  300008                     	org	3145736
 18113  300008  0F                 	db	15
 18114                           
 18115                           ;Config register CONFIG5H @ 0x300009
 18116                           ;	Boot Block Code Protection bit
 18117                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 18118                           ;	Data EEPROM Code Protection bit
 18119                           ;	CPD = OFF, Data EEPROM not code-protected
 18120  300009                     	org	3145737
 18121  300009  C0                 	db	192
 18122                           
 18123                           ;Config register CONFIG6L @ 0x30000A
 18124                           ;	Write Protection Block 0
 18125                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 18126                           ;	Write Protection Block 1
 18127                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 18128                           ;	Write Protection Block 2
 18129                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 18130                           ;	Write Protection Block 3
 18131                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 18132  30000A                     	org	3145738
 18133  30000A  0F                 	db	15
 18134                           
 18135                           ;Config register CONFIG6H @ 0x30000B
 18136                           ;	Configuration Register Write Protection bit
 18137                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 18138                           ;	Boot Block Write Protection bit
 18139                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 18140                           ;	Data EEPROM Write Protection bit
 18141                           ;	WRTD = OFF, Data EEPROM not write-protected
 18142  30000B                     	org	3145739
 18143  30000B  E0                 	db	224
 18144                           
 18145                           ;Config register CONFIG7L @ 0x30000C
 18146                           ;	Table Read Protection Block 0
 18147                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 18148                           ;	Table Read Protection Block 1
 18149                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 18150                           ;	Table Read Protection Block 2
 18151                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 18152                           ;	Table Read Protection Block 3
 18153                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 18154  30000C                     	org	3145740
 18155  30000C  0F                 	db	15
 18156                           
 18157                           ;Config register CONFIG7H @ 0x30000D
 18158                           ;	Boot Block Table Read Protection bit
 18159                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 18160  30000D                     	org	3145741
 18161  30000D  40                 	db	64
 18162                           tosu	equ	0xFFF
 18163                           tosh	equ	0xFFE
 18164                           tosl	equ	0xFFD
 18165                           stkptr	equ	0xFFC
 18166                           pclatu	equ	0xFFB
 18167                           pclath	equ	0xFFA
 18168                           pcl	equ	0xFF9
 18169                           tblptru	equ	0xFF8
 18170                           tblptrh	equ	0xFF7
 18171                           tblptrl	equ	0xFF6
 18172                           tablat	equ	0xFF5
 18173                           prodh	equ	0xFF4
 18174                           prodl	equ	0xFF3
 18175                           indf0	equ	0xFEF
 18176                           postinc0	equ	0xFEE
 18177                           postdec0	equ	0xFED
 18178                           preinc0	equ	0xFEC
 18179                           plusw0	equ	0xFEB
 18180                           fsr0h	equ	0xFEA
 18181                           fsr0l	equ	0xFE9
 18182                           wreg	equ	0xFE8
 18183                           indf1	equ	0xFE7
 18184                           postinc1	equ	0xFE6
 18185                           postdec1	equ	0xFE5
 18186                           preinc1	equ	0xFE4
 18187                           plusw1	equ	0xFE3
 18188                           fsr1h	equ	0xFE2
 18189                           fsr1l	equ	0xFE1
 18190                           bsr	equ	0xFE0
 18191                           indf2	equ	0xFDF
 18192                           postinc2	equ	0xFDE
 18193                           postdec2	equ	0xFDD
 18194                           preinc2	equ	0xFDC
 18195                           plusw2	equ	0xFDB
 18196                           fsr2h	equ	0xFDA
 18197                           fsr2l	equ	0xFD9
 18198                           status	equ	0xFD8

Data Sizes:
    Strings     76
    Constant    32
    Data        0
    BSS         202
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     72     160
    BANK1           256      4     124
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2584$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2590$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2596$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2602$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2601	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2596	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2595	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2590	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2589	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2584	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2583	const PTR FTN()enum E3103 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2045_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[28]), STR_1(CODE[29]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[28]), STR_1(CODE[29]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[28]), STR_1(CODE[29]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[28]), STR_1(CODE[29]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 16
		 -> readBuffer(BANK1[16]), writeBuffer(BANK0[16]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 16
		 -> readBuffer(BANK1[16]), writeBuffer(BANK0[16]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 16
		 -> readBuffer(BANK1[16]), writeBuffer(BANK0[16]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3103[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(2) Largest target is 16
		 -> readBuffer(BANK1[16]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 16
		 -> writeBuffer(BANK0[16]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _VL53L0X_SetAdd->_I2C_Write1ByteRegister
    _VL53L0X_Millimeter_GetValue->_I2C_Read2ByteRegister
    _VL53L0X_Init->_I2C_Read2ByteRegister
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1245747
                                              2 BANK1      2     2      0
                  _SYSTEM_Initialize
                       _VL53L0X_Init
        _VL53L0X_Millimeter_GetValue
                     _VL53L0X_SetAdd
                            ___fldiv
                             ___flge
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   39385
                                             62 BANK0     10     0     10
                                              0 BANK1      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   39106
                                             83 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   38579
                                             61 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29900
                                             49 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1166
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2903
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3385
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2282
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _VL53L0X_SetAdd                                       4     4      0  135130
                                             24 COMRAM     1     1      0
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _VL53L0X_Millimeter_GetValue                         14    10      4  533963
                                             29 COMRAM    14    10      4
              _I2C_Read1ByteRegister
              _I2C_Read2ByteRegister
                     _I2C_ReadNBytes
             _I2C_Write1ByteRegister
                    _I2C_WriteNBytes
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _VL53L0X_Init                                         4     4      0  532710
                                             29 COMRAM     4     4      0
              _I2C_Read1ByteRegister
              _I2C_Read2ByteRegister
                     _I2C_ReadNBytes
             _I2C_Write1ByteRegister
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (2) _I2C_WriteNBytes                                      5     1      4   95990
                                             21 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Write1ByteRegister                               3     1      2  135108
                                             21 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadNBytes                                       5     1      4   92904
                                             21 COMRAM     5     1      4
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterRead                                       0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (2) _I2C_Read2ByteRegister                                8     6      2   97381
                                             21 COMRAM     8     6      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1  111115
                                             21 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _VL53L0X_Init
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
               _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                 _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
     _I2C_Read2ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
     _I2C_ReadNBytes
       _I2C_Close
       _I2C_MasterRead
         _I2C_MasterOperation
       _I2C_Open
       _I2C_SetBuffer
     _I2C_Write1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
     _I2C_WriteNBytes
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
   _VL53L0X_Millimeter_GetValue
     _I2C_Read1ByteRegister
     _I2C_Read2ByteRegister
     _I2C_ReadNBytes
     _I2C_Write1ByteRegister
     _I2C_WriteNBytes
     ___xxtofl
   _VL53L0X_SetAdd
     _I2C_Write1ByteRegister
   ___fldiv
   ___flge
     ___flmul (ARG)
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      7C       7       48.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     176      32        0.0%
DATA                 0      0     176       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 18 20:47:58 2021

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                                 ___fldiv@aexp 001D                                   ___fldiv@bexp 001C  
                                 ___fldiv@sign 0015                        ??_I2C_DO_SEND_ADR_WRITE 0006  
                                  _SSPSTATbits 000FC7                                             l33 6008  
                                           l42 5E28                                             l51 60E6  
                                           l90 66C8                                             l93 669C  
                                           l69 62C8                                             l78 63FE  
                                           l96 6670                                             l99 66F4  
                                 ___awdiv@sign 000A                            ___wmul@multiplicand 0007  
                 ?_VL53L0X_Millimeter_GetValue 001E                            __size_of_I2C_Poller 001E  
                        ??_I2C_DO_SEND_RESTART 0005                   __size_of_I2C_MasterOperation 0044  
                                          l102 6508                                            l213 5DA2  
                                          l223 6486                                            l312 5EA4  
                                          l209 686C                                            l217 6720  
                __size_of_I2C_MasterSendTxData 0008                                            l402 6998  
                                          l306 68C6                                            l330 6960  
                                          l226 6920                                            l411 6974  
                                          l236 67BE                                            l405 6858  
                                          l333 6958                                            l229 6928  
                                          l245 6816                                            l342 6940  
                                          l262 67FE                                            l239 682E  
                                          l351 68BA                                            l256 5F1E  
                                          l408 696E                                            l432 6984  
                                          l272 68AE                                            l336 6950  
                                          l281 59BE                                            l345 6938  
                                          l426 69A4                                            l266 6078  
                                          l275 689E                                            l339 6948  
                                          l435 6880                                            l348 6930  
                                          l604 68DC                                            l429 69AC  
                                          l381 69A8                                            l365 6994  
                                          l269 68D2                                            l357 614C  
                                          l390 699C                                            l278 5986  
                                          l294 5C10                                            l295 5C7E  
                                          l439 688E                                            l456 6844  
                                          l368 6990                                            l384 6988  
                                          l633 690E                                            l642 68F0  
                                          l570 5F94                                            l378 67E0  
                                          l730 4CB6                                            l459 68E6  
                                          l387 6968                                            l636 6904  
                                          l660 69B0                                            l492 6618  
                                          l396 698C                                            l724 2C58  
                                          l645 68FA                                            l733 679A  
                                          l639 6918                                            l399 69A0  
                                          l727 687E                                            l594 62DE  
                                          l595 62F4                                            l598 6320  
                                          l964 58FA                                            l992 5BD8  
                                          l977 5B2E                                            l998 5550  
                       ??_EUSART_RxDataHandler 0001                                            _pad 5772  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 6880  
               ?_EUSART_SetFramingErrorHandler 0005                                   ___awmod@sign 000A  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                   ___flmul@aexp 0012  
                                 ___flmul@bexp 0017                   ??_I2C_SetAddressNackCallback 000E  
                                 ___flmul@sign 0011                                   ___flmul@temp 001C  
                                 ___flmul@prod 0018                         _I2C_Write1ByteRegister 607A  
                     ??_I2C_CallbackReturnStop 0010                                   _I2C_DO_RESET 68B0  
                                 ___fltol@exp1 000E                                           l1003 5596  
                                         l1030 5492                                           l1007 6578  
                      ??_rd2RegCompleteHandler 0010                                           l1303 63B8  
                                         l1320 4846                                           l1402 5014  
                                         l1315 4A22                                           l1411 674A  
                                         l1317 4882                                           l1261 3AEE  
                                         l1326 48C8                                           l1270 3DBE  
                                         l1262 3ADC                                           l1351 4688  
                                         l1263 3AA2                                           l1328 4940  
                                         l1329 492E                                           l1521 34B4  
                                         l1354 451A                                           l1347 4324  
                                         l1620 520E                                           l1364 464A  
                                         l1356 4592                                           l1452 57B8  
                                         l1357 4580                                           l1278 3C08  
                                         l1702 6208                                           l1391 507C  
                                         l1623 5216                                           l1287 3CD8  
                                         l1455 57FA                                           l5000 600E  
                                         l1288 3CC6                                           l1632 4E0C  
                                         l1457 5836                                           l5002 601E  
                                         l1395 4FB8                                           l1707 6210  
                                         l1475 38FE                                           l5004 6032  
                                         l1388 4F20                                           l1580 61A8  
                                         l1629 4EC8                                           l1653 6540  
                                         l1493 3074                                           l1581 61B0  
                                         l5006 6038                                           l1574 417C  
                                         l1639 65B0                                           l1647 6372  
                                         l1591 5694                                           l1567 425E  
                                         l1682 626E                                           l1668 5D14  
                                         l1676 6442                                           l1692 5770  
                                         l5232 699E                                           l5240 67EE  
                                         l6200 5D1C                                           l7000 1C14  
                                         l1688 65E6                                           l5234 67E2  
                                         l6210 5D36                                           l6202 5D2C  
                                         l7010 1C5A                                           l7002 1C22  
                                         l4700 699A                                           l5236 67E6  
                                         l6220 5D54                                           l6212 5D3A  
                                         l6204 5D30                                           l7100 207E  
                                         l7020 1CA0                                           l7012 1C68  
                                         l7004 1C30                                           l4702 6996  
                                         l5238 67EA                                           l6230 5D7C  
                                         l6222 5D5C                                           l6214 5D42  
                                         l6206 5D32                                           l7110 20C0  
                                         l7102 208C                                           l7030 1CE6  
                                         l7022 1CAE                                           l7014 1C76  
                                         l7006 1C3E                                           ?_pad 0017  
                                         l4704 6970                                           l4800 6932  
                                         l6240 5D9C                                           l6232 5D84  
                                         l6224 5D64                                           l6216 5D44  
                                         l6208 5D34                                           l6400 5DAE  
                                         l7200 24D8                                           l7120 20F2  
                                         l7112 20CA                                           l7104 209A  
                                         l7040 1D2C                                           l7032 1CF4  
                                         l7024 1CBC                                           l7016 1C84  
                                         l7008 1C4C                                           l4810 694E  
                                         l4802 6936                                           l6234 5D8C  
                                         l6226 5D6C                                           l6218 5D4C  
                                         l6242 5DA0                                           l6410 5E04  
                                         l6402 5DC4                                           l7210 26AC  
                                         l7202 24DC                                           l7130 2124  
                                         l7122 20FC                                           l7114 20D4  
                                         l7106 20A8                                           l7050 1D6E  
                                         l7042 1D3A                                           l7034 1D02  
                                         l7026 1CCA                                           l7018 1C92  
                                         l8002 4950                                           l8010 4998  
                                         l6260 671A                                           l6252 66F6  
                                         l4724 669E                                           l4732 6672  
                                         l4740 6646                                           l4820 698E  
                                         l4900 5C16                                           l6236 5D94  
                                         l6228 5D74                                           l6412 5E18  
                                         l6404 5DD8                                           l6420 6092  
                                         l7300 2A8E                                           l7220 26FE  
                                         l7212 26B2                                           l7204 24E0  
                                         l7140 215E                                           l7132 212E  
                                         l7124 2106                                           l7116 20DE  
                                         l7108 20B6                                           l7060 1DB8  
                                         l7052 1D78                                           l7044 1D44  
                                         l7036 1D10                                           l7028 1CD8  
                                         l6500 4EDC                                           l8020 4A02  
                                         l8012 49B2                                           l8004 495C  
                                         l8100 4420                                           l6270 68F2  
                                         l6262 671E                                           l6254 66FA  
                                         l4750 66DE                                           l4726 66B2  
                                         l4734 6686                                           l4742 665A  
                                         l4806 698A                                           l4814 6982  
                                         l4830 68CC                                           l4910 5C26  
                                         l6238 5D98                                           l6246 6800  
                                         l6406 5DEC                                           l6422 60A6  
                                         l6430 6272                                           l7310 2AC8  
                                         l7302 2A98                                           l7230 2740  
                                         l7222 270C                                           l7214 26C8  
                                         l7206 24E4                                           l7150 219C  
                                         l7142 2168                                           l7134 2138  
                                         l7126 2110                                           l7118 20E8  
                                         l7070 1FC0                                           l7062 1F9C  
                                         l7054 1D86                                           l7046 1D52  
                                         l7038 1D1E                                           l6510 4F5A  
                                         l6502 4EEA                                           l8022 4A10  
                                         l8014 49C8                                           l8006 496A  
                                         l8110 449E                                           l8102 4430  
                                         l6272 68E8                                           l6256 670A  
                                         l4752 66F2                                           l4728 66C6  
                                         l4736 669A                                           l4744 666E  
                                         l4760 6506                                           l4816 6992  
                                         l4832 68D0                                           l4840 68AC  
                                         l4904 5C1E                                           l4920 68C4  
                                         l4808 694A                                           l6248 6922  
                                         l6408 5E00                                           l6424 60BA  
                                         l6416 607C                                           l6440 62B4  
                                         l6432 6272                                           l7320 2B0A  
                                         l7312 2AD2                                           l7304 2AA2  
                                         l7240 2778                                           l7232 2752  
                                         l7224 271A                                           l7216 26DE  
                                         l7208 24E8                                           l7160 21D6  
                                         l7152 21A6                                           l7144 2176  
                                         l7136 2142                                           l7128 211A  
                                         l7080 1FF2                                           l7072 1FCA  
                                         l7064 1FA2                                           l7056 1D98  
                                         l7048 1D60                                           l6520 4FAE  
                                         l6512 4F62                                           l6504 4F30  
                                         l8200 58CC                                           l8024 4A16  
                                         l8016 49E2                                           l8008 4994  
                                         l8120 4518                                           l8112 44D4  
                                         l8104 444C                                           l8040 427C  
                                         l6274 6906                                           l4826 69AA  
                                         l5802 69A2                                           l6258 670E  
                                         l4690 6818                                           l4930 5E3A  
                                         l4770 695A                                           l5810 645A  
                                         l6266 691A                                           l6450 63EA  
                                         l6442 63BC                                           l6426 60CE  
                                         l6418 607C                                           l6434 6288  
                                         l7330 2B4C                                           l7322 2B14  
                                         l7314 2AE0                                           l7306 2AAC  
                                         l7250 294C                                           l7242 277C  
                                         l7234 2760                                           l7226 2728  
                                         l7218 26EC                                           l7170 240C  
                                         l7162 21E0                                           l7154 21B0  
                                         l7146 2184                                           l7138 2150  
                                         l7090 2034                                           l7082 2004  
                                         l7074 1FD4                                           l7066 1FA6  
                                         l7058 1DA6                                           l6530 5024  
                                         l6522 4FEA                                           l6514 4F6E  
                                         l6506 4F46                                           l8210 58F2  
                                         l8202 58CE                                           l8026 4A18  
                                         l8018 49FE                                           l8130 4578  
                                         l8122 452A                                           l8114 44E2  
                                         l8106 4458                                           l8050 42C2  
                                         l8042 428C                                           l8034 4260  
                                         l6276 68FC                                           l6452 685A  
                                         l6460 6600                                           l5804 69A6  
                                         l4692 679C                                           l4684 5EA8  
                                         l4748 66CA                                           l4756 64CA  
                                         l4764 6846                                           l4932 5E3E  
                                         l4924 5E2A                                           l4828 68C8  
                                         l4836 68A0                                           l4844 6890  
                                         l4860 591C                                           l4852 58FC  
                                         l4916 68BC                                           l4772 695E  
                                         l5820 647C                                           l5812 645C  
                                         l6380 5F98                                           l6444 63BC  
                                         l6428 60D2                                           l6436 629C  
                                         l7340 2B82                                           l7332 2B5A  
                                         l7324 2B22                                           l7316 2AEE  
                                         l7308 2ABA                                           l7260 299E  
                                         l7252 2952                                           l7244 2780  
                                         l7236 276E                                           l7228 2732  
                                         l7180 245E                                           l7172 2412  
                                         l7164 21EE                                           l7156 21BA  
                                         l7148 2192                                           l7092 2046  
                                         l7084 200E                                           l7076 1FDE  
                                         l7068 1FAA                                           l6700 133C  
                                         l6620 10BA                                           l6540 506C  
                                         l6532 5028                                           l6524 4FF6  
                                         l6516 4FA0                                           l8204 58D4  
                                         l8220 5A9A                                           l8140 45E6  
                                         l8124 4538                                           l8116 4500  
                                         l8108 4474                                           l8060 42EE  
                                         l8052 42C8                                           l8044 429C  
                                         l8036 426C                                           l6278 6910  
                                         l6470 5F20                                           l6454 686A  
                                         l6462 6602                                           l4694 67AC  
                                         l4686 5EBA                                           l4758 64F2  
                                         l4926 5E32                                           l4942 5E4C  
                                         l4838 68A4                                           l4846 6894  
                                         l4870 592C                                           l4918 68C0  
                                         l4782 6942                                           l4950 693E  
                                         l5822 6480                                           l5814 6460  
                                         l5806 6446                                           l6198 5D18  
                                         l6390 5FEE                                           l6382 5F9C  
                                         l6446 63D2                                           l6438 62B0  
                                         l7350 2BC4                                           l7342 2B90  
                                         l7334 2B64                                           l7326 2B30  
                                         l7318 2AFC                                           l7270 29E0  
                                         l7262 29AC                                           l7254 2968  
                                         l7246 2784                                           l7238 2774  
                                         l7190 24A0                                           l7182 246C  
                                         l7174 2428                                           l7166 221A  
                                         l7158 21C8                                           l7094 2054  
                                         l7086 2018                                           l7078 1FE8  
                                         l6710 1382                                           l6702 134A  
                                         l6630 111C                                           l6622 10D0  
                                         l6534 504C                                           l6526 5004  
                                         l6518 4FA2                                           l8206 58DA  
                                         l8230 5ACE                                           l8222 5A9E  
                                         l8214 5A80                                           l8150 464E  
                                         l8134 45A2                                           l8142 45EA  
                                         l8126 453C                                           l8118 450A  
                                         l8070 4344                                           l8062 42FE  
                                         l8054 42CE                                           l8046 42AC  
                                         l8038 427A                                           l8310 53F8  
                                         l8302 53B8                                           l6480 5F44  
                                         l6472 5F22                                           l6456 69AE  
                                         l6464 660C                                           l6560 6840  
                                         l6552 6830                                           l4696 67B4  
                                         l4688 5EEE                                           l4792 696A  
                                         l4768 6964                                           l4936 5E44  
                                         l4848 689C                                           l4872 598A  
                                         l4864 5924                                           l4856 5914  
                                         l4776 6952                                           l4784 6946  
                                         l5816 6470                                           l5824 6484  
                                         l5808 644A                                           l6392 5FF2  
                                         l6384 5FB2                                           l6448 63E6  
                                         l7360 2C06                                           l7352 2BD2  
                                         l7344 2B9E                                           l7336 2B6E  
                                         l7328 2B3E                                           l7280 2A2A  
                                         l7272 29F2                                           l7264 29BA  
                                         l7256 297E                                           l7248 2788  
                                         l7192 24B2                                           l7184 247A  
                                         l7176 243E                                           l7168 2230  
                                         l7096 2062                                           l7088 202A  
                                         l6800 1690                                           l6720 13C0  
                                         l6712 1390                                           l6704 1358  
                                         l6640 115E                                           l6632 112E  
                                         l6624 10E6                                           l6616 106E  
                                         l6536 505C                                           l6528 5022  
                                         l8208 58EA                                           l8240 5B08  
                                         l8232 5AD6                                           l8224 5AAC  
                                         l8216 5A84                                           l8160 4678  
                                         l8152 465E                                           l8144 4604  
                                         l8136 45AE                                           l8128 454A  
                                         l8080 4384                                           l8064 430E  
                                         l8056 42DC                                           l8048 42B2  
                                         l8320 5428                                           l8312 5406  
                                         l8304 53E2                                           l8400 4CD8  
                                         l6490 5F68                                           l6482 5F48  
                                         l6474 5F2E                                           l6466 6616  
                                         l6458 65E8                                           l6554 6834  
                                         l4698 67BC                                           l4874 599C  
                                         l4890 5BEE                                           l4778 6956  
                                         l4794 692A                                           l4954 68B0  
                                         l4970 60FC                                           l4962 60E8  
                                         l5818 6478                                           l6394 6006  
                                         l6386 5FC6                                           l7370 2C46  
                                         l7362 2C14                                           l7354 2BE0  
                                         l7346 2BA8                                           l7338 2B78  
                                         l7290 2A5C                                           l7282 2A34  
                                         l7274 2A00                                           l7266 29C8  
                                         l7258 298C                                           l7194 24C0  
                                         l7186 2488                                           l7178 244C  
                                         l7098 2070                                           l6810 16E8  
                                         l6802 169E                                           l6730 13FE  
                                         l6722 13CE                                           l6714 139A  
                                         l6706 1366                                           l6650 1198  
                                         l6642 1168                                           l6634 1140  
                                         l6626 10F8                                           l6618 10B4  
                                         l6538 506A                                           l9050 5140  
                                         l8170 5838                                           l8234 5AE4  
                                         l8242 5B0E                                           l8226 5AB4  
                                         l8218 5A92                                           l8250 5B30  
                                         l8154 466C                                           l8146 4618  
                                         l8138 45BC                                           l8090 43CE  
                                         l8082 4390                                           l8074 4358  
                                         l8066 4314                                           l8058 42DE  
                                         l8330 5452                                           l8322 5432  
                                         l8306 53E4                                           l8410 4DC0  
                                         l8402 4D2E                                           l6492 5F92  
                                         l6484 5F4C                                           l6476 5F3C  
                                         l6468 68DE                                           l6556 6838  
                                         l4788 6986                                           l4876 59B6  
                                         l4892 5C06                                           l4948 693A  
                                         l4796 692E                                           l4956 68B4  
                                         l9052 6136                                           l4964 60EC  
                                         l6388 5FDA                                           l7364 2C22  
                                         l7356 2BEA                                           l7348 2BB6  
                                         l7292 2A66                                           l7284 2A3E  
                                         l7276 2A0E                                           l7268 29D2  
                                         l7196 24CE                                           l7188 2492  
                                         l6900 1958                                           l6820 1738  
                                         l6812 16F6                                           l6804 16A8  
                                         l6740 1490                                           l6732 140C  
                                         l6724 13D8                                           l6716 13A8  
                                         l6708 1374                                           l6660 11DE  
                                         l6652 11A2                                           l6644 1172  
                                         l6636 114A                                           l6628 110A  
                                         l7380 4C0E                                           l7372 6870  
                                         l8180 5864                                           l8172 583C  
                                         l8244 5B1E                                           l8236 5AFA  
                                         l8228 5AC6                                           l8260 5BD0  
                                         l8252 5B5E                                           l8156 466E  
                                         l8148 4632                                           l8092 43DA  
                                         l8084 43A8                                           l8076 4364  
                                         l8068 4334                                           l7700 39B6  
                                         l8164 6374                                           l8332 5462  
                                         l8308 53F4                                           l8420 4EA8  
                                         l8412 4DFC                                           l8404 4D42  
                                         l8340 5772                                           l8500 2E72  
                                         l6486 5F50                                           l6478 5F40  
                                         l6558 683C                                           l4878 59BC  
                                         l9054 5C58                                           l4894 5C0A  
                                         l4886 5BDA                                           l4958 68B8  
                                         l4966 60F4                                           l6398 5DA6  
                                         l7366 2C28                                           l7358 2BF8  
                                         l7294 2A70                                           l7286 2A48  
                                         l7278 2A1C                                           l7198 24D4  
                                         l6910 199E                                           l6902 1966  
                                         l6830 1788                                           l6822 174E  
                                         l6814 1704                                           l6806 16BC  
                                         l6750 14E2                                           l6742 14A6  
                                         l6734 1416                                           l6726 13E6  
                                         l6718 13B2                                           l6670 1220  
                                         l6662 11EC                                           l6654 11B4  
                                         l6646 117C                                           l6638 1154  
                                         l7390 4C58                                           l7382 4C24  
                                         l7374 4A26                                           l8430 6322  
                                         l8190 5892                                           l8182 586C  
                                         l8174 584A                                           l8246 5B26  
                                         l8238 5B02                                           l8262 5BD6  
                                         l8254 5B6E                                           l8270 54D2  
                                         l8158 4674                                           l8094 43EA  
                                         l8086 43B4                                           l8078 436E  
                                         l7710 39F2                                           l7702 39C6  
                                         l8166 6384                                           l8334 5472  
                                         l8318 541E                                           l8422 4EB8  
                                         l8406 4D50                                           l8414 4E30  
                                         l8350 57C4                                           l8342 5782  
                                         l8510 2ED6                                           l8502 2E8A  
                                         l6488 5F5C                                           l9056 5960  
                                         l4888 5BE8                                           l4976 6104  
                                         l7368 2C2C                                           l7296 2A7A  
                                         l7288 2A52                                           l6920 19E4  
                                         l6912 19AC                                           l6904 1974  
                                         l6840 17DA                                           l6832 179E  
                                         l6824 175C                                           l6816 170E  
                                         l6808 16D2                                           l6760 1588  
                                         l6752 14F0                                           l6744 14BC  
                                         l6736 1424                                           l6728 13F0  
                                         l6680 12C0                                           l6672 122E  
                                         l6664 11FA                                           l6656 11BE  
                                         l6648 118E                                           l7392 4C66  
                                         l7384 4C32                                           l7376 4BF2  
                                         l8432 6326                                           l8192 589A  
                                         l8184 5870                                           l8176 5852  
                                         l8256 5B9C                                           l8280 553E  
                                         l8272 5500                                           l8096 43F6  
                                         l8088 43C0                                           l7800 3BF8  
                                         l7720 3A10                                           l7712 3A00  
                                         l7704 39C8                                           l8336 5482  
                                         l8328 5446                                           l8416 4E6C  
                                         l7640 6306                                           l7632 62CC  
                                         l8352 57D8                                           l8344 5796  
                                         l8600 3380                                           l8520 2FA0  
                                         l8504 2E94                                           l9058 5E7E  
                                         l5794 67C0                                           l7298 2A84  
                                         l6930 1A2A                                           l6922 19F2  
                                         l6914 19BA                                           l6906 1982  
                                         l6850 1820                                           l6842 17E8  
                                         l6834 17B4                                           l6826 176A  
                                         l6818 1722                                           l6770 15CA  
                                         l6762 1596                                           l6754 1556  
                                         l6746 14CA                                           l6738 148A  
                                         l6690 12FA                                           l6682 12C4  
                                         l6674 1234                                           l6666 1204  
                                         l6658 11D0                                           l6498 4ECC  
                                         l7394 4C70                                           l7386 4C3C  
                                         l7378 4BF8                                           l8426 657A  
                                         l8434 633A                                           l8194 58A8  
                                         l8186 5878                                           l8178 5856  
                                         l8258 5BAC                                           l8282 558E  
                                         l8274 5510                                           l8266 5494  
                                         l8098 4406                                           l8290 6558  
                                         l7810 3C4C                                           l7802 3C1E  
                                         l7730 3A24                                           l7722 3A14  
                                         l7714 3A04                                           l7706 39D0  
                                         l8370 562A                                           l8362 5598  
                                         l8418 4E80                                           l7642 6308  
                                         l7634 62CC                                           l7650 68D6  
                                         l8354 57DC                                           l8346 57A4  
                                         l8610 3430                                           l8602 3390  
                                         l8530 3022                                           l8522 2FD4  
                                         l8514 2F0C                                           l8450 2C8A  
                                         l8442 2C5A                                           l5796 67CE  
                                         l6940 1A70                                           l6932 1A38  
                                         l6924 1A00                                           l6916 19C8  
                                         l6908 1990                                           l6860 1866  
                                         l6852 182E                                           l6844 17F6  
                                         l6836 17C2                                           l6828 1774  
                                         l6780 1608                                           l6772 15D8  
                                         l6764 15A4                                           l6756 155C  
                                         l6748 14D8                                           l6692 1308  
                                         l6684 12C8                                           l6676 1238  
                                         l6668 1212                                           l7396 4C84  
                                         l7388 4C4A                                           l8436 6368  
                                         l8196 58AE                                           l8188 588A  
                                         l7900 46A4                                           l8284 5594  
                                         l8276 551E                                           l8268 54C2  
                                         l8292 6568                                           l7820 3C76  
                                         l7812 3C5A                                           l7804 3C2E  
                                         l7740 3A38                                           l7732 3A28  
                                         l7724 3A18                                           l7716 3A08  
                                         l7708 39E0                                           l8380 568C  
                                         l8364 55B8                                           l7644 6318  
                                         l7636 62EC                                           l7660 5CCC  
                                         l7652 5C80                                           l8356 580A  
                                         l8348 57B0                                           l8700 3778  
                                         l8620 34A0                                           l8612 3464  
                                         l8604 33A0                                           l8532 3034  
                                         l8540 3080                                           l8524 2FDC  
                                         l8516 2F40                                           l8508 2EBC  
                                         l8460 2CE0                                           l8452 2CAE  
                                         l8444 2C64                                           l4998 600A  
                                         l5798 67DE                                           l6950 1AB6  
                                         l6942 1A7E                                           l6934 1A46  
                                         l6926 1A0E                                           l6918 19D6  
                                         l6870 187C                                           l6862 186C  
                                         l6854 183C                                           l6846 1804  
                                         l6838 17D0                                           l6790 164A  
                                         l6782 1616                                           l6774 15E6  
                                         l6766 15AE                                           l6758 1572  
                                         l6694 1316                                           l6686 12DE  
                                         l6678 12BA                                           l7398 4CA6  
                                         l8438 636C                                           l8198 58C4  
                                         l7910 46D8                                           l7902 46A6  
                                         l8278 5530                                           l7830 3CA8  
                                         l7822 3C86                                           l7814 3C5C  
                                         l7750 3A8A                                           l7742 3A3C  
                                         l7734 3A2C                                           l7726 3A1C  
                                         l7718 3A0C                                           l7670 391A  
                                         l8366 55F6                                           l8374 5636  
                                         l7646 631C                                           l7638 62F6  
                                         l7662 5D02                                           l7654 5C92  
                                         l8358 581E                                           l8710 37D4  
                                         l8702 3784                                           l8630 3556  
                                         l8622 34AC                                           l8614 3478  
                                         l8606 33D4                                           l8550 30C0  
                                         l8534 3046                                           l8518 2F46  
                                         l8526 300E                                           l8470 2D0E  
                                         l8462 2CF2                                           l8454 2CB8  
                                         l8446 2C74                                           l6960 1AFC  
                                         l6952 1AC4                                           l6944 1A8C  
                                         l6936 1A54                                           l6928 1A1C  
                                         l6880 18CC                                           l6872 1880  
                                         l6864 1870                                           l6856 184A  
                                         l6848 1812                                           l6792 1658  
                                         l6784 1624                                           l6776 15F4  
                                         l6768 15BC                                           l6696 1324  
                                         l6688 12EC                                           l7920 470A  
                                         l7904 46B6                                           l7912 46E0  
                                         l8288 6542                                           l7840 3D02  
                                         l7832 3CBE                                           l7816 3C6A  
                                         l7808 3C42                                           l7824 3C88  
                                         l7760 3ACE                                           l7752 3A9A  
                                         l7736 3A30                                           l7728 3A20  
                                         l7744 3A40                                           l7680 394E  
                                         l7672 391C                                           l8296 538E  
                                         l8376 5648                                           l8368 561E  
                                         l7648 631E                                           l7656 5CA4  
                                         l8384 6212                                           l8392 61E8  
                                         l8720 381E                                           l8704 378A  
                                         l8712 37DA                                           l8640 359E  
                                         l8632 3568                                           l8624 34D0  
                                         l8608 342A                                           l8616 347C  
                                         l8560 311C                                           l8552 30F6  
                                         l8536 304E                                           l8528 301E  
                                         l8480 2D82                                           l8464 2CFE  
                                         l8472 2D14                                           l8456 2CC0  
                                         l8448 2C82                                           l8800 56DA  
                                         l6970 1B42                                           l6962 1B0A  
                                         l6954 1AD2                                           l6946 1A9A  
                                         l6938 1A62                                           l6890 1912  
                                         l6882 18DA                                           l6874 189A  
                                         l6866 1874                                           l6858 1858  
                                         l6794 1666                                           l6786 1632  
                                         l6778 15FE                                           l6698 1332  
                                         l7930 473E                                           l7922 470C  
                                         l7914 46F0                                           l7906 46C6  
                                         l7850 3D7E                                           l7842 3D3C  
                                         l7818 3C72                                           l7826 3C96  
                                         l7762 3AD0                                           l7754 3AB0  
                                         l7746 3A44                                           l7738 3A34  
                                         l7690 3980                                           l7674 392C  
                                         l7682 3956                                           l7666 3900  
                                         l8298 53A4                                           l7658 5CAE  
                                         l8386 6222                                           l8394 61FA  
                                         l8730 384E                                           l8722 382A  
                                         l8714 37EC                                           l8706 37B0  
                                         l8650 35D4                                           l8642 35AE  
                                         l8634 3576                                           l8626 3534  
                                         l8618 348C                                           l8570 3160  
                                         l8562 312E                                           l8554 30FE  
                                         l8546 3092                                           l8538 3068  
                                         l8482 2D9E                                           l8474 2D3A  
                                         l8490 2DE8                                           l8466 2D06  
                                         l8458 2CD2                                           l8802 56F2  
                                         l6980 1B88                                           l6972 1B50  
                                         l6964 1B18                                           l6956 1AE0  
                                         l6948 1AA8                                           l6892 1920  
                                         l6884 18E8                                           l6876 18A0  
                                         l6868 1878                                           l6796 1674  
                                         l6788 1640                                           l7940 4784  
                                         l7924 471C                                           l7932 4746  
                                         l7916 46F6                                           l7908 46D6  
                                         l7860 3D9E                                           l7852 3D82  
                                         l7836 3CE8                                           l7844 3D3E  
                                         l7828 3C9A                                           l7780 3B58  
                                         l7772 3B20                                           l7764 3ADA  
                                         l7756 3ABC                                           l7748 3A6E  
                                         l7692 3986                                           l7684 3966  
                                         l7676 393C                                           l7668 390C  
                                         l8388 61B2                                           l8740 38A8  
                                         l8724 3832                                           l8716 3806  
                                         l8708 37CC                                           l8660 3608  
                                         l8652 35D8                                           l8644 35B2  
                                         l8628 3544                                           l8636 357E  
                                         l8580 31AA                                           l8572 3178  
                                         l8564 313C                                           l8548 30A4  
                                         l8556 3102                                           l8492 2E0E  
                                         l8484 2DB6                                           l8468 2D0A  
                                         l8804 5710                                           l8820 3E0A  
                                         l8812 3DC0                                           l6990 1BCE  
                                         l6982 1B96                                           l6974 1B5E  
                                         l6966 1B26                                           l6958 1AEE  
                                         l6894 192E                                           l6886 18F6  
                                         l6878 18B6                                           l6798 1682  
                                         l8750 507E                                           l7950 47AC  
                                         l7942 4788                                           l7934 4756  
                                         l7926 472C                                           l7918 46FC  
                                         l7862 3DAC                                           l7854 3D90  
                                         l7846 3D4E                                           l7838 3CF4  
                                         l7782 3B5C                                           l7774 3B30  
                                         l7766 3AFC                                           l7790 3B7C  
                                         l7758 3AC0                                           l7694 3994  
                                         l7686 396C                                           l7678 394C  
                                         l8398 4CB8                                           l7870 640C  
                                         l8742 38B8                                           l8734 3882  
                                         l8726 3842                                           l8718 380C  
                                         l8670 36A6                                           l8662 360C  
                                         l8654 35DE                                           l8646 35B8  
                                         l8638 3590                                           l8582 31BE  
                                         l8590 32B4                                           l8574 318A  
                                         l8566 3140                                           l8558 310A  
                                         l8486 2DC0                                           l8478 2D70  
                                         l8806 5722                                           l8830 3EA6  
                                         l8822 3E30                                           l8814 3DE6  
                                         l8902 614E                                           l8910 6722  
                                         l6992 1BDC                                           l6984 1BA4  
                                         l6976 1B6C                                           l6968 1B34  
                                         l6896 193C                                           l6888 1904  
                                         l8760 50F0                                           l8752 5092  
                                         l7960 47FA                                           l7936 476C  
                                         l7928 473C                                           l7864 3DAE  
                                         l7856 3D96                                           l7848 3D5E  
                                         l7792 3BA2                                           l7784 3B6A  
                                         l7776 3B3E                                           l7768 3B0C  
                                         l7696 3996                                           l7688 397E  
                                         l7872 641E                                           l7880 65C2  
                                         l8744 38BE                                           l8736 3894  
                                         l8728 3848                                           l8680 3704  
                                         l8648 35C4                                           l8656 35E4  
                                         l8664 3612                                           l8672 36AA  
                                         l8592 32D2                                           l8584 3222  
                                         l8568 3152                                           l8576 3192  
                                         l8496 2E44                                           l8808 574C  
                                         l8832 3EC6                                           l8824 3E38  
                                         l8840 3F2E                                           l8816 3DF4  
                                         l8904 6156                                           l8912 672C  
                                         l8920 521E                                           l6994 1BEA  
                                         l6986 1BB2                                           l6978 1B7A  
                                         l6898 194A                                           l7890 6776  
                                         l8770 5118                                           l8762 50F4  
                                         l8754 5096                                           l7970 4844  
                                         l7962 480A                                           l7954 47C0  
                                         l7938 477C                                           l7946 479C  
                                         l7858 3D98                                           l7794 3BD6  
                                         l7786 3B6C                                           l7778 3B4C  
                                         l7698 39A6                                           l7874 6422  
                                         l7882 65DA                                           l8738 38A0  
                                         l8690 3742                                           l8746 38DA  
                                         l8682 3714                                           l8674 36C8  
                                         l8666 366A                                           l8658 35F6  
                                         l8594 3306                                           l8586 327A  
                                         l8578 319A                                           l8498 2E56  
                                         l8850 3FD4                                           l8842 3F50  
                                         l8834 3ED4                                           l8826 3E46  
                                         l8818 3E06                                           l8906 6164  
                                         l8930 5268                                           l8922 5230  
                                         l6996 1BF8                                           l6988 1BC0  
                                         l7892 6792                                           l8772 5120  
                                         l8756 509A                                           l7980 4892  
                                         l7972 4850                                           l7964 4812  
                                         l7956 47DA                                           l7948 47AC  
                                         l7796 3BD8                                           l7788 3B76  
                                         l7868 6400                                           l7876 65B2  
                                         l8692 3752                                           l8684 3718  
                                         l8676 36E4                                           l8668 369E  
                                         l8596 3338                                           l8588 32AE  
                                         l8852 3FE6                                           l8844 3F60  
                                         l8828 3E6C                                           l8908 618A  
                                         l8940 52A4                                           l8932 526E  
                                         l8924 5232                                           l8916 5218  
                                         l6998 1C06                                           l8782 51CE  
                                         l8774 5156                                           l8766 50FA  
                                         l8758 50B8                                           l7982 48A8  
                                         l7990 48D8                                           l7974 486E  
                                         l7966 4822                                           l7958 47EA  
                                         l7798 3BE8                                           l7878 65BE  
                                         l7886 650A                                           l8694 375A  
                                         l8686 3728                                           l8678 36F6  
                                         l8598 334E                                           l8870 4118  
                                         l8854 3FFE                                           l8862 4068  
                                         l8846 3F92                                           l8838 3F1C  
                                         l8942 52D8                                           l8934 528A  
                                         l8926 524A                                           l8918 521C  
                                         l8784 51E0                                           l8768 5110  
                                         l7992 48E6                                           l7984 48AE  
                                         l7976 4870                                           l7968 4836  
                                         l7896 468A                                           l8696 3768  
                                         l8688 373A                                           l8792 5696  
                                         l8880 41DE                                           l8872 414C  
                                         l8864 4096                                           l8856 400C  
                                         l8848 3FA2                                           l8944 530A  
                                         l8936 528C                                           l8928 524E  
                                         l8786 51F2                                           l8778 518E  
                                         l7994 48EA                                           l7986 48B8  
                                         l7978 4880                                           l7898 4696  
                                         l8698 3770                                           l8794 56C0  
                                         l8890 421A                                           l8882 41EC  
                                         l8874 418C                                           l8858 403C  
                                         l8946 533C                                           l8938 528E  
                                         l7996 48F8                                           l7988 48C6  
                                         l8884 4200                                           l8868 4106  
                                         l8948 536A                                           l7998 4926  
                                         l8798 56CC                                           l8878 41B8  
                                         l8894 4226                                           STR_1 1021  
                                         l8896 424C                                           l8888 420C  
                                         STR_2 103E                                           STR_3 105A  
                                         STR_4 1062                                           STR_7 105E  
                                         STR_8 1066                                           u3020 6856  
                                         u3021 6850                                           _LATA 000F89  
                                         u3030 5910                                           _LATB 000F8A  
                                         u3031 590C                                           _LATC 000F8B  
                                         _LATD 000F8C                                           _LATE 000F8D  
                                         u3026 6858                                           u3050 59B6  
                                         u3051 59B2                                           u3060 5C06  
                                         u3140 688E                                           u3061 5C02  
                                         u3141 688A                                           u3150 601E  
                                         u3151 601A                                           u3048 593A  
                                         u3160 6032                                           u3049 594E  
                                         u3161 602E                                           u3078 5C34  
                                         u3079 5C46                                           u3088 5E5A  
                                         u6000 391A                                           u3089 5E6C  
                                         u6001 3916                                           u3098 6112  
                                         u3178 6062                                           u3610 67FE  
                                         u6010 392C                                           u3099 6124  
                                         u3179 6074                                           u3611 67FA  
                                         u6011 3928                                           u6100 3A86  
                                         u6020 393C                                           u6101 3A80  
                                         u6021 3938                                           u5310 5D2C  
                                         u6110 3A88                                           u6030 397E  
                                         u5311 5D28                                           u6031 397A  
                                         u5320 670A                                           u7000 54C2  
                                         u6200 3BA2                                           u6120 3AB0  
                                         u6040 3994                                           u5321 6706  
                                         u7001 54BE                                           u6201 3B9E  
                                         u6121 3AAC                                           u6041 3990  
                                         u7010 5500                                           u6210 3BE8  
                                         u6130 3ACE                                           u6050 39A6  
                                         u7011 54FC                                           u6211 3BE4  
                                         u6131 3ACA                                           u6051 39A2  
                                         u4620 67CE                                           u5500 5DC4  
                                         u7020 551E                                           u6300 3CD4  
                                         u6220 3C1E                                           u6140 3AEE  
                                         u6060 39B6                                           u7100 5442  
                                         u4621 67CA                                           u5501 5DC0  
                                         u7021 551A                                           u6301 3CD0  
                                         u6221 3C1A                                           u6141 3AEA  
                                         u6061 39B2                                           u7101 543E  
                                         u4630 645A                                           u5510 5E18  
                                         u7030 553E                                           u6310 3CE8  
                                         u6230 3C2E                                           u6150 3AFC  
                                         u6070 39F2                                           u7110 5462  
                                         u4631 6456                                           u5511 5E14  
                                         u7031 553A                                           u6311 3CE4  
                                         u6231 3C2A                                           u6151 3AF8  
                                         u6071 39EE                                           u7111 545E  
                                         u4640 6470                                           u5520 6092  
                                         u5600 4F46                                           u8000 51C8  
                                         u7040 558E                                           u6320 3D02  
                                         u6240 3C5A                                           u6160 3B0C  
                                         u6080 3A00                                           u7120 5472  
                                         u7200 5648                                           u6400 65DA  
                                         u4641 646C                                           u5521 608E  
                                         u5601 4F42                                           u8001 51C2  
                                         u7041 558A                                           u6321 3CFE  
                                         u6241 3C56                                           u6161 3B08  
                                         u6081 39FC                                           u7121 546E  
                                         u7201 5644                                           u6401 65D6  
                                         u2970 5EBA                                           u5530 60E6  
                                         u5610 4F9C                                           u8010 51CA  
                                         u7050 6558                                           u6330 3D3C  
                                         u6250 3C6A                                           u6170 3B3E  
                                         u6090 3A6E                                           u7130 5782  
                                         u6410 653A                                           u2971 5EB6  
                                         u5531 60E2                                           u5611 4F98  
                                         u7051 6554                                           u6331 3D38  
                                         u6251 3C66                                           u6171 3B3A  
                                         u6091 3A6A                                           u7131 577E  
                                         u6411 6534                                           u2980 67AC  
                                         u5540 6288                                           u5620 4FE6  
                                         u8020 51E0                                           u6500 47AC  
                                         u6340 3D4E                                           u6260 3C86  
                                         u6180 3B4C                                           u7060 53A4  
                                         u7220 5682                                           u7300 4D2E  
                                         u7140 57A4                                           u6420 653C  
                                         u8100 3E30                                           u2981 67A8  
                                         u5541 6284                                           u5621 4FE2  
                                         u8021 51DC                                           u6501 47A8  
                                         u6341 3D4A                                           u6261 3C82  
                                         u6181 3B48                                           u7061 53A0  
                                         u7221 567C                                           u7301 4D2A  
                                         u7141 57A0                                           u8101 3E2C  
                                         u5550 62C8                                           u5630 5004  
                                         u8030 51F2                                           u6510 4822  
                                         u6430 46A4                                           u6350 3D5E  
                                         u6270 3C96                                           u6190 3B6A  
                                         u7070 53D8                                           u7230 5684  
                                         u7310 4D50                                           u7150 57FA  
                                         u8110 3E6C                                           u5551 62C4  
                                         u5631 5000                                           u8031 51EE  
                                         u6511 481E                                           u6431 46A0  
                                         u6351 3D5A                                           u6271 3C92  
                                         u6191 3B66                                           u7215 565A  
                                         u7311 4D4C                                           u7151 57F6  
                                         u8111 3E68                                           u5480 5FB2  
                                         u5560 63D2                                           u5640 5014  
                                         u7400 65AC                                           u6600 493C  
                                         u6520 4844                                           u6440 46B6  
                                         u6360 3D7E                                           u6280 3CA8  
                                         u7080 5406                                           u7160 580A  
                                         u7240 625C                                           u8040 56C0  
                                         u8200 4102                                           u8120 3F16  
                                         u5481 5FAE                                           u5561 63CE  
                                         u5641 5010                                           u6601 4938  
                                         u6521 4840                                           u6441 46B2  
                                         u6361 3D7A                                           u6281 3CA4  
                                         u7081 5402                                           u7161 5806  
                                         u8041 56BC                                           u8121 3F10  
                                         u5490 6006                                           u5570 63FE  
                                         u5650 5022                                           u7410 633A  
                                         u6610 4950                                           u6530 486E  
                                         u6450 46C6                                           u6370 3D90  
                                         u6290 3CBE                                           u7090 541A  
                                         u7170 55D8                                           u7330 4DBC  
                                         u7250 626E                                           u8050 56F2  
                                         u8210 4118                                           u8130 3F18  
                                         u5491 6002                                           u5571 63FA  
                                         u5651 501E                                           u7411 6336  
                                         u6611 494C                                           u6531 486A  
                                         u6451 46C2                                           u6371 3D8C  
                                         u6291 3CBA                                           u7091 5416  
                                         u7075 53CE                                           u7331 4DB8  
                                         u7251 626A                                           u8051 56EE  
                                         u8211 4114                                           u5660 505C  
                                         u5580 4EDC                                           u7420 6368  
                                         u6620 496A                                           u6540 4892  
                                         u6460 470A                                           u6700 42EE  
                                         u6380 3DAC                                           u7180 55F6  
                                         u7340 4DE0                                           u7260 61E2  
                                         u7500 2D82                                           u8060 5710  
                                         u8220 41DE                                           u8140 3F2E  
                                         u5661 5058                                           u5581 4ED8  
                                         u7421 6364                                           u6621 4966  
                                         u6541 488E                                           u6461 4706  
                                         u6701 42EA                                           u6381 3DA8  
                                         u7181 55F2                                           u7325 4D64  
                                         u7261 61DC                                           u7501 2D7E  
                                         u8061 570C                                           u8221 41DA  
                                         u8141 3F2A                                           u5670 506A  
                                         u5590 4EEA                                           u6630 49B2  
                                         u6550 48A8                                           u6470 471C  
                                         u6710 42FE                                           u7190 561E  
                                         u7350 4DFC                                           u7326 4D6E  
                                         u6390 6442                                           u7270 61E4  
                                         u7510 2E0E                                           u7430 2C82  
                                         u8070 5722                                           u8150 3F60  
                                         u8230 61A8                                           u5671 5066  
                                         u5591 4EE6                                           u6631 49AE  
                                         u6551 48A4                                           u6471 4718  
                                         u6711 42FA                                           u7191 561A  
                                         u7175 55CE                                           u7351 4DF8  
                                         u7327 4D7E                                           u6391 643E  
                                         u7247 6252                                           u7511 2E0A  
                                         u7431 2C7E                                           u8071 571E  
                                         u8151 3F5C                                           u8231 61A4  
                                         u6640 49E2                                           u6560 48C6  
                                         u6480 472C                                           u6800 45A2  
                                         u6720 4334                                           u7360 4E50  
                                         u7280 61FA                                           u7600 3068  
                                         u7520 2E3C                                           u7440 2CD2  
                                         u8080 574C                                           u8160 3FA2  
                                         u8240 530A                                           u6641 49DE  
                                         u6561 48C2                                           u6481 4728  
                                         u6801 459E                                           u6721 4330  
                                         u7345 4DD6                                           u7281 61F6  
                                         u7601 3064                                           u7521 2E36  
                                         u7441 2CCE                                           u8081 5748  
                                         u8161 3F9E                                           u8241 5306  
                                         u6650 4A10                                           u6570 48E6  
                                         u6490 476C                                           u6810 45BC  
                                         u6730 4344                                           u7370 4E6C  
                                         u7290 4D00                                           u5930 62DE  
                                         u7610 308E                                           u7530 2E3E  
                                         u7450 2CE0                                           u8170 3FE6  
                                         u8090 3DE6                                           u8307 2C4C  
                                         u6651 4A0C                                           u6571 48E2  
                                         u6491 4768                                           u6811 45B8  
                                         u6731 4340                                           u7371 4E68  
                                         u5931 62DA                                           u7611 308A  
                                         u7451 2CDC                                           u8171 3FE2  
                                         u8091 3DE2                                           u6900 58EA  
                                         u6580 48F8                                           u6820 4604  
                                         u6740 44BE                                           u6660 427A  
                                         u7380 4EA8                                           u5940 62EC  
                                         u7700 318A                                           u7620 30A4  
                                         u7540 2E56                                           u7460 2CF2  
                                         u8180 4096                                           u6901 58E6  
                                         u6581 48F4                                           u6821 4600  
                                         u6661 4276                                           u7381 4EA4  
                                         u7365 4E46                                           u5941 62E8  
                                         u7701 3186                                           u7621 30A0  
                                         u7541 2E52                                           u7461 2CEE  
                                         u8181 4092                                           u7390 65AA  
                                         u6910 5A92                                           u6590 4926  
                                         u6830 4632                                           u6750 4518  
                                         u6670 428C                                           u5950 6318  
                                         u7710 32D2                                           u7630 30C0  
                                         u7550 2F08                                           u7470 2D3A  
                                         u8190 4100                                           u7391 65A4  
                                         u6911 5A8E                                           u6591 4922  
                                         u6831 462E                                           u6751 4514  
                                         u6671 4288                                           u7295 4CF6  
                                         u5951 6314                                           u7711 32CE  
                                         u7631 30BC                                           u7551 2F04  
                                         u7471 2D36                                           u8191 40FA  
                                         u6920 5AAC                                           u6840 466C  
                                         u6760 4538                                           u6680 429C  
                                         u5960 5C92                                           u7800 3568  
                                         u7720 3338                                           u7640 30F6  
                                         u7560 2F9C                                           u7480 2D68  
                                         u6921 5AA8                                           u6841 4668  
                                         u6761 4534                                           u6745 44B4  
                                         u6681 4298                                           u5961 5C8E  
                                         u7801 3564                                           u7721 3334  
                                         u7641 30F2                                           u7561 2F98  
                                         u7481 2D62                                           u8257 5226  
                                         u6850 584A                                           u6930 5AC6  
                                         u6770 454A                                           u6690 42DC  
                                         u5970 5CA4                                           u7810 3576  
                                         u7730 3380                                           u7650 311C  
                                         u7570 300E                                           u7490 2D6A  
                                         u6851 5846                                           u6931 5AC2  
                                         u6771 4546                                           u6691 42D8  
                                         u5971 5CA0                                           u7811 3572  
                                         u7731 337C                                           u7651 3118  
                                         u7571 300A                                           u8267 523E  
                                         u6860 5864                                           u6940 5AE4  
                                         u6780 4578                                           u5980 5CCC  
                                         u7900 3768                                           u7820 3590  
                                         u7740 3390                                           u7660 312E  
                                         u7580 3034                                           u6861 5860  
                                         u6941 5AE0                                           u6781 4574  
                                         u5981 5CC8                                           u7901 3764  
                                         u7821 358C                                           u7741 338C  
                                         u7661 312A                                           u7581 3030  
                                         u8277 525A                                           u6870 588A  
                                         u6950 5AFA                                           u6790 458E  
                                         u5990 5D02                                           u7910 37EC  
                                         u7830 359E                                           u7750 342A  
                                         u7670 313C                                           u7590 3046  
                                         u6871 5886                                           u6951 5AF6  
                                         u6791 458A                                           u5991 5CFE  
                                         u7911 37E8                                           u7831 359A  
                                         u7751 3426                                           u7671 3138  
                                         u7591 3042                                           u8287 527A  
                                         u6880 58A8                                           u6960 5B1E  
                                         u7920 3806                                           u7840 35F6  
                                         u7760 3478                                           u7680 3152  
                                         u6881 58A4                                           u6961 5B1A  
                                         u7921 3802                                           u7841 35F2  
                                         u7761 3474                                           u7681 314E  
                                         u8297 5376                                           u6890 58C4  
                                         u6970 5B5E                                           u7930 381E  
                                         u7850 36C8                                           u7770 34A0  
                                         u7690 3160                                           u6891 58C0  
                                         u6971 5B5A                                           u7931 381A  
                                         u7851 36C4                                           u7771 349C  
                                         u7691 315C                                           u6980 5B9C  
                                         u7940 387C                                           u7860 36E4  
                                         u7780 3544                                           u6981 5B98  
                                         u7941 3876                                           u7861 36E0  
                                         u7781 3540                                           u6990 5BD0  
                                         u7950 387E                                           u7870 36F6  
                                         u7790 3556                                           u6991 5BCC  
                                         u7871 36F2                                           u7791 3552  
                                         u7960 3894                                           u7880 3704  
                                         u7961 3890                                           u7881 3700  
                                         u7970 50B8                                           u7890 373A  
                                         u7971 50B4                                           u7891 3736  
                                         u7980 50F0                                           u7981 50EC  
                                         u7990 510C                                           u7991 5108  
                                         _WPUB 000F7C                        ??_wr2RegCompleteHandler 0010  
                                         _dbuf 0110                                           _atoi 507E  
                                         _main 5218                       ?_I2C_CallbackReturnReset 000E  
                                         _prec 00A0                                           _nout 009C  
                                         pad@i 001E                                           pad@p 001B  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0020  
                                         fsr2l 000FD9                               __end_of_I2C_Open 5DA4  
                                         btemp 005B                                  ___fpclassifyf 5598  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00B0                                ___fldiv@new_exp 0016  
                 fp__I2C_DO_SEND_RESTART_WRITE 0000                                   _tolower$2313 0011  
                                 ___param_bank 000000               __size_of_rdBlkRegCompleteHandler 0040  
                                        ??_pad 001D                               ?_I2C_MasterClose 0001  
                              _I2C_WriteNBytes 6270                                  ?_EUSART_Write 0001  
          __size_of_I2C_SetAddressNackCallback 0018                 __size_of_OSCILLATOR_Initialize 000A  
                             ?_I2C_MasterStart 0001                                  _I2C_DO_RX_ACK 693A  
                             ?_I2C_MasterWrite 0001                  __end_of_OSCILLATOR_Initialize 68E8  
                                  _writeBuffer 00A5                                  ___fltol@sign1 000D  
                                        ?_atoi 000C                                __end_of___fladd 3DC0  
                                        ?_main 0001                                __end_of___fldiv 4A24  
                              __end_of___awdiv 58FC                                __end_of___flneg 657A  
                                        STR_11 106A                                          STR_13 106A  
                              __end_of___awmod 5B30                                __end_of___flmul 468A  
                              __end_of___flsub 63BA                                __end_of___fltol 5494  
                                        _ANSEL 000F7E                          _I2C_Read1ByteRegister 5F96  
                              ___awdiv@divisor 0007                  ??_VL53L0X_Millimeter_GetValue 0022  
                                        i2l610 64C8                                          i2l621 6774  
                                        i2l630 6980                                          i2l607 64C6  
                                        i2l624 69B2                                          i2l617 5A7E  
                                        i2l627 697A                                          i2l671 009C  
                                        i2l666 0062                                          i2l667 009C  
                              ___awdiv@counter 0009                                          _RCREG 000FAE  
                 __size_of_I2C_DO_RX_NACK_STOP 0008                                          _RCSTA 000FAB  
                                 vfpfcnvrt@fmt 0040                                          _SPBRG 000FAF  
                            ??_I2C_DO_TX_EMPTY 0010                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                                        _TXREG 000FAD                                          _TXSTA 000FAC  
                            __end_of_I2C_DO_RX 5C80                              __end_of_I2C_DO_TX 59C0  
                                        _flags 00A2                                          _fputc 5C80  
                            __end_of_I2C_Close 6722                                          _fputs 6400  
                              __end_of_isdigit 65B2                         __size_of_I2C_MasterFsm 0070  
               I2C_MasterOperation@returnValue 0015                                          atoi@n 0019  
                                        pad@fp 0017                                          atoi@s 000C  
                                        _width 009E                                          _putch 68D4  
                      _I2C_MasterEnableRestart 699A                                __end_of_isspace 6374  
                              __end_of_isupper 6542                                          pclath 000FFA  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005C  
                                        ttemp6 005F                                          ttemp7 0063  
                                        status 000FD8                                          wtemp8 005C  
                               ?___fpclassifyf 0005                                __end_of_tolower 6212  
                            ?_I2C_DO_SEND_STOP 0001                         __size_of_I2C_SetBuffer 0024  
                              __end_of_strncmp 5772                             ??_I2C_DO_SEND_STOP 0005  
                                _fsmStateTable 1001                       fp__rd1RegCompleteHandler 0000  
                                ?_VL53L0X_Init 0001                                __initialization 661A  
                                 __end_of_atoi 5218                                   __end_of_main 538E  
                     fp__wr1RegCompleteHandler 0000              __size_of_I2C_DO_SEND_RESTART_READ 0008  
                    ?_I2C_DO_SEND_RESTART_READ 0001                                 ??_EUSART_Write 0005  
                               ?_I2C_DO_RX_ACK 0001                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0007                                         ??_atoi 000E  
                                       ??_main 017A                              ?_I2C_MasterIsNack 0001  
                                __activetblptr 000003                          _I2C_Read2ByteRegister 5DA4  
    VL53L0X_Millimeter_GetValue@DistDistanzAnz 0024                              ?_I2C_MasterSetIrq 0001  
             I2C_Read2ByteRegister@returnValue 001C                             ??_I2C_MasterIsNack 0005  
                           ??_I2C_MasterSetIrq 0005           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 69B4     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 69B2                     _EUSART_OverrunErrorHandler 0172  
              __end_of_I2C_CallbackReturnReset 6992                                         ?_fputc 0007  
                                       ?_fputs 0010                __size_of_I2C_CallbackReturnStop 0004  
                             ___awdiv@dividend 0005                  I2C_SetDataCompleteCallback@cb 000A  
                                       ?_putch 0001                                         _ANSELH 000F7F  
                                 ??_I2C_Poller 0014                                         i2l6280 674C  
                                       i2l6600 59DE                                         i2l6282 675C  
                                       i2l6610 5A40                                         i2l6602 59EE  
                                       i2l6284 675E                                         i2l6612 5A5C  
                                       i2l6604 5A08                                         i2l6286 676E  
                                       i2l6614 5A7A                                         i2l6606 5A16  
                                       i2l6288 6772                                         i2l6608 5A26  
                                       i2l6494 6976                                         i2l6590 64AC  
                                       i2l6496 697C                                         i2l6592 64BC  
                                       i2l6584 6488                                         i2l6594 64C0  
                                       i2l6586 649A                                         i2l7490 0036  
                                       i2l6596 59C0                                         i2l6588 64AA  
                                       i2l7492 0044                                         i2l6598 59D0  
                                       i2l7494 0070                                         i2l7486 001A  
                                       i2l7496 007E                                         i2l7488 0028  
                                       _OSCCON 000FD3           __size_of_VL53L0X_Millimeter_GetValue 0294  
                                       _SPBRGH 000FB0                                         _SSPADD 000FC8  
                                       _SSPBUF 000FC9                               __end_of___xxtofl 507E  
                          _I2C_MasterGetRxData 6986                        __end_of_I2C_WriteNBytes 62CA  
                               ??_VL53L0X_Init 001E                                   vfprintf@cfmt 0054  
                      __size_of_I2C_ReadNBytes 0046                                         ___flge 5494  
                                       ___fleq 5B30                                      ??___fladd 000D  
                                       ___wmul 6776                                      ??___fldiv 000D  
                                _I2C_MasterFsm 600A                                      ??___awdiv 0009  
                                    ??___flneg 0009                                      ??___awmod 0009  
                                    ??___flmul 000D                                      ??___flsub 0026  
                                    ??___fltol 0009                                         _efgtoa 2C5A  
                          _EUSART_Transmit_ISR 6488                                         _floorf 4CB8  
                      __size_of_VL53L0X_SetAdd 0012                                         clear_0 6620  
                                       clear_1 662C                              I2C_SetCallback@cb 0005  
                             ___awdiv@quotient 000B                        fp__I2C_DO_SEND_ADR_READ 0000  
                              ___awmod@divisor 0007                        __size_of_I2C_MasterRead 0008  
                       ?_I2C_Read1ByteRegister 0016                        __size_of_I2C_MasterOpen 0022  
                                       isa$std 000001                        __size_of_I2C_MasterStop 0004  
                              ___awmod@counter 0009                        __size_of_I2C_Initialize 0014  
                                       _printf 6722                                         pad@buf 0019  
                                _I2C_SetBuffer 679C                             __end_of_I2C_Poller 6800  
                                       _strcpy 6212                                         _strlen 65B2  
                 __end_of_I2C_MasterDisableIrq 69A6                                         fputc@c 0007  
                                       fputs@c 0014                            _I2C_DO_ADDRESS_NACK 60E8  
                                       fputs@i 0015                                         fputs@s 0010  
                                    ??_isdigit 0007                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 6818  
                   _I2C_SetAddressNackCallback 6800                                ___fpclassifyf@e 000D  
                              ___fpclassifyf@u 000F                                ___fpclassifyf@x 0005  
                                 __mediumconst 0000                                      ??_isspace 0007  
                                       tblptrh 000FF7                                      ??_isupper 0007  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                    ??_I2C_MasterEnableRestart 0005                               __end_of_vfprintf 61B2  
                                    ??_tolower 000D                                      ??_strncmp 000B  
                         ?_EUSART_Transmit_ISR 0001                  __size_of_INTERRUPT_Initialize 0004  
                                   ___flge@ff1 001E                                     ___flge@ff2 0022  
                              ??___fpclassifyf 0009                                   ___xxtofl@arg 000F  
                                 ___xxtofl@exp 000E                              _SYSTEM_Initialize 6830  
                                 ___xxtofl@val 0005                                     ___fleq@ff1 0005  
                                   ___fleq@ff2 0009                                     __accesstop 0060  
                      __end_of__initialization 663C                                     ___flneg@f1 0005  
                          _I2C_MasterOperation 6444                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001                           ?_I2C_DO_ADDRESS_NACK 0001  
                                   ___fltol@f1 0005           __end_of_EUSART_SetTxInterruptHandler 68F2  
        __size_of_EUSART_SetTxInterruptHandler 000A                   _EUSART_SetTxInterruptHandler 68E8  
                      _rdBlkRegCompleteHandler 64CA                     fp__rdBlkRegCompleteHandler 0000  
                               __pcstackCOMRAM 0001                                 ?_I2C_MasterFsm 0001  
                              ??_I2C_DO_RX_ACK 0005                         _I2C_CallbackReturnStop 6992  
                          ??_SYSTEM_Initialize 0007                                  __end_of_fputc 5D16  
                                __end_of_fputs 6444                                  __end_of_putch 68DE  
                               ?_I2C_SetBuffer 0005                        ?_I2C_MasterWaitForEvent 0001  
               __size_of_I2C_DO_SEND_ADR_WRITE 0010             __size_of_I2C_DO_SEND_RESTART_WRITE 0008  
                       ?_I2C_Read2ByteRegister 0016                  __end_of_I2C_DO_SEND_ADR_WRITE 68A0  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                        ?_I2C_Write1ByteRegister 0016  
                        I2C_ReadNBytes@address 001A                                     ??_I2C_Open 0005  
                         _eusartRxStatusBuffer 0084                     __end_of_I2C_MasterClearIrq 69AE  
              ??_EUSART_SetOverrunErrorHandler 0007                                        ??_fputc 000B  
                    __end_of_SYSTEM_Initialize 6846                                        ??_fputs 0014  
                        ??_EUSART_Transmit_ISR 0001                                        ??_putch 0006  
                            _I2C_MasterSendAck 696A                                     __pbssBANK0 0060  
                                   __pbssBANK1 0100                           __end_of_EUSART_Write 6322  
                                ??_I2C_DO_IDLE 0005                 __size_of_rd2RegCompleteHandler 002C  
                                ??_I2C_DO_RCEN 0005                  __end_of_rd2RegCompleteHandler 669E  
                 __end_of_I2C_MasterSendTxData 696A                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 698A                 __size_of_wr2RegCompleteHandler 002C  
                        ??_I2C_DO_ADDRESS_NACK 0010                  __end_of_wr2RegCompleteHandler 66F6  
                  __size_of_EUSART_Receive_ISR 00C0                            _I2C_DO_RX_NACK_STOP 6932  
                        _rd1RegCompleteHandler 669E                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 6976                               ?_I2C_WriteNBytes 0016  
                       I2C_WriteNBytes@address 001A                          _wr1RegCompleteHandler 6646  
                          ??_I2C_MasterSendAck 0005                       rd1RegCompleteHandler@ptr 000E  
                                      ?___flge 001E                  ?_EUSART_SetTxInterruptHandler 0005  
                                      ?___fleq 0005               _EUSART_TxDefaultInterruptHandler 00FD  
                  __end_of_I2C_DO_SEND_RESTART 6952                                _I2C_DO_TX_EMPTY 5E2A  
                          I2C_SetBuffer@buffer 0005                                        ?___wmul 0005  
                                      ?_efgtoa 0032                 __end_of_I2C_MasterWaitForEvent 6890  
                          ??_I2C_MasterStartRx 0005                  __size_of_I2C_DO_SEND_ADR_READ 0010  
                                      ?_floorf 001E                                        _BAUDCON 000FB8  
             __size_of_I2C_CallbackReturnReset 0004                   ??_EUSART_DefaultErrorHandler 0001  
                        ??_I2C_MasterOperation 0014                                        ?_printf 00F3  
               I2C_SetDataCompleteCallback@ptr 000C                 __end_of_I2C_Write1ByteRegister 60E8  
                                      ?_strcpy 0005                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 695A  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 0056  
                                    ?___xxtofl 0005                             __size_of_vfpfcnvrt 04A0  
                         __end_of_VL53L0X_Init 2C5A                  __size_of_EUSART_RxDataHandler 002A  
                    __end_of_I2C_MasterSendAck 6970                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0007                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                    __end_of_I2C_MasterStartRx 698E                           I2C_Close@returnValue 0005  
                 ?_I2C_SetDataCompleteCallback 000A                                      _I2C_DO_RX 5BDA  
                                    _I2C_DO_TX 58FC               __end_of_I2C_DO_SEND_RESTART_READ 6962  
                 I2C_Read1ByteRegister@address 0017                                      _I2C_Close 66F6  
                    ??_rdBlkRegCompleteHandler 0010                           _I2C_MasterDisableIrq 69A2  
                              ??_I2C_MasterFsm 0012                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                                        __Lparam 0000  
                               _I2C_ReadNBytes 63BA                            __end_of_I2C_DO_IDLE 68D4  
                          __end_of_I2C_DO_RCEN 68C8                                     _readBuffer 0160  
                              __size_of___flge 0104                                __size_of___fleq 00AA  
                                      ___fladd 3900                                        ___fldiv 468A  
                                      ___awdiv 5838                                        ___flneg 6542  
                                      ___awmod 5A80                                        ___flmul 4260  
                                      ___flsub 6374                                        ___fltol 538E  
                              ??_I2C_SetBuffer 0009                                __size_of___wmul 0026  
                               _VL53L0X_SetAdd 686E                                      ?_vfprintf 00ED  
                      I2C_SetBuffer@bufferSize 0007                                   __psmallconst 1000  
                              __size_of_efgtoa 0CA6                             I2C_ReadNBytes@data 0016  
                               _I2C_MasterRead 691A                                 _I2C_MasterOpen 67C0  
                              __size_of_floorf 0212                                        __pcinit 661A  
                               _I2C_MasterStop 6996                                 _I2C_Initialize 685A  
                                      __ramtop 1000                      __size_of_I2C_DO_SEND_STOP 0008  
                                      __ptext0 5218                                        __ptext1 6722  
                                      __ptext2 614E                                        __ptext3 3DC0  
                                      __ptext4 5696                                        __ptext5 2C5A  
                                      __ptext6 61B2                                        __ptext7 650A  
                                      __ptext8 6212                                        __ptext9 5772  
                              __size_of_printf 002A                          ??_I2C_DO_RX_NACK_STOP 0005  
                              __size_of_strcpy 005E                                __size_of_strlen 0036  
                        _OSCILLATOR_Initialize 68DE                                   __size_of_pad 00C6  
                                      _isdigit 657A                                     ??___xxtofl 0009  
                             ___awmod@dividend 0005                             I2C_SetCallback@idx 0009  
                     __size_of_I2C_MasterClose 0004                       ??_PIN_MANAGER_Initialize 0005  
                I2C_CallbackReturnReset@funPtr 000E                                        _isspace 6322  
                           I2C_SetCallback@ptr 0007                       wr1RegCompleteHandler@ptr 000E  
                                      _isupper 650A                                        efgtoa@c 0038  
                                      efgtoa@d 00CD                                        efgtoa@e 00E5  
                                      efgtoa@f 0034                                        efgtoa@g 00E1  
                                      efgtoa@h 00D7                                        efgtoa@i 00DF  
                                      efgtoa@l 00DB                                        efgtoa@m 00C7  
                                      efgtoa@n 00E7                                        efgtoa@p 00D1  
                                      efgtoa@t 00C1                                        efgtoa@u 00E9  
                                      efgtoa@w 00D3                      I2C_Write1ByteRegister@reg 0016  
                     fp__I2C_DO_SEND_ADR_WRITE 0000                       __size_of_I2C_MasterStart 0004  
                     __size_of_I2C_MasterWrite 0008                                        atoi@neg 0012  
                   __size_of_SYSTEM_Initialize 0016                                        _tolower 61B2  
                                      _strncmp 5696                           end_of_initialization 663C  
                                      floorf@e 002C                                        floorf@m 0028  
                                      floorf@u 002E                                        floorf@x 001E  
                                   ?_I2C_DO_RX 0001                                     ?_I2C_DO_TX 0001  
        __end_of_EUSART_SetOverrunErrorHandler 6906         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 68FC                      __size_of_I2C_MasterIsNack 0014  
                                      fputc@fp 0009                                     ?_I2C_Close 0001  
                                      fputs@fp 0012                         ?_rd1RegCompleteHandler 000E  
                      __end_of_I2C_DO_TX_EMPTY 5EA6                      __size_of_I2C_MasterSetIrq 0004  
                        ?_I2C_MasterDisableIrq 0001                         __end_of_I2C_ReadNBytes 6400  
                            _EUSART_Initialize 5F20                         ?_wr1RegCompleteHandler 000E  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0001  
                     __size_of_I2C_SetCallback 007A                              __end_of_vfpfcnvrt 4260  
                       __end_of_VL53L0X_SetAdd 6880                                     efgtoa@mode 00D6  
                                   efgtoa@sign 00CF                                      _RCSTAbits 000FAB  
                                      postdec2 000FDD                         __end_of_I2C_MasterRead 6922  
                      ??_I2C_Read1ByteRegister 0017                         __end_of_I2C_MasterOpen 67E2  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                       __end_of_I2C_MasterStop 699A                         __end_of_I2C_Initialize 686E  
                                   ??_vfprintf 0054                      fp__I2C_CallbackReturnStop 0000  
          __end_of_VL53L0X_Millimeter_GetValue 4CB8                    _VL53L0X_Millimeter_GetValue 4A24  
                                      strcpy@d 000D                                        strlen@a 0007  
                                      strcpy@s 000B                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                 ??_EUSART_SetTxInterruptHandler 0007  
              __end_of_rdBlkRegCompleteHandler 650A                           _I2C_MasterSendTxData 6962  
                              fp__I2C_DO_RESET 0000                __size_of_I2C_DO_RX_NACK_RESTART 0008  
                                  ___fladd@grs 0014                                  ___xxtofl@sign 000D  
                  ?_I2C_SetAddressNackCallback 000A                          __size_of_EUSART_Write 0058  
                   __size_of_I2C_MasterSendAck 0006                                    ___fldiv@grs 0018  
                                  ___fldiv@rem 0011                              __size_of_I2C_Open 008E  
              __size_of_EUSART_SetErrorHandler 000A                     __size_of_I2C_MasterStartRx 0004  
                                  ___flmul@grs 0013                      __end_of_EUSART_Initialize 5F96  
                                  _I2C_DO_IDLE 68C8                                    _I2C_DO_RCEN 68BC  
                   rdBlkRegCompleteHandler@ptr 000E                  I2C_Write1ByteRegister@address 0018  
                                    _TXSTAbits 000FAC                                ?_I2C_ReadNBytes 0016  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 695A  
                  fp__I2C_DO_SEND_RESTART_READ 0000                                ?_VL53L0X_SetAdd 0001  
                 I2C_CallbackReturnStop@funPtr 000E                                ?_I2C_MasterRead 0001  
                      ??_I2C_Read2ByteRegister 0018                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 69B2                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 698E  
                     I2C_Read1ByteRegister@reg 0016                     fp__I2C_CallbackReturnReset 0000  
                               __end_of___flge 5598                                 __end_of___fleq 5BDA  
           __end_of_EUSART_DefaultErrorHandler 6982                     _EUSART_DefaultErrorHandler 697C  
                                  vfpfcnvrt@ap 0042                                    vfpfcnvrt@ct 0050  
                                  vfpfcnvrt@fp 003E                                 __end_of___wmul 679C  
         __size_of_I2C_SetDataCompleteCallback 0018                                 __end_of_efgtoa 3900  
                                 _EUSART_Write 62CA                                 __end_of_floorf 4ECA  
                        ?_I2C_MasterSendTxData 0001                          __size_of_VL53L0X_Init 1BEC  
                       ?_OSCILLATOR_Initialize 0001                                     floorf@F527 008C  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                                 __end_of_printf 674C  
                               __end_of_strcpy 6270                                 __end_of_strlen 65E8  
                          start_initialization 661A                __size_of_PIN_MANAGER_Initialize 0032  
                                  __end_of_pad 5838                                  ?_I2C_DO_RESET 0001  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                       ??_I2C_MasterDisableIrq 0005                                    ??_I2C_Close 0005  
                            ??_I2C_MasterStart 0005                          __end_of___fpclassifyf 5696  
                            ??_I2C_MasterWrite 0016               VL53L0X_Millimeter_GetValue@data8 002A  
               __end_of_I2C_CallbackReturnStop 6996                         _I2C_DO_RX_NACK_RESTART 692A  
                             ?_I2C_DO_TX_EMPTY 0001                             _I2C_MasterClearIrq 69AA  
               ?_EUSART_SetOverrunErrorHandler 0005                                    vfprintf@fmt 00EF  
                                 _VL53L0X_Init 106E                     _EUSART_FramingErrorHandler 0174  
                                     ??___flge 0026                                       ??___fleq 000D  
                                     ??___wmul 0009                         _EUSART_SetErrorHandler 6910  
                          ?_I2C_MasterClearIrq 0001                                       ??_efgtoa 0039  
                  __end_of_I2C_MasterGetRxData 698A                                       ??_floorf 0022  
                        __end_of_I2C_DO_RX_ACK 6942                               _I2C_DO_SEND_STOP 6942  
                            ??_I2C_SetCallback 0009                                       ??_printf 0056  
                          I2C_Open@returnValue 0006                                       ??_strcpy 0009  
                           _I2C_MasterSendNack 6970                                       ??_strlen 0007  
                     ?_I2C_MasterEnableRestart 0001                                      ___fladd@a 0009  
                                    ___fladd@b 0005                         fp__I2C_DO_SEND_RESTART 0000  
                                    ___fldiv@a 0009                                      ___fldiv@b 0005  
                     I2C_Read2ByteRegister@reg 0016                    __end_of_EUSART_Transmit_ISR 64CA  
                        _I2C_DO_SEND_ADR_WRITE 6890                                      ___flmul@a 0009  
                                    ___flmul@b 0005                                    __pbssCOMRAM 0056  
                                    ___flsub@a 0022                                      ___flsub@b 001E  
                                __pcstackBANK0 00B5                                  __pcstackBANK1 0178  
                               ??_I2C_DO_RESET 0005                            ?_I2C_MasterSendNack 0001  
                            __size_of___xxtofl 01B4                   __end_of_I2C_DO_SEND_ADR_READ 68B0  
                         ??_I2C_MasterClearIrq 0005                    __end_of_I2C_DO_ADDRESS_NACK 614E  
                   __end_of_EUSART_Receive_ISR 5A80                               _I2C_MasterIsNack 6846  
                   __size_of_EUSART_Initialize 0076                      _I2C_DO_SEND_RESTART_WRITE 6952  
             _EUSART_RxDefaultInterruptHandler 0176                               _I2C_MasterSetIrq 6982  
                                    _atoi$2224 0014                                      _atoi$2225 0018  
                                    _atoi$2226 0016                                      __pnvBANK0 00FD  
                                    __pnvBANK1 0170                          _rd2RegCompleteHandler 6672  
                        __end_of_fsmStateTable 1021                                    _efgtoa$2160 00B5  
                                  _efgtoa$2161 00B7                                    _efgtoa$2170 00BB  
                                  _efgtoa$2171 00BD                                    _efgtoa$2172 00BF  
                                  _efgtoa$2166 00B9                   __end_of_EUSART_RxDataHandler 6776  
                       _PIN_MANAGER_Initialize 65E8                          _wr2RegCompleteHandler 66CA  
                    ??_I2C_CallbackReturnReset 0010                    __end_of_I2C_MasterOperation 6488  
                         ??_I2C_MasterSendNack 0005                       rd2RegCompleteHandler@ptr 000E  
                                    __pintcode 0008                                       ?___fladd 0005  
                                     ?___fldiv 0005                                       ?___awdiv 0005  
                                    __ptext101 6488                                      __ptext102 59C0  
                                     ?___flneg 0005                                      __ptext103 6976  
                                    __ptext104 69B2                                      __ptext105 697C  
                                    __ptext106 674C                                      __ptext107 0000  
                                     ?___awmod 0005                                       ?___flmul 0005  
                                     ?___flsub 001E                                       ?___fltol 0005  
                                 _eusartRxHead 0058                                   _eusartTxHead 005A  
                                 _eusartRxTail 0057                         ??_I2C_MasterSendTxData 0005  
                                 _eusartTxTail 0059                             VL53L0X_Init@data16 001F  
                 ??_INTERRUPT_InterruptManager 0001                       __size_of_I2C_WriteNBytes 005A  
                            __size_of_vfprintf 0064                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                        _eusartTxBufferRemaining 00FF  
                 __size_of_I2C_DO_SEND_RESTART 0008                                    __smallconst 1000  
                                     ?_isdigit 0005                        I2C_MasterOperation@read 0014  
                                     _I2C_Open 5D16                                       ?_isspace 0005  
                                     ?_isupper 0005                              I2C_ReadNBytes@len 0018  
                                     ?_tolower 000B                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                                     ?_strncmp 0005                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 69AE                                 _eusartRxBuffer 0100  
                      ??_wr1RegCompleteHandler 0010                   I2C_Read2ByteRegister@address 001B  
                               _eusartTxBuffer 0108                                 ___wmul@product 0009  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _LATDbits 000F8C  
                                     _PIE1bits 000F9D                              _eusartRxLastError 00A4  
          __size_of_INTERRUPT_InterruptManager 00A8                                       _PIR1bits 000F9E  
              ??_EUSART_SetFramingErrorHandler 0007                                       _PIR2bits 000FA1  
                                     i2u533_40 676E                                       i2u533_41 676A  
                                     i2u571_40 649A                                       i2u571_41 6496  
                                     i2u572_40 64BC                                       i2u572_41 64B8  
                                     i2u573_40 59DE                                       i2u573_41 59DA  
                                     i2u590_40 007E                                       i2u590_41 007A  
                                     i2u575_40 5A16                                       i2u574_48 59F4  
                                     i2u575_41 5A12                                       i2u574_49 5A08  
                                     i2u591_48 0084                                       i2u591_49 0098  
                                     i2u577_40 5A5C                                       i2u576_48 5A2C  
                                     i2u585_40 0028                                       i2u577_41 5A58  
                                     i2u576_49 5A40                                       i2u585_41 0024  
                                     i2u586_40 0036                                       i2u586_41 0032  
                                     i2u578_48 5A62                                       i2u587_40 0044  
                                     i2u578_49 5A76                                       i2u587_41 0040  
                                     i2u589_40 0070                                       i2u588_48 004A  
                                     i2u589_41 006C                                       i2u588_49 005E  
                        __end_of_I2C_MasterFsm 607A                                       _RCONbits 000FD0  
                  __end_of_I2C_DO_RX_NACK_STOP 693A           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 697C     __size_of_EUSART_DefaultOverrunErrorHandler 0006  
          ??_EUSART_DefaultOverrunErrorHandler 0001             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 6976                __end_of_I2C_MasterEnableRestart 699E  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
               __size_of_I2C_Read1ByteRegister 0074                  __end_of_I2C_Read1ByteRegister 600A  
                                    _vfpfcnvrt 3DC0                          __end_of_I2C_SetBuffer 67C0  
                            ___wmul@multiplier 0005                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005              VL53L0X_Millimeter_GetValue@data16 0028  
                     wr2RegCompleteHandler@ptr 000E                                   _isspace$2255 000B  
                                   vfpfcnvrt@c 0053                                     vfpfcnvrt@f 004C  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0005  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000E  
                             ??_I2C_ReadNBytes 001A                                     _I2C_Poller 67E2  
                                   _I2C_Status 0060                                   ?_I2C_DO_IDLE 0001  
                                 ?_I2C_DO_RCEN 0001                         ?_rd2RegCompleteHandler 000E  
                             ??_VL53L0X_SetAdd 0019                               ??_I2C_MasterRead 0016  
                        fp__EUSART_Receive_ISR 0000                            I2C_WriteNBytes@data 0016  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                VL53L0X_Millimeter_GetValue@addr 002B  
                    fp__I2C_DO_RX_NACK_RESTART 0000                                       __Hrparam 0000  
                                   vfprintf@ap 00F1                                       __Lrparam 0000  
                                   vfprintf@fp 00ED                           __end_of_I2C_DO_RESET 68BC  
                     ??_I2C_Write1ByteRegister 0018                        ??_OSCILLATOR_Initialize 0005  
                          _EUSART_ErrorHandler 0170                               __size_of___fladd 04C0  
                             __size_of___fldiv 039A                               __size_of___awdiv 00C4  
                         _I2C_DO_SEND_ADR_READ 68A0                               __size_of___flneg 0038  
                             __size_of___awmod 00B0                               __size_of___flmul 042A  
                             __size_of___flsub 0046                               __size_of___fltol 0106  
               __size_of_I2C_Read2ByteRegister 0086                    ?_EUSART_DefaultErrorHandler 0001  
                                   ?_vfpfcnvrt 003E                  __end_of_I2C_Read2ByteRegister 5E2A  
             I2C_Read1ByteRegister@returnValue 0018                             ___fpclassifyf@F465 0090  
                              _I2C_MasterClose 69A6                  I2C_SetAddressNackCallback@ptr 000C  
                              I2C_Open@address 0005                                       ___xxtofl 4ECA  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 699E  
                              _I2C_MasterWrite 6922                               __size_of_isdigit 0038  
                         _EUSART_RxDataHandler 674C                              ??_I2C_WriteNBytes 001A  
                             __size_of_isspace 0052                                       __ptext10 65B2  
                                     __ptext11 6400                                       __ptext20 6542  
                                     __ptext12 5C80                                       __ptext21 4260  
                                     __ptext13 68D4                                       __ptext30 6776  
                                     __ptext22 5494                                       __ptext14 62CA  
                                     __ptext31 686E                                       __ptext23 5B30  
                                     __ptext15 4CB8                                       __ptext40 5F96  
                                     __ptext32 4A24                                       __ptext24 468A  
                                     __ptext16 5598                                       __ptext41 6800  
                                     __ptext33 4ECA                                       __ptext25 5A80  
                                     __ptext17 538E                                       __ptext50 68B0  
                                     __ptext42 5D16                                       __ptext34 106E  
                                     __ptext26 5838                                       __ptext18 6374  
                                     __ptext51 692A                                       __ptext43 67C0  
                                     __ptext35 6270                                       __ptext27 507E  
                                     __ptext19 3900                                       __ptext60 58FC  
                                     __ptext52 6932                                       __ptext44 6922  
                                     __ptext36 607A                                       __ptext28 6322  
                                     __ptext61 6890                                       __ptext53 693A  
                                     __ptext45 6444                                       __ptext37 63BA  
                                     __ptext29 657A                                       __ptext70 6970  
                                     __ptext62 68A0                                       __ptext54 6942  
                                     __ptext46 67E2                                       __ptext38 691A  
                                     __ptext71 698A                                       __ptext63 68C8  
                                     __ptext55 694A                                       __ptext47 6880  
                                     __ptext39 5DA4                                       __ptext80 5EA6  
                                     __ptext72 698E                                       __ptext64 5E2A  
                                     __ptext56 6952                                       __ptext48 600A  
                                     __ptext81 679C                                       __ptext73 6992  
                                     __ptext65 6982                                       __ptext57 695A  
                                     __ptext49 60E8                                       __ptext90 65E8  
                                     __ptext82 6996                                       __ptext74 64CA  
                                     __ptext66 6846                                       __ptext58 68BC  
                                     __ptext91 68DE                                       __ptext83 699A  
                                     __ptext75 6646                                       __ptext67 6962  
                                     __ptext59 5BDA                                       __ptext92 69AE  
                                     __ptext84 699E                                       __ptext76 6672  
                                     __ptext68 696A                                       __ptext93 685A  
                                     __ptext85 66F6                                       __ptext77 669E  
                                     __ptext69 6986                                       __ptext94 5F20  
                                     __ptext86 69A2                                       __ptext78 66CA  
                                     __ptext95 68E8                                       __ptext87 69A6  
                                     __ptext79 6818                                       __ptext96 68F2  
                                     __ptext88 69AA                                       __ptext97 68FC  
                                     __ptext89 6830                                       __ptext98 6906  
                                     __ptext99 6910                               __size_of_isupper 0038  
                            VL53L0X_Init@data8 0021            __end_of_I2C_SetDataCompleteCallback 6830  
                  _I2C_SetDataCompleteCallback 6818                        ?_I2C_DO_RX_NACK_RESTART 0001  
                             __size_of_tolower 0060                                     strcpy@dest 0005  
                             __size_of_strncmp 00DC                       __end_of_I2C_DO_SEND_STOP 694A  
                                __size_of_atoi 019A                                  __size_of_main 0176  
                                     _range_cm 0094                                       _range_mm 0098  
                      ?_EUSART_SetErrorHandler 0005                                _I2C_SetCallback 5EA6  
                ??_I2C_SetDataCompleteCallback 000E                     I2C_Write1ByteRegister@data 0017  
                                     efgtoa@fp 0032                                       efgtoa@ne 00C5  
                                     efgtoa@pp 00C3                                       efgtoa@ou 00C9  
EUSART_SetOverrunErrorHandler@interruptHandler 0005                                       isa$xinst 000000  
                            VL53L0X_SetAdd@new 0019                                       int$flags 005B  
                        ?_I2C_DO_SEND_ADR_READ 0001                                       _vfprintf 614E  
           __end_of_INTERRUPT_InterruptManager 00B0                     _INTERRUPT_InterruptManager 0008  
                                    printf@fmt 00F3          __end_of_EUSART_SetFramingErrorHandler 6910  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 6906  
                     __end_of_I2C_MasterIsNack 685A                       __end_of_I2C_MasterSetIrq 6986  
                               _vfpfcnvrt$2190 004A                                 _vfpfcnvrt$2186 0048  
                                   _INTCONbits 000FF2                             I2C_WriteNBytes@len 0018  
                        ?_EUSART_RxDataHandler 0001                                       isdigit@c 0005  
                       ??_INTERRUPT_Initialize 0005                 __end_of_I2C_DO_RX_NACK_RESTART 6932  
                                     intlevel2 0000                                    ?_I2C_Poller 0001  
                       fp__EUSART_Transmit_ISR 0000               __size_of_I2C_MasterEnableRestart 0004  
                                     isspace@c 0005                        ?_PIN_MANAGER_Initialize 0001  
               __end_of_EUSART_SetErrorHandler 691A                            _I2C_DO_SEND_RESTART 694A  
                                    strcpy@src 0007                  __size_of_I2C_MasterDisableIrq 0004  
                                     isupper@c 0005                         fp__I2C_DO_ADDRESS_NACK 0000  
                                    strncmp@_l 0005                                      strncmp@_r 0007  
         __end_of_EUSART_SetRxInterruptHandler 68FC          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 68F2                __size_of_I2C_MasterWaitForEvent 0010  
                                  efgtoa@nmode 00D5                                       printf@ap 0178  
              __size_of_I2C_Write1ByteRegister 006E                             _EUSART_Receive_ISR 59C0  
EUSART_SetFramingErrorHandler@interruptHandler 0005                        __end_of_I2C_MasterClose 69AA  
                     __size_of_I2C_DO_TX_EMPTY 007C                             fp__I2C_DO_TX_EMPTY 0000  
                                  ??_vfpfcnvrt 0044                        __end_of_I2C_MasterStart 69A2  
                      __end_of_I2C_MasterWrite 692A                           ?_I2C_DO_SEND_RESTART 0001  
                                     tolower@c 000B                            ?_EUSART_Receive_ISR 0001  
                       __size_of___fpclassifyf 00FE                  fp__EUSART_DefaultErrorHandler 0000  
                 __size_of_I2C_MasterGetRxData 0004                                       strncmp@l 000C  
                                     strncmp@n 0009                                       strncmp@r 000E  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                                ___fladd@signs 0011                    __size_of_I2C_MasterClearIrq 0004  
                           EUSART_Write@txData 0005                   __size_of_EUSART_Transmit_ISR 0042  
                      __end_of_I2C_SetCallback 5F20                 __end_of_PIN_MANAGER_Initialize 661A  
               __size_of_rd1RegCompleteHandler 002C                  __end_of_rd1RegCompleteHandler 66CA  
                       __size_of_I2C_DO_RX_ACK 0008                               fp__I2C_DO_RX_ACK 0000  
                                 ___fladd@aexp 0012                                   ___fladd@bexp 0013  
               __size_of_wr1RegCompleteHandler 002C                           ??_EUSART_Receive_ISR 0001  
                        __size_of_I2C_DO_RESET 000C                  __end_of_wr1RegCompleteHandler 6672  
                 __size_of_I2C_DO_ADDRESS_NACK 0066                           __size_of_I2C_DO_IDLE 000C  
                         __size_of_I2C_DO_RCEN 000C                             __size_of_I2C_DO_RX 00A6  
                           __size_of_I2C_DO_TX 00C4  
